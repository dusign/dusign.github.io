<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>CCF-CSP Questions (one)</title>
      <link href="/2019/04/14/CCF-CSP-Questions-one-0/"/>
      <url>/2019/04/14/CCF-CSP-Questions-one-0/</url>
      
        <content type="html"><![CDATA[<p>Algorithms change the world. The importance of algorithms is self-evident to a programmer, so the practice of some algorithms is indispensable. Next, I will share some algorithmic problems.</p><h2 id="Question"><a href="#Question" class="headerlink" title="Question"></a>Question</h2><p><img src="slm.png" alt="question"></p><h2 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h2><p>This problem involves the maximum, minimum and median. Because the knowledge is relatively simple, I will not explain it here.</p><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><p>Here is the solution to this problem.The following are two solutions, the result is 100 points.</p><h3 id="Program"><a href="#Program" class="headerlink" title="Program"></a>Program</h3><h4 id="Method-One"><a href="#Method-One" class="headerlink" title="Method One"></a>Method One</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  main.cpp</span></span><br><span class="line"><span class="comment">//  sml</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  Created by gang du on 2019/4/14.</span></span><br><span class="line"><span class="comment">//  Copyright © 2019 gang du. All rights reserved.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN = <span class="number">100000</span>;</span><br><span class="line"><span class="keyword">int</span> n, data[MAXN];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i, max, min;</span><br><span class="line">    <span class="keyword">double</span> middle;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;n; i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;data[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (data[<span class="number">0</span>] &lt;= data[n<span class="number">-1</span>])&#123;</span><br><span class="line">        max = data[n<span class="number">-1</span>];</span><br><span class="line">        min = data[<span class="number">0</span>];</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        min = data[n<span class="number">-1</span>];</span><br><span class="line">        max = data[<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (n%<span class="number">2</span>==<span class="number">0</span>)&#123;</span><br><span class="line">        middle = (data[n/<span class="number">2</span>]+data[n/<span class="number">2</span><span class="number">-1</span>])*<span class="number">1.0</span>/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span> (middle - (<span class="keyword">int</span>)middle == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d %d %d\n"</span>, max, (<span class="keyword">int</span>)middle, min);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d %.1f %d\n"</span>, max, middle, min);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        middle = data[(n<span class="number">-1</span>)/<span class="number">2</span>];</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d %d %d\n"</span>, max, (<span class="keyword">int</span>)middle, min);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Method-Two"><a href="#Method-Two" class="headerlink" title="Method Two"></a>Method Two</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  main.cpp</span></span><br><span class="line"><span class="comment">//  sml</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  Created by gang du on 2019/4/14.</span></span><br><span class="line"><span class="comment">//  Copyright © 2019 gang du. All rights reserved.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, data, max=<span class="number">0</span>, min=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">double</span> middle=<span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    <span class="keyword">int</span> parity = n &amp; <span class="number">1</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;data);</span><br><span class="line">        <span class="keyword">if</span>(i==<span class="number">0</span>) min=data;</span><br><span class="line">        <span class="keyword">if</span>(i==n<span class="number">-1</span>) max=data;</span><br><span class="line">        <span class="keyword">if</span>(parity &amp;&amp; i==n/<span class="number">2</span>)&#123;</span><br><span class="line">            middle=data;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(!parity &amp;&amp; (i==n/<span class="number">2</span> || i==n/<span class="number">2</span><span class="number">-1</span>))</span><br><span class="line">            middle += data*<span class="number">1.0</span>/<span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(max&lt;=min)&#123;</span><br><span class="line">        <span class="keyword">int</span> temp = max;</span><br><span class="line">        max = min;</span><br><span class="line">        min = temp;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(middle - (<span class="keyword">int</span>)middle == <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d %d %d\n"</span>, max, (<span class="keyword">int</span>)middle, min);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d %.1f %d\n"</span>, max, middle, min);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Remarks"><a href="#Remarks" class="headerlink" title="Remarks"></a>Remarks</h3><p>This program is written in C++ and uses standard input and output functions.</p>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> algorithm </tag>
            
            <tag> ccf-csp </tag>
            
            <tag> c++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux Reads Serial Data</title>
      <link href="/2019/03/25/Linux-Reads-Serial-Data/"/>
      <url>/2019/03/25/Linux-Reads-Serial-Data/</url>
      
        <content type="html"><![CDATA[<p>Computer serial port data reading is often used when using sensors. Next, I introduce the method of reading Linux serial port data in a project. I hope it will be helpful to you.</p><h2 id="Data-Format"><a href="#Data-Format" class="headerlink" title="Data Format"></a>Data Format</h2><p>A set of data transmitted by the sensor through serial port is 13 bytes. The data format is as follows:<br><img src="data-format.PNG" alt="data format"></p><h2 id="Initialize-Serial-Port"><a href="#Initialize-Serial-Port" class="headerlink" title="Initialize Serial Port"></a>Initialize Serial Port</h2><p>We need to initialize the serial port before reading the serial port data. The initialization of the serial port needs three steps:opening the serial port, setting the parameters of the serial port (including baud rate, data bit, stop bit, check bit).</p><h3 id="Opening-the-Port"><a href="#Opening-the-Port" class="headerlink" title="Opening the Port"></a>Opening the Port</h3><p>The procedure of opening serial port is as follow, function returns a handle:<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">openPort</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> fd;</span><br><span class="line">    fd = open(SERIAL_PORT, O_RDWR | O_NOCTTY |O_NDELAY);   </span><br><span class="line">    <span class="keyword">if</span>(fd == <span class="number">-1</span>)</span><br><span class="line">  &#123;</span><br><span class="line">        perror(<span class="string">"open serial failed!\n"</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;    </span><br><span class="line">    <span class="keyword">return</span> fd;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>SERIAL_PORT is a serial address;<br>O_RDWR means to open in a readable and writable manner;<br>O_NOCTTY indicates that if the open file is a terminal device, the terminal will not be regarded as a process control terminal;<br>O_NDELAY denotes opening a file in an uninterruptible manner.</p><h3 id="Setting-the-Parameters"><a href="#Setting-the-Parameters" class="headerlink" title="Setting the Parameters"></a>Setting the Parameters</h3><p>Here is the program for setting baud rate and data bits<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">setSpeed</span><span class="params">(<span class="keyword">int</span> fd, <span class="keyword">int</span> speed, struct termios Opt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> i;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>(tcgetattr(STDIN_FILENO, &amp;Opt) != <span class="number">0</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    perror(<span class="string">"tcgetattr fd\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//识别波特率,设置输入输出波特率</span></span><br><span class="line">  <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; <span class="keyword">sizeof</span>(speed_arr) / <span class="keyword">sizeof</span>(<span class="keyword">int</span>); i++)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span>(speed == name_arr[i])</span><br><span class="line">    &#123;</span><br><span class="line">      tcflush(fd, TCIOFLUSH);</span><br><span class="line">      <span class="comment">//设置波特率</span></span><br><span class="line">      cfsetispeed(&amp;Opt, speed_arr[i]);</span><br><span class="line">      cfsetospeed(&amp;Opt, speed_arr[i]);</span><br><span class="line">            </span><br><span class="line">      <span class="comment">//设置数据接收方式</span></span><br><span class="line">      <span class="keyword">if</span>(tcsetattr(fd, TCSANOW, &amp;Opt) != <span class="number">0</span>)</span><br><span class="line">      &#123;</span><br><span class="line">        perror(<span class="string">"tcsetattr fd"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      tcflush(fd, TCIOFLUSH);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">setParity</span><span class="params">(<span class="keyword">int</span> fd, <span class="keyword">int</span> databits, <span class="keyword">int</span> stopbits, <span class="keyword">int</span> parity, struct termios Opt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(tcgetattr(fd, &amp;Opt) != <span class="number">0</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    perror(<span class="string">"tcgetattr fd"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  Opt.c_cflag |= (CLOCAL | CREAD);       <span class="comment">//CLOCAL：忽略 modem 控制线。 </span></span><br><span class="line">                                            <span class="comment">//CREAD：打开接受者。</span></span><br><span class="line">  <span class="keyword">switch</span>(databits)           <span class="comment">//设置数据位数</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">      Opt.c_cflag &amp;= ~CSIZE;<span class="comment">//屏蔽字符大小位</span></span><br><span class="line">      Opt.c_cflag |= CS7;    <span class="comment">//选择7位数据位</span></span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">      Opt.c_cflag &amp;= ~CSIZE;</span><br><span class="line">      Opt.c_cflag |= CS8;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">      <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"Unsupported data size.\n"</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">switch</span>(parity)            <span class="comment">//设置校验位</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">'n'</span>:</span><br><span class="line">      Opt.c_cflag &amp;= ~PARENB;        <span class="comment">//清除校验位</span></span><br><span class="line">      Opt.c_iflag &amp;= ~INPCK;        <span class="comment">//启用输入奇偶检测。  </span></span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">'o'</span>:</span><br><span class="line">      Opt.c_cflag |= PARENB;         <span class="comment">//使能校验位</span></span><br><span class="line">      Opt.c_cflag |= PARODD;        <span class="comment">//奇校验</span></span><br><span class="line">      Opt.c_iflag |= INPCK;            <span class="comment">//启用输入奇偶检测。</span></span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">'e'</span>:</span><br><span class="line">      Opt.c_cflag |= PARENB;         <span class="comment">//使能校验位</span></span><br><span class="line">      Opt.c_cflag &amp;= ~PARODD;        <span class="comment">//偶校验</span></span><br><span class="line">      Opt.c_iflag |= INPCK;            <span class="comment">//启用输入奇偶检测。</span></span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">'s'</span>:</span><br><span class="line">      Opt.c_cflag &amp;= ~PARENB;        <span class="comment">//清除校验位</span></span><br><span class="line">      Opt.c_cflag &amp;= ~CSTOPB;       <span class="comment">//设置一个停止位</span></span><br><span class="line">      Opt.c_iflag |= INPCK;            <span class="comment">//启用输入奇偶检测。</span></span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">      <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"Unsupported parity.\n"</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="number">1</span>;    </span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">switch</span>(stopbits)        <span class="comment">//设置停止位</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">      Opt.c_cflag &amp;= ~CSTOPB;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">      Opt.c_cflag |= CSTOPB;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">      <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"Unsupported stopbits.\n"</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  Opt.c_cflag |= (CLOCAL | CREAD);</span><br><span class="line"></span><br><span class="line">  Opt.c_lflag &amp;= ~(ICANON | ECHO | ECHOE | ISIG);</span><br><span class="line"> </span><br><span class="line">  Opt.c_oflag &amp;= ~OPOST;          <span class="comment">//OPOST ：启用具体实现自行定义的输出处理。</span></span><br><span class="line">  Opt.c_oflag &amp;= ~(ONLCR | OCRNL);        <span class="comment">//OCRNL ：将输出中的回车映射为新行符  </span></span><br><span class="line">                                   <span class="comment">//ONLCR ：(XSI) 将输出中的新行符映射为回车-换行。</span></span><br><span class="line">  Opt.c_iflag &amp;= ~(ICRNL | INLCR);        <span class="comment">//ICRNL :将输入中的回车翻译为新行 (除非设置了 IGNCR)(否则当输入信号有 CR 时不会终止输入)。 </span></span><br><span class="line">                                          <span class="comment">//INLCR :将输入中的 NL 翻译为 CR。（将收到的换行符号转换为Return）</span></span><br><span class="line">  Opt.c_iflag &amp;= ~(IXON | IXOFF | IXANY); <span class="comment">//IXON :启用输出的 XON/XOFF 流控制。</span></span><br><span class="line">                                          <span class="comment">//IXOFF :启用输入的 XON/XOFF 流控制。</span></span><br><span class="line">                                          <span class="comment">//IXANY :(不属于 POSIX.1；XSI) 允许任何字符来重新开始输出。</span></span><br><span class="line">  tcflush(fd, TCIFLUSH);  <span class="comment">//清空输入缓存</span></span><br><span class="line">                                          <span class="comment">//MIN = 0 , TIME =0; 有READ立即回传否则传回 0,不读取任何字元</span></span><br><span class="line">  Opt.c_cc[VTIME] = <span class="number">0</span>;        </span><br><span class="line">  Opt.c_cc[VMIN] = <span class="number">0</span>;        </span><br><span class="line">    </span><br><span class="line">  <span class="keyword">if</span>(tcsetattr(fd, TCSANOW, &amp;Opt) != <span class="number">0</span>)  <span class="comment">//设置数据接收方式</span></span><br><span class="line">  &#123;</span><br><span class="line">    perror(<span class="string">"tcsetattr fd"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="Initialize-Port"><a href="#Initialize-Port" class="headerlink" title="Initialize Port"></a>Initialize Port</h3><p>Use the following program to initialize the serial port, the function returns a handle.<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">init</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> fd;</span><br><span class="line">  <span class="class"><span class="keyword">struct</span> <span class="title">termios</span> <span class="title">opt</span>;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">//打开串口</span></span><br><span class="line">  fd = openPort();</span><br><span class="line">  </span><br><span class="line">  <span class="comment">//设置波特率</span></span><br><span class="line">  <span class="keyword">if</span>(setSpeed(fd, PORT_SPEED, opt) == <span class="number">1</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"setSpeed failed!\n"</span>);</span><br><span class="line">  <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">//设置数据位、停止位和校验位</span></span><br><span class="line">  <span class="keyword">if</span>(setParity(fd, DATABITS, STOPBITS, PARITY, opt) == <span class="number">1</span>)</span><br><span class="line">  &#123;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"setParity failed!\n"</span>);</span><br><span class="line">  <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">  &#125; </span><br><span class="line">  <span class="keyword">if</span>(tcsetattr(fd, TCSANOW, &amp;opt) != <span class="number">0</span>)<span class="comment">//TCSANOW：不等数据传输完毕就立即改变属性。</span></span><br><span class="line">  &#123;<span class="comment">//TCSADRAIN：等待所有数据传输结束才改变属性。</span></span><br><span class="line">    perror(<span class="string">"serial error"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> fd;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="Data-Reading-and-Analysis"><a href="#Data-Reading-and-Analysis" class="headerlink" title="Data Reading and Analysis"></a>Data Reading and Analysis</h2><p>A set of data has 13 characters, each time we read a character, we can judge whether it is the starting bit at each reading, and separate each group of data. The judgement method is as follows:<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">readPort</span><span class="params">(<span class="keyword">int</span> fd)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">time_t</span> t;</span><br><span class="line">  <span class="keyword">int</span> signal=<span class="number">0</span>,pm1_0,pm1_1,pm2_0,pm2_1,pm10_0,pm10_1,pm1,pm2,pm10,temporary;</span><br><span class="line">  <span class="keyword">int</span> i,len,n,parameter1,parameter2,Initiator;</span><br><span class="line">  <span class="keyword">char</span> read_buf[<span class="number">24</span>],sql_insert[<span class="number">200</span>];</span><br><span class="line">  <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    bzero(read_buf, <span class="keyword">sizeof</span>(read_buf));    </span><br><span class="line">    <span class="keyword">while</span>((n = read(fd, read_buf, <span class="keyword">sizeof</span>(read_buf))) &gt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="comment">//printf("\nlen= %d \n",n);</span></span><br><span class="line">      <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> tst=(<span class="keyword">int</span>)read_buf[i];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 判断起始符号</span></span><br><span class="line">        parameter2=parameter1;</span><br><span class="line">        parameter1=tst;</span><br><span class="line">        Initiator=parameter1+parameter1;</span><br><span class="line">        <span class="comment">// 累加标志</span></span><br><span class="line">        signal++;</span><br><span class="line">        <span class="comment">// 判断起始位位置</span></span><br><span class="line">        <span class="keyword">if</span>(parameter2==<span class="number">66</span> &amp;&amp; parameter1==<span class="number">77</span>) signal=<span class="number">2</span>;                 </span><br><span class="line">        <span class="keyword">if</span>(signal==<span class="number">11</span>) pm1_0=tst;</span><br><span class="line">        <span class="keyword">if</span>(signal==<span class="number">12</span>) pm1_1=tst;</span><br><span class="line">        <span class="keyword">if</span>(signal==<span class="number">13</span>) pm2_0=tst;</span><br><span class="line">        <span class="keyword">if</span>(signal==<span class="number">14</span>) pm2_1=tst;</span><br><span class="line">        <span class="keyword">if</span>(signal==<span class="number">15</span>) pm10_0=tst;</span><br><span class="line">        <span class="keyword">if</span>(signal==<span class="number">16</span>) pm10_1=tst;</span><br><span class="line">        pm1=pm1_0*<span class="number">256</span>+pm1_1;</span><br><span class="line">        pm2=pm2_0*<span class="number">256</span>+pm2_1;</span><br><span class="line">        pm10=pm10_0*<span class="number">256</span>+pm10_1;</span><br><span class="line">        <span class="keyword">if</span>(signal==<span class="number">49</span>) signal=<span class="number">1</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n pm1.0=%d   pm2.5=%d   pm10=%d \n"</span> ,pm1,pm2,pm10);</span><br><span class="line">        temporary=<span class="number">24</span>;</span><br><span class="line">        t=time(<span class="number">0</span>);</span><br><span class="line">        <span class="built_in">sprintf</span>(sql_insert,<span class="string">"insert into dust_data(`date`,`pm1.0`,`pm2.5`,`pm10`,`temporary`,`host_ip`) values ('%ld','%d','%d','%d','%d','127.0.0.1')"</span>,t,pm1,pm2,pm10,temporary);</span><br><span class="line">        executesql(<span class="string">"delete from dust_data limit 1"</span>);</span><br><span class="line">        executesql(sql_insert);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="Database-Operation"><a href="#Database-Operation" class="headerlink" title="Database Operation"></a>Database Operation</h2><p>I built MySQL database locally and wrote the readed datas directly into the database.</p><h3 id="Initialize-Connection"><a href="#Initialize-Connection" class="headerlink" title="Initialize Connection"></a>Initialize Connection</h3><p>First, initialize the database using the following method:<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">init_mysql</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// init the database connection</span></span><br><span class="line">    g_conn = mysql_init(<span class="literal">NULL</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/* connect the database */</span></span><br><span class="line">    <span class="keyword">if</span>(!mysql_real_connect(g_conn, g_host_name, g_user_name, g_password, g_db_name, g_db_port, <span class="literal">NULL</span>, <span class="number">0</span>))</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>g_host_name is the database address;<br>g_user_name is the database user name;<br>g_password is the database password;<br>g_db_name is the name of the database;<br>g_db_port is the database port;</p><h3 id="Database-Operation-1"><a href="#Database-Operation-1" class="headerlink" title="Database Operation"></a>Database Operation</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">executesql</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> * sql)</span> </span>&#123;</span><br><span class="line">    <span class="comment">/*query the database according the sql*/</span></span><br><span class="line">    <span class="keyword">if</span> (mysql_real_query(g_conn, sql, <span class="built_in">strlen</span>(sql)))</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>; </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> serial port </tag>
            
            <tag> data read </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LAMP Server Environment Tutorial</title>
      <link href="/2019/03/19/LAMP-Server-Environment-Tutorial/"/>
      <url>/2019/03/19/LAMP-Server-Environment-Tutorial/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> web server </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LAMP </tag>
            
            <tag> centos </tag>
            
            <tag> web server </tag>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Start using hexo</title>
      <link href="/2019/03/17/Start-using-hexo/"/>
      <url>/2019/03/17/Start-using-hexo/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> github </tag>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vim configuration</title>
      <link href="/2019/03/17/Vim-configuration/"/>
      <url>/2019/03/17/Vim-configuration/</url>
      
        <content type="html"><![CDATA[<p>Vim is one of the most popular text editors on linux, and it is a very powerful editor.</p><p>Next, I take CentOS as an example to introduce the configuration of my vim.</p><h2 id="Live-Demo"><a href="#Live-Demo" class="headerlink" title="Live Demo"></a>Live Demo</h2><p><img src="Live-demo.png" alt=""></p><h2 id="Install-Vim"><a href="#Install-Vim" class="headerlink" title="Install Vim"></a>Install Vim</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./configure --with-features=huge --<span class="built_in">enable</span>-multibyte --<span class="built_in">enable</span>-rubyinterp=yes --<span class="built_in">enable</span>-pythoninterp=yes --<span class="built_in">enable</span>-python3interp=yes --<span class="built_in">enable</span>-luainterp --<span class="built_in">enable</span>-perlinterp --<span class="built_in">enable</span>-cscope</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><h2 id="Install-Vundle"><a href="#Install-Vundle" class="headerlink" title="Install Vundle"></a>Install Vundle</h2><blockquote><p>Vundle is short for Vim bundle and is a Vim plugin manager.<br>.<br>Vundle allows you to…</p><ul><li>keep track of and configure your plugins right in the .vimrc</li><li>install configured plugins (a.k.a. scripts/bundle)</li><li>update configured plugins</li><li>search by name all available Vim scripts</li><li>clean unused plugins up</li><li>run the above actions in a single keypress with interactive mode</li></ul><p>Vundle automatically…</p><ul><li>manages the runtime path of your installed scripts</li><li>regenerates help tags after installing and updating</li></ul></blockquote><h3 id="Install-Git"><a href="#Install-Git" class="headerlink" title="Install Git"></a>Install Git</h3><p>If your Linux does not install git, install it using the following commands.Because the <code>git clone</code> command is used during installation.<br><code>sudo yum install git</code></p><h3 id="Set-up-Vundle"><a href="#Set-up-Vundle" class="headerlink" title="Set up Vundle"></a>Set up Vundle</h3><p>Install Vundle using the following commands<br><code>git clone https://github.com/VundleVim/Vundle.vim.git /.vim/bundle/Vundle.vim</code></p><h3 id="Configure-Plugins"><a href="#Configure-Plugins" class="headerlink" title="Configure Plugins"></a>Configure Plugins</h3><p>Put this at the top of your <code>.vimrc</code>to use Vundle. Remove plugins you don’t need, they are for illustration purposes.<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> nocompatible              <span class="string">" be iMproved, required</span></span><br><span class="line"><span class="string">filetype off                  "</span> required</span><br><span class="line"></span><br><span class="line"><span class="string">" set the runtime path to include Vundle and initialize</span></span><br><span class="line"><span class="string">set rtp+=/.vim/bundle/Vundle.vim</span></span><br><span class="line"><span class="string">call vundle#begin()</span></span><br><span class="line"><span class="string">"</span> alternatively, pass a path <span class="built_in">where</span> Vundle should install plugins</span><br><span class="line"><span class="string">"call vundle#begin('/some/path/here')</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"</span> <span class="built_in">let</span> Vundle manage Vundle, required</span><br><span class="line">Plugin <span class="string">'VundleVim/Vundle.vim'</span></span><br><span class="line"></span><br><span class="line"><span class="string">" The following are examples of different formats supported.</span></span><br><span class="line"><span class="string">"</span> Keep Plugin commands between vundle<span class="comment">#begin/end.</span></span><br><span class="line"><span class="string">" plugin on GitHub repo</span></span><br><span class="line"><span class="string">Plugin 'tpope/vim-fugitive'</span></span><br><span class="line"><span class="string">"</span> plugin from http://vim-scripts.org/vim/scripts.html</span><br><span class="line"><span class="string">" Plugin 'L9'</span></span><br><span class="line"><span class="string">"</span> Git plugin not hosted on GitHub</span><br><span class="line">Plugin <span class="string">'git://git.wincent.com/command-t.git'</span></span><br><span class="line"><span class="string">" git repos on your local machine (i.e. when working on your own plugin)</span></span><br><span class="line"><span class="string">Plugin 'file:///home/gmarik/path/to/plugin'</span></span><br><span class="line"><span class="string">"</span> The sparkup vim script is <span class="keyword">in</span> a subdirectory of this repo called vim.</span><br><span class="line"><span class="string">" Pass the path to set the runtimepath properly.</span></span><br><span class="line"><span class="string">Plugin 'rstacruz/sparkup', &#123;'rtp': 'vim/'&#125;</span></span><br><span class="line"><span class="string">"</span> Install L9 and avoid a Naming conflict <span class="keyword">if</span> you<span class="string">'ve already installed a</span></span><br><span class="line"><span class="string">" different version somewhere else.</span></span><br><span class="line"><span class="string">" Plugin '</span>ascenator/L9<span class="string">', &#123;'</span>name<span class="string">': '</span>newL9<span class="string">'&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">" All of your Plugins must be added before the following line</span></span><br><span class="line"><span class="string">call vundle#end()            " required</span></span><br><span class="line"><span class="string">filetype plugin indent on    " required</span></span><br><span class="line"><span class="string">" To ignore plugin indent changes, instead use:</span></span><br><span class="line"><span class="string">"filetype plugin on</span></span><br><span class="line"><span class="string">"</span></span><br><span class="line"><span class="string">" Brief help</span></span><br><span class="line"><span class="string">" :PluginList       - lists configured plugins</span></span><br><span class="line"><span class="string">" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate</span></span><br><span class="line"><span class="string">" :PluginSearch foo - searches for foo; append `!` to refresh local cache</span></span><br><span class="line"><span class="string">" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal</span></span><br><span class="line"><span class="string">"</span></span><br><span class="line"><span class="string">" see :h vundle for more details or wiki for FAQ</span></span><br><span class="line"><span class="string">" Put your non-Plugin stuff after this line</span></span><br></pre></td></tr></table></figure></p><h2 id="Install-Vim-Plugins"><a href="#Install-Vim-Plugins" class="headerlink" title="Install Vim Plugins"></a>Install Vim Plugins</h2><p>With the <code>:PluginInstall</code>command, Vundle automatically downloads and installs the Vim plugin from <code>github.com</code> or <code>vim-scripts.org</code>.</p><h3 id="Configuration-of-vimrc"><a href="#Configuration-of-vimrc" class="headerlink" title="Configuration of .vimrc"></a>Configuration of .vimrc</h3><p>Installation Plugins from github:<br><code>Plugin ‘user/plugin’</code><br>Installation Plugins from <a href="http://vim-script.org/vim/scripts.html" target="_blank" rel="noopener">http://vim-script.org/vim/scripts.html</a>:<br><code>Plugin ‘plugin_name’</code><br>Installation Plugins from another github repositories:<br><code>Plugin ‘git://git.another_repo.com/plugin’</code></p><h3 id="Install-Plugins"><a href="#Install-Plugins" class="headerlink" title="Install Plugins"></a>Install Plugins</h3><p>Launch <code>vim</code> and run <code>:PluginInstall</code><br>To install from command line:<code>vim +PluginInstall +qall</code></p><h3 id="Vundle-commands"><a href="#Vundle-commands" class="headerlink" title="Vundle commands"></a>Vundle commands</h3><h4 id="Install-new-plug-ins"><a href="#Install-new-plug-ins" class="headerlink" title="Install new plug-ins"></a>Install new plug-ins</h4><p>The command <code>PluginInstall</code> can install all the plug-ins listed in your <code>.vimrc</code>. You could also install only one specific plug-in by passing its name.<br><code>:PluginInstall</code><br><code>:PluginInstall &lt;plugin-name&gt;</code></p><h4 id="Clean-up-unused-plug-ins"><a href="#Clean-up-unused-plug-ins" class="headerlink" title="Clean up unused plug-ins"></a>Clean up unused plug-ins</h4><p>The command <code>PluginClean</code> can clean up any plugins you have unused.<br><code>:PluginClean</code></p><h4 id="Search-plug-in"><a href="#Search-plug-in" class="headerlink" title="Search plug-in"></a>Search plug-in</h4><p>The search function is useful if you want to install a plugin from the list of plugins provided.<br>During the search, you can install, clean, research, or reload the same list on the interactive split screen. Install the plugin does not automatically load your plugin, if you want to automatically load the plugin and add the plugin to your <code>.vimrc</code>, such as <code>:PluginSearch taglist</code>, after completing the search, you can press ‘i’ to install.<br><code>:PluginSearch &lt;text-list&gt;</code></p><h2 id="Vim-Plugin-recommendation"><a href="#Vim-Plugin-recommendation" class="headerlink" title="Vim Plugin recommendation"></a>Vim Plugin recommendation</h2><p>The VIM plug-in can greatly improve the efficiency of vim usage. Here I introduce several better VIM plug-ins and show my VIM configuration file.</p><h3 id="VIM-Plugin"><a href="#VIM-Plugin" class="headerlink" title="VIM Plugin"></a>VIM Plugin</h3><ul><li>nerdtree<ul><li>vim-airline</li><li>vim-airline-themes</li></ul></li><li>tagbar</li><li>nerdcommenter</li><li>auto-pairs</li><li>DoxygenToolkit</li><li>Pydiction</li></ul><h3 id="vimrc"><a href="#vimrc" class="headerlink" title=".vimrc"></a>.vimrc</h3><p>Here is the <code>.vimrc</code> on my linux<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">" For full syntax highlighting</span></span><br><span class="line"><span class="string">syntax on</span></span><br><span class="line"><span class="string">"</span> make backspaces nore powerfull</span><br><span class="line"><span class="built_in">set</span> nocompatible              <span class="string">" be iMproved, required</span></span><br><span class="line"><span class="string">set backspace=indent,eol,start</span></span><br><span class="line"><span class="string">"</span> 启动时隐去援助提示</span><br><span class="line"><span class="built_in">set</span> shortmess=atI</span><br><span class="line"><span class="string">" 不需要备份</span></span><br><span class="line"><span class="string">set nobackup</span></span><br><span class="line"><span class="string">"</span> c文件自动缩进</span><br><span class="line"><span class="built_in">set</span> cindent</span><br><span class="line"><span class="string">" Tab自动转换成空格</span></span><br><span class="line"><span class="string">set expandtab</span></span><br><span class="line"><span class="string">"</span> 一个tab缩进字符</span><br><span class="line"><span class="built_in">set</span> tabstop=4</span><br><span class="line"><span class="string">" 编辑模式的时候按退格键退回缩进的长度</span></span><br><span class="line"><span class="string">set softtabstop=4</span></span><br><span class="line"><span class="string">"</span> 每一级锁进的长度</span><br><span class="line"><span class="built_in">set</span> shiftwidth=4</span><br><span class="line"><span class="string">" 自动锁进</span></span><br><span class="line"><span class="string">set autoindent</span></span><br><span class="line"><span class="string">"</span> 智能缩进</span><br><span class="line"><span class="built_in">set</span> smartindent</span><br><span class="line"><span class="string">" 高亮查找匹配</span></span><br><span class="line"><span class="string">set hlsearch</span></span><br><span class="line"><span class="string">"</span> 显示匹配</span><br><span class="line"><span class="built_in">set</span> showmatch</span><br><span class="line"><span class="string">" 显示标尺，就是在右下角光标位置</span></span><br><span class="line"><span class="string">set ruler</span></span><br><span class="line"><span class="string">"</span> 启动显示状态行</span><br><span class="line"><span class="built_in">set</span> laststatus=2</span><br><span class="line"><span class="string">" 浅色显示当前行</span></span><br><span class="line"><span class="string">autocmd InsertLeave * se nocul</span></span><br><span class="line"><span class="string">"</span> 用浅色高亮当前行</span><br><span class="line"><span class="string">"autocmd insertEnter * se cul</span></span><br><span class="line"><span class="string">"</span> 显示输入命令</span><br><span class="line"><span class="built_in">set</span> showcmd</span><br><span class="line"><span class="string">"I don't like swap files</span></span><br><span class="line"><span class="string">set noswapfile</span></span><br><span class="line"><span class="string">"</span>turn on numbering</span><br><span class="line"><span class="built_in">set</span> nu!</span><br><span class="line"><span class="string">" Set the default file encoding to UTF-8:</span></span><br><span class="line"><span class="string">set encoding=utf-8</span></span><br><span class="line"><span class="string">"</span> 设置双字款显示，否则无法显示一个图标</span><br><span class="line"><span class="built_in">set</span> ambiwidth=double</span><br><span class="line"><span class="string">" 被分割窗口之间显示空白</span></span><br><span class="line"><span class="string">set fillchars=vert:/ </span></span><br><span class="line"><span class="string">set fillchars=stl:/</span></span><br><span class="line"><span class="string">"</span><span class="built_in">set</span> fillchars=stlnc:/</span><br><span class="line"><span class="string">" 垂直分割线颜色</span></span><br><span class="line"><span class="string">"</span>:highlight VertSplit term=reverse ctermbg=242 guibg=DarkGrey</span><br><span class="line"><span class="string">":highlight VertSplit ctermfg=7 ctermbg=242 guifg=LightGrey guibg=DarkGrey</span></span><br><span class="line"><span class="string">:highlight VertSplit cterm=bold ctermfg=15 ctermbg=242 gui=bold guifg=White guibg=Grey40</span></span><br><span class="line"><span class="string">"</span> 鼠标当前行颜色</span><br><span class="line"><span class="string">":hi CursorLine   cterm=NONE ctermbg=darkred ctermfg=white guibg=darkred guifg=white</span></span><br><span class="line"><span class="string">"</span>:hi CursorLine cterm=NONE ctermfg=190 ctermbg=238</span><br><span class="line">:hi CursorLine cterm=NONE ctermbg=239</span><br><span class="line"><span class="string">" 鼠标当前列颜色</span></span><br><span class="line"><span class="string">:hi CursorColumn cterm=NONE ctermbg=darkred ctermfg=white guibg=darkred guifg=white</span></span><br><span class="line"><span class="string">:nnoremap \&lt;Leader\&gt;c :set cursorline! cursorcolumn!\&lt;CR\&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">set nocompatible              "</span> be iMproved, required</span><br><span class="line"><span class="string">" filetype off                  "</span> required</span><br><span class="line"></span><br><span class="line"><span class="string">" set the runtime path to include Vundle and initialize</span></span><br><span class="line"><span class="string">set rtp+=/.vim/bundle/Vundle.vim</span></span><br><span class="line"><span class="string">call vundle#begin()</span></span><br><span class="line"><span class="string">"</span> alternatively, pass a path <span class="built_in">where</span> Vundle should install plugins</span><br><span class="line"><span class="string">"call vundle#begin('/some/path/here')</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"</span> <span class="built_in">let</span> Vundle manage Vundle, required</span><br><span class="line">Plugin <span class="string">'VundleVim/Vundle.vim'</span></span><br><span class="line"></span><br><span class="line"><span class="string">" The following are examples of different formats supported.</span></span><br><span class="line"><span class="string">"</span> Keep Plugin commands between vundle<span class="comment">#begin/end.</span></span><br><span class="line"><span class="string">" plugin on GitHub repo</span></span><br><span class="line"><span class="string">Plugin 'tpope/vim-fugitive'</span></span><br><span class="line"><span class="string">"</span> plugin from http://vim-scripts.org/vim/scripts.html</span><br><span class="line"><span class="string">" Plugin 'L9'</span></span><br><span class="line"><span class="string">"</span> Git plugin not hosted on GitHub</span><br><span class="line">Plugin <span class="string">'git://git.wincent.com/command-t.git'</span></span><br><span class="line"><span class="string">" git repos on your local machine (i.e. when working on your own plugin)</span></span><br><span class="line"><span class="string">"</span> Plugin <span class="string">'file:///home/gmarik/path/to/plugin'</span></span><br><span class="line"><span class="string">" The sparkup vim script is in a subdirectory of this repo called vim.</span></span><br><span class="line"><span class="string">"</span> Pass the path to <span class="built_in">set</span> the runtimepath properly.</span><br><span class="line">Plugin <span class="string">'rstacruz/sparkup'</span>, &#123;<span class="string">'rtp'</span>: <span class="string">'vim/'</span>&#125;</span><br><span class="line"><span class="string">" Install L9 and avoid a Naming conflict if you've already installed a</span></span><br><span class="line"><span class="string">"</span> different version somewhere <span class="keyword">else</span>.</span><br><span class="line"><span class="string">" Plugin 'ascenator/L9', &#123;'name': 'newL9'&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Bundle 'scrooloose/nerdtree'</span></span><br><span class="line"><span class="string">Plugin 'vim-airline/vim-airline'</span></span><br><span class="line"><span class="string">Plugin 'vim-airline/vim-airline-themes'</span></span><br><span class="line"><span class="string">Bundle 'majutsushi/tagbar'</span></span><br><span class="line"><span class="string">Plugin 'scrooloose/nerdcommenter'</span></span><br><span class="line"><span class="string">Plugin 'jiangmiao/auto-pairs'</span></span><br><span class="line"><span class="string">Plugin 'vim-scripts/DoxygenToolkit.vim'</span></span><br><span class="line"><span class="string">Plugin 'vim-scripts/Pydiction'</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"</span> All of your Plugins must be added before the following line</span><br><span class="line">call vundle<span class="comment">#end()            " required</span></span><br><span class="line">filetype plugin indent on    <span class="string">" required</span></span><br><span class="line"><span class="string">"</span> To ignore plugin indent changes, instead use:</span><br><span class="line"><span class="string">"filetype plugin on</span></span><br><span class="line"><span class="string">"</span></span><br><span class="line"><span class="string">" Brief help</span></span><br><span class="line"><span class="string">"</span> :PluginList       - lists configured plugins</span><br><span class="line"><span class="string">" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate</span></span><br><span class="line"><span class="string">"</span> :PluginSearch foo - searches <span class="keyword">for</span> foo; append `!` to refresh <span class="built_in">local</span> cache</span><br><span class="line"><span class="string">" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal</span></span><br><span class="line"><span class="string">"</span></span><br><span class="line"><span class="string">" see :h vundle for more details or wiki for FAQ</span></span><br><span class="line"><span class="string">"</span> Put your non-Plugin stuff after this line</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">" NERDTree</span></span><br><span class="line"><span class="string">"</span> open a NERDTree automaticallyu when vim starts up</span><br><span class="line"><span class="string">" autocmd vimenter * NERDTree</span></span><br><span class="line"><span class="string">"</span> close vim <span class="keyword">if</span> the only window left open is a NERDTree</span><br><span class="line">autocmd bufenter * <span class="keyword">if</span> (winnr(<span class="string">"$"</span>) == 1 &amp;&amp; exists(<span class="string">"b:NERDTree"</span>) &amp;&amp; b:NERDTree.isTabTree()) | q | endif</span><br><span class="line"><span class="string">" open NERDTree automatically when vim starts up on opening a directory</span></span><br><span class="line"><span class="string">autocmd StdinReadPre * let s:std_in=1</span></span><br><span class="line"><span class="string">autocmd VimEnter * if argc() == 1 &amp;&amp; isdirectory(argv()[0]()) &amp;&amp; !exists("</span>s:std_in<span class="string">") | exe 'NERDTree' argv()[0]() | wincmd p | ene | endif</span></span><br><span class="line"><span class="string">map \&lt;C-n\&gt; :NERDTreeToggle\&lt;CR\&gt;</span></span><br><span class="line"><span class="string">let g:NERDTreeDirArrowExpandable = '▸'</span></span><br><span class="line"><span class="string">let g:NERDTreeDirArrowCollapsible = '▾'</span></span><br><span class="line"><span class="string">"</span> 窗口位置</span><br><span class="line"><span class="built_in">let</span> g:NERDTreeWinPos=<span class="string">'left'</span></span><br><span class="line"><span class="string">" 窗口尺寸</span></span><br><span class="line"><span class="string">let g:NERDTreeSize=30</span></span><br><span class="line"><span class="string">"</span> 窗口是否显示行号</span><br><span class="line"><span class="built_in">let</span> g:NERDTreeShowLineNumber=0</span><br><span class="line"><span class="string">" 不显示隐藏文件</span></span><br><span class="line"><span class="string">let g:NERDTreeHidden=0</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"</span> vim-airline</span><br><span class="line"><span class="built_in">let</span> g:airline<span class="comment">#extensions#tabline#enabled = 1</span></span><br><span class="line"><span class="built_in">let</span> g:airline<span class="comment">#extensions#tabline#left_sep = ' '</span></span><br><span class="line"><span class="built_in">let</span> g:airline<span class="comment">#extensions#tabline#left_alt_sep = '|'</span></span><br><span class="line"><span class="built_in">let</span> g:airline<span class="comment">#extensions#tabline#formatter = 'default'</span></span><br><span class="line"><span class="string">"let g:airline_theme='powerlineish'</span></span><br><span class="line"><span class="string">set laststatus=2</span></span><br><span class="line"><span class="string">set t_Co=256</span></span><br><span class="line"><span class="string">"</span><span class="built_in">set</span> fillchars+=stl:\ ,stlnc:\\</span><br><span class="line"><span class="built_in">let</span> g:airline_powerline_fonts = 1</span><br><span class="line"><span class="string">"打开tabline功能,方便查看Buffer和切换,省去了minibufexpl插件</span></span><br><span class="line"><span class="string">let g:airline#extensions#tabline#enabled = 1</span></span><br><span class="line"><span class="string">let g:airline#extensions#tabline#buffer_nr_show = 1</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"</span>设置切换Buffer快捷键<span class="string">"</span></span><br><span class="line"><span class="string">nnoremap \&lt;C-tab\&gt; :bn\&lt;CR\&gt;</span></span><br><span class="line"><span class="string">nnoremap \&lt;C-s-tab\&gt; :bp\&lt;CR\&gt;</span></span><br><span class="line"><span class="string">"</span> 关闭状态显示空白符号计数</span><br><span class="line"><span class="built_in">let</span> g:airline<span class="comment">#extensions#whitespace#enabled = 0</span></span><br><span class="line"><span class="built_in">let</span> g:airline<span class="comment">#extensions#whitespace#symbol = '!'</span></span><br><span class="line"><span class="string">" 设置consolas字体"</span>前面已经设置过</span><br><span class="line"><span class="string">"set guifont=Consolas\ for\ Powerline\ FixedD:h11</span></span><br><span class="line"><span class="string">if !exists('g:airline_symbols')</span></span><br><span class="line"><span class="string">  let g:airline_symbols = &#123;&#125;</span></span><br><span class="line"><span class="string">endif</span></span><br><span class="line"><span class="string">"</span> old vim-powerline symbols</span><br><span class="line"><span class="built_in">let</span> g:airline_left_sep = <span class="string">'⮀'</span></span><br><span class="line"><span class="built_in">let</span> g:airline_left_alt_sep = <span class="string">'⮁'</span></span><br><span class="line"><span class="built_in">let</span> g:airline_right_sep = <span class="string">'⮂'</span></span><br><span class="line"><span class="built_in">let</span> g:airline_right_alt_sep = <span class="string">'⮃'</span></span><br><span class="line"><span class="string">"let g:airline_symbols.branch = '⭠'</span></span><br><span class="line"><span class="string">let g:airline_symbols.branch = '⎇ '</span></span><br><span class="line"><span class="string">let g:airline_symbols.readonly = '⭤'</span></span><br><span class="line"><span class="string">let g:airline_symbols.linenr = '¶'</span></span><br><span class="line"><span class="string">let g:airline_detect_modified = 1</span></span><br><span class="line"><span class="string">let g:airline_detect_paste = 1</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"</span> tagbar</span><br><span class="line"><span class="string">" 设置tagbar使用ctags</span></span><br><span class="line"><span class="string">"</span> <span class="built_in">let</span> g:tagbar_ctags_bin=<span class="string">'/usr/bin/ctags'</span></span><br><span class="line"><span class="string">" 快捷键</span></span><br><span class="line"><span class="string">nmap \&lt;F9\&gt; :TagbarToggle\&lt;CR\&gt;</span></span><br><span class="line"><span class="string">"</span> 宽度</span><br><span class="line"><span class="built_in">let</span> g:tagbar_width=24</span><br><span class="line"><span class="string">" 开启自动预览，随着光标在标签上的移动，顶部出现一个实时预览窗口</span></span><br><span class="line"><span class="string">let g:tagbar_autopreview=1</span></span><br><span class="line"><span class="string">"</span> 关闭排序，即按照标签在文件中的位置排序</span><br><span class="line"><span class="built_in">let</span> g:bagbar_sort=0</span><br><span class="line"><span class="string">" 设置窗口在右边显示</span></span><br><span class="line"><span class="string">let g:tagbar_right=1</span></span><br><span class="line"><span class="string">"</span> 打开文件自动打开tagbar</span><br><span class="line"><span class="string">"autocmd BufReadPost *,*.cpp,*.c,*.h,*.cc,*.cxx call tagbar#autoopen()</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"</span> nerdcommenter</span><br><span class="line"><span class="string">" 将\修改映射为，</span></span><br><span class="line"><span class="string">nmap ,cc \&lt;leader\&gt;cc</span></span><br><span class="line"><span class="string">"</span> Add spaces after comment delimiters by default</span><br><span class="line"><span class="built_in">let</span> g:NERDSpaceDelims = 1</span><br><span class="line"></span><br><span class="line"><span class="string">" Use compact syntax for prettified multi-line comments</span></span><br><span class="line"><span class="string">let g:NERDCompactSexyComs = 1</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"</span> Align line-wise comment delimiters flush left instead of following code indentation</span><br><span class="line"><span class="built_in">let</span> g:NERDDefaultAlign = <span class="string">'left'</span></span><br><span class="line"></span><br><span class="line"><span class="string">" Set a language to use its alternate delimiters by default</span></span><br><span class="line"><span class="string">let g:NERDAltDelims_java = 1</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"</span> Add your own custom formats or override the defaults</span><br><span class="line"><span class="built_in">let</span> g:NERDCustomDelimiters = &#123; <span class="string">'c'</span>: &#123; <span class="string">'left'</span>: <span class="string">'/**'</span>,<span class="string">'right'</span>: <span class="string">'*/'</span> &#125; &#125;</span><br><span class="line"></span><br><span class="line"><span class="string">" Allow commenting and inverting empty lines (useful when commenting a region)</span></span><br><span class="line"><span class="string">let g:NERDCommentEmptyLines = 1</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"</span> Enable trimming of trailing whitespace when uncommenting</span><br><span class="line"><span class="built_in">let</span> g:NERDTrimTrailingWhitespace = 1</span><br><span class="line"></span><br><span class="line"><span class="string">" Enable NERDCommenterToggle to check all selected lines is commented or not </span></span><br><span class="line"><span class="string">let g:NERDToggleCheckAllLines = 1</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"</span> auto pairs</span><br><span class="line"><span class="built_in">let</span> g:AutoPairs = &#123;<span class="string">'('</span>:<span class="string">')'</span>, <span class="string">'['</span>:<span class="string">']()'</span>, <span class="string">'&#123;'</span>:<span class="string">'&#125;'</span>,<span class="string">"'"</span>:<span class="string">"'"</span>,<span class="string">'"'</span>:<span class="string">'"'</span>&#125; </span><br><span class="line"><span class="string">" 设置要自动配对的符号</span></span><br><span class="line"><span class="string">"</span> <span class="built_in">let</span> g:AutoPairs[<span class="string">'\&lt;'</span>]()=<span class="string">'\&gt;'</span></span><br><span class="line"><span class="string">" 添加要自动配对的符号\&lt;\&gt;</span></span><br><span class="line"><span class="string">"</span><span class="built_in">let</span> b:AutoPairs = g:AutoParis </span><br><span class="line"><span class="string">" 设置要自动配对的符号，默认为g:AutoPairs，可以通过自动命令来对不同文件类型设置不同自动匹配对符号。</span></span><br><span class="line"><span class="string">let g:AutoPairsShortcutToggle = '\&lt;M-p\&gt;' </span></span><br><span class="line"><span class="string">"</span> 设置插件打开/关闭的快捷键，默认为ALT+p。</span><br><span class="line"><span class="built_in">let</span> g:AutoPairsShortcutFastWrap = <span class="string">'\&lt;M-e\&gt;'</span> </span><br><span class="line"><span class="string">" 设置自动为文本添加圆括号的快捷键，默认为ALT+e。</span></span><br><span class="line"><span class="string">let g:AutoPairsShortcutJump = '\&lt;M-n\&gt;' </span></span><br><span class="line"><span class="string">"</span> 设置调到下一层括号对的快捷键，默认为ALT+n。</span><br><span class="line"><span class="built_in">let</span> g:AutoPairsShortcutBackInsert = <span class="string">'\&lt;M-b\&gt;'</span> </span><br><span class="line"><span class="string">" 设置撤销飞行模式的快捷键，默认为ALT+b。</span></span><br><span class="line"><span class="string">let g:AutoPairsMapBS = 1 </span></span><br><span class="line"><span class="string">"</span> 把BACKSPACE键映射为删除括号对和引号，默认为1。</span><br><span class="line"><span class="built_in">let</span> g:AutoPairsMapCh = 1 </span><br><span class="line"><span class="string">" 把ctrl+h键映射为删除括号对和引号，默认为1。</span></span><br><span class="line"><span class="string">let g:AutoPairsMapCR = 1 </span></span><br><span class="line"><span class="string">"</span> 把ENTER键映射为换行并缩进，默认为1。</span><br><span class="line"><span class="built_in">let</span> g:AutoPairsCenterLine = 1 </span><br><span class="line"><span class="string">" 当g:AutoPairsMapCR为1时，且文本位于窗口底部时，自动移到窗口中间。</span></span><br><span class="line"><span class="string">let g:AutoPairsMapSpace = 1 </span></span><br><span class="line"><span class="string">"</span> 把SPACE键映射为在括号两侧添加空格，默认为1。</span><br><span class="line"><span class="built_in">let</span> g:AutoPairsFlyMode = 0 </span><br><span class="line"><span class="string">" 启用飞行模式，默认为0。</span></span><br><span class="line"><span class="string">let g:AutoPairsMultilineClose = 1 </span></span><br><span class="line"><span class="string">"</span> 启用跳出多行括号对，默认为1，为0则只能跳出同一行的括号。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">" Doxygen</span></span><br><span class="line"><span class="string">imap cm \&lt;esc\&gt;:Dox\&lt;CR\&gt;</span></span><br><span class="line"><span class="string">map cm :Dox\&lt;CR\&gt;</span></span><br><span class="line"><span class="string">map fg : Dox\&lt;cr\&gt;</span></span><br><span class="line"><span class="string">let g:DoxygenToolkit_briefTag_funcName = "</span>yes<span class="string">"</span></span><br><span class="line"><span class="string">let g:DoxygenToolkit_undocTag="</span>DOXIGEN_SKIP_BLOCK<span class="string">"</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">let g:load_doxygen_syntax = 1</span></span><br><span class="line"><span class="string">"</span> 设置生成的文档的 Lisence 是///</span><br><span class="line"><span class="built_in">let</span> g:DoxygenToolKit_startCommentBlock = <span class="string">"/// "</span></span><br><span class="line"><span class="built_in">let</span> g:DoxygenToolKit_interCommentBlock = <span class="string">"/// "</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">let</span> g:DoxygenToolkit_briefTag_pre=<span class="string">"@Synopsis  "</span></span><br><span class="line"><span class="built_in">let</span> g:DoxygenToolkit_paramTag_pre=<span class="string">"@Param "</span></span><br><span class="line"><span class="built_in">let</span> g:DoxygenToolkit_returnTag=<span class="string">"@Returns   "</span></span><br><span class="line"><span class="string">" let g:DoxygenToolkit_blockHeader="</span>--------------------------------------------------------------------------<span class="string">"</span></span><br><span class="line"><span class="string">"</span> <span class="built_in">let</span> g:DoxygenToolkit_blockFooter=<span class="string">"----------------------------------------------------------------------------"</span></span><br><span class="line"><span class="built_in">let</span> g:DoxygenToolkit_authorName=<span class="string">"dugang, dugang_it@aliyun.com"</span></span><br><span class="line"><span class="string">"let g:DoxygenToolkit_licenseTag="</span>My own license<span class="string">"</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">let s:licenseTag = "</span>Unpublished copyright. All rights reserved. This material contains\&lt;enter\&gt;<span class="string">"</span></span><br><span class="line"><span class="string">let s:licenseTag = s:licenseTag . "</span>proprietary information that should be used or copied only within\&lt;enter\&gt;<span class="string">"</span></span><br><span class="line"><span class="string">let s:licenseTag = s:licenseTag . "</span>COMPANY, except with written permission of COMPANY.\&lt;enter\&gt;<span class="string">"</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">if !exists("</span>g:DoxygenToolkit_briefTag_lic_pre<span class="string">")</span></span><br><span class="line"><span class="string">  let g:DoxygenToolkit_briefTag_lic_pre = "</span>@brief:   <span class="string">"</span></span><br><span class="line"><span class="string">endif</span></span><br><span class="line"><span class="string">if !exists("</span>g:DoxygenToolkit_briefTag_pre<span class="string">")</span></span><br><span class="line"><span class="string">  let g:DoxygenToolkit_briefTag_pre = "</span>@brief: <span class="string">"</span></span><br><span class="line"><span class="string">endif</span></span><br><span class="line"><span class="string">if !exists("</span>g:DoxygenToolkit_fileTag<span class="string">")</span></span><br><span class="line"><span class="string">  let g:DoxygenToolkit_fileTag = "</span>@file:    <span class="string">"</span></span><br><span class="line"><span class="string">endif</span></span><br><span class="line"><span class="string">if !exists("</span>g:DoxygenToolkit_authorTag<span class="string">")</span></span><br><span class="line"><span class="string">  let g:DoxygenToolkit_authorTag = "</span>@author:  <span class="string">"</span></span><br><span class="line"><span class="string">endif</span></span><br><span class="line"><span class="string">if !exists("</span>g:DoxygenToolkit_dateTag<span class="string">")</span></span><br><span class="line"><span class="string">  let g:DoxygenToolkit_dateTag = "</span>@date:    <span class="string">"</span></span><br><span class="line"><span class="string">endif</span></span><br><span class="line"><span class="string">if !exists("</span>g:DoxygenToolkit_versionTag<span class="string">")</span></span><br><span class="line"><span class="string">  let g:DoxygenToolkit_versionTag = "</span>@version: <span class="string">"</span></span><br><span class="line"><span class="string">endif</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">function! \&lt;SID\&gt;DoxygenLicenseFunc()</span></span><br><span class="line"><span class="string">  call s:InitializeParameters()</span></span><br><span class="line"><span class="string">  "</span> Test authorName variable</span><br><span class="line">  <span class="keyword">if</span> !exists(<span class="string">"g:DoxygenToolkit_companyName"</span>)</span><br><span class="line"><span class="built_in">let</span> g:DoxygenToolkit_companyName = input(<span class="string">"Enter name of your company: "</span>)</span><br><span class="line">  endif</span><br><span class="line">  <span class="keyword">if</span> !exists(<span class="string">"g:DoxygenToolkit_authorName"</span>)</span><br><span class="line"><span class="built_in">let</span> g:DoxygenToolkit_authorName = input(<span class="string">"Enter name of the author (generally yours...) : "</span>)</span><br><span class="line">  endif</span><br><span class="line">  mark d</span><br><span class="line"></span><br><span class="line">  <span class="string">" Get file name</span></span><br><span class="line"><span class="string">  let l:fileName = expand('%:t')</span></span><br><span class="line"><span class="string">  let l:year = strftime("</span>%Y<span class="string">")</span></span><br><span class="line"><span class="string">  let l:copyright = "</span>Copyright (c) <span class="string">"</span></span><br><span class="line"><span class="string">  let l:copyright = l:copyright.l:year."</span> <span class="string">".g:DoxygenToolkit_companyName."</span>.<span class="string">"</span></span><br><span class="line"><span class="string">  let l:license = substitute( g:DoxygenToolkit_licenseTag, "</span>\&lt;enter\&gt;<span class="string">", "</span>\&lt;enter\&gt;<span class="string">".s:interCommentBlock, "</span>g<span class="string">" )</span></span><br><span class="line"><span class="string">  let l:license = substitute( l:license, "</span>COMPANY<span class="string">", g:DoxygenToolkit_companyName, "</span>g<span class="string">" )</span></span><br><span class="line"><span class="string">  exec "</span>normal O<span class="string">".s:startCommentBlock</span></span><br><span class="line"><span class="string">  exec "</span>normal o<span class="string">".s:interCommentTag.l:copyright."</span>\&lt;enter\&gt;<span class="string">".s:interCommentTag</span></span><br><span class="line"><span class="string">  exec "</span>normal o<span class="string">".s:interCommentTag.l:license</span></span><br><span class="line"><span class="string">  exec "</span>normal o<span class="string">".s:interCommentTag.g:DoxygenToolkit_fileTag.l:fileName</span></span><br><span class="line"><span class="string">  exec "</span>normal o<span class="string">".s:interCommentTag.g:DoxygenToolkit_briefTag_lic_pre</span></span><br><span class="line"><span class="string">  mark d</span></span><br><span class="line"><span class="string">  exec "</span>normal o<span class="string">".s:interCommentTag.g:DoxygenToolkit_authorTag.g:DoxygenToolkit_authorName</span></span><br><span class="line"><span class="string">  exec "</span>normal o<span class="string">".s:interCommentTag.g:DoxygenToolkit_versionTag."</span>1.0<span class="string">"</span></span><br><span class="line"><span class="string">  let l:date = strftime("</span>%Y-%m-%d<span class="string">")</span></span><br><span class="line"><span class="string">  exec "</span>normal o<span class="string">".s:interCommentTag.g:DoxygenToolkit_dateTag.l:date</span></span><br><span class="line"><span class="string">  if( s:endCommentBlock != "</span><span class="string">" )</span></span><br><span class="line"><span class="string">exec "</span>normal o<span class="string">".s:endCommentBlock</span></span><br><span class="line"><span class="string">  endif</span></span><br><span class="line"><span class="string">  exec "</span>normal `d<span class="string">"</span></span><br><span class="line"><span class="string">`  call s:RestoreParameters()</span></span><br><span class="line"><span class="string">  startinsert!</span></span><br><span class="line"><span class="string">endfunction</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"</span> pydiction</span><br><span class="line">filetype plugin on</span><br><span class="line"><span class="built_in">let</span> g:pydiction_location = <span class="string">'/.vim/bundle/Pydiction/complete-dict'</span></span><br><span class="line"><span class="built_in">let</span> g:pydiction_menu_height = 8</span><br><span class="line">autocmd FileType python <span class="built_in">set</span> omnifunc=pythoncomplete<span class="comment">#Complete  </span></span><br><span class="line">autocmd FileType javascrīpt <span class="built_in">set</span> omnifunc=javascriptcomplete<span class="comment">#CompleteJS  </span></span><br><span class="line">autocmd FileType html <span class="built_in">set</span> omnifunc=htmlcomplete<span class="comment">#CompleteTags  </span></span><br><span class="line">autocmd FileType css <span class="built_in">set</span> omnifunc=csscomplete<span class="comment">#CompleteCSS  </span></span><br><span class="line">autocmd FileType xml <span class="built_in">set</span> omnifunc=xmlcomplete<span class="comment">#CompleteTags  </span></span><br><span class="line">autocmd FileType php <span class="built_in">set</span> omnifunc=phpcomplete<span class="comment">#CompletePHP  </span></span><br><span class="line">autocmd FileType c <span class="built_in">set</span> omnifunc=ccomplete<span class="comment">#Complete</span></span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> vim </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> vim </tag>
            
            <tag> .vimrc </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
