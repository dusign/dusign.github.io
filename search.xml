<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Vue Router</title>
      <link href="/2020/02/23/Vue-Router/"/>
      <url>/2020/02/23/Vue-Router/</url>
      
        <content type="html"><![CDATA[<p>Vue Router is the official router for Vue.js. It deeply integrates with Vue.js core to make building Single Page Applications with Vue.js a breeze. For most Single Page Applications, it’s recommended to use the officially-supported vue-router library. </p><h3 id="路由跳转"><a href="#路由跳转" class="headerlink" title="路由跳转"></a>路由跳转</h3><p>Vue.js 中做项目的时候需要点击父组件中的某个内容之后跳转到子组件中，方法如下：</p><ol><li><p><code>this.$router.push({name: &#39;ROUTER_NAME&#39;, params: { KEY: VALUE }})</code><br>注意使用之前要提前设置好 <code>router</code>，其中 <code>name</code> 也可以换成 <code>path</code>，与 <code>router</code> 中的数据对应即可。</p></li><li><p><code>this.$router.replace(&#39;/PATH&#39;)</code></p></li></ol><h3 id="传递参数"><a href="#传递参数" class="headerlink" title="传递参数"></a>传递参数</h3><p>有时候路由跳转的时候父组件需要给子组件传递参数，这时候就需要在路由中携带参数，然后在子组件中从路由中获取相应的参数，方法如下：</p><p>1、通过 <code>$router.push</code> 在 <code>path</code> 后面传递参数，父组件写法如下<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>.$router.push(&#123;</span><br><span class="line">path: <span class="string">`/PATH/<span class="subst">$&#123;PARAMS_KEY&#125;</span>`</span>,</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><br>然后在路由中配置如下<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    path: <span class="string">'/PATH/:PARAMS_KEY'</span>,</span><br><span class="line">    name: <span class="string">'NAME'</span>,</span><br><span class="line">    component: COMPONENT</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>这种方法需要在 <code>path</code> 中添加 <code>/:PARAMS_KEY</code> 来对应 <code>$router.push</code> 中 <code>path</code> 所携带的参数，然后在子组件中可以使用如下方法来获取传递的参数值。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>.$route.params.PARAMS_KEY</span><br></pre></td></tr></table></figure></p><p>2、通过 <code>$router.push</code> 中的 <code>name</code> 匹配路由，通过 <code>params</code> 来传递参数，父组件写法如下<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>.$router.push(&#123;</span><br><span class="line">    name: <span class="string">'NAME'</span>,</span><br><span class="line">    params: &#123;</span><br><span class="line">        KEY: VALUE</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><br>然后在路由中配置如下<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    path: <span class="string">'/PATH'</span>,</span><br><span class="line">    name: <span class="string">'NAME'</span>,</span><br><span class="line">    component: COMPONENT</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>子组件中通过如下方法来获取参数<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>.$route.params.KEY</span><br></pre></td></tr></table></figure></p><p>3、通过 <code>$router.push</code> 中的 <code>path</code> 来匹配路由，通过 <code>query</code> 来传递参数，父组件写法如下<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>.$router.push(&#123;</span><br><span class="line">    path: <span class="string">'/PATH'</span>,</span><br><span class="line">    query: &#123;</span><br><span class="line">        KEY: VALUE</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><br>然后在路由中配置如下<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    path: <span class="string">'/PATH'</span>,</span><br><span class="line">    name: <span class="string">'NAME'</span>,</span><br><span class="line">    component: COMPONENT</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>子组件中通过如下方法来获取参数<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>.$route.query.KEY</span><br></pre></td></tr></table></figure><br>这种方法下 <code>query</code> 中传递的参数会显示在 url 后面，类似于 get 请求的 url 中的参数。</p><h3 id="route-and-router"><a href="#route-and-router" class="headerlink" title="route and router"></a>route and router</h3><p><code>router</code> 是 <code>VueRouter</code> 的一个对象，通过 <code>Vue.use(VueRouter)</code> 和 <code>VueRouter</code> 构造函数得到一个 <code>router</code> 的实例对象，这是一个全局的对象，他包含了所有的路由包含了许多关键的对象和属性。</p><p>如 <code>history</code> 对象</p><ol><li><code>$router.push({path:&#39;PATH&#39;})</code> 是向 <code>history</code> 栈中添加一个路由，我们看来是切换路由，但本质是在添加一个 <code>history</code> 记录，此时 <code>window.history.length</code> 会 +1</li><li><code>$router.replace({path:&#39;PATH&#39;})</code> 是替换路由，没有历史记录，<code>window.history.length</code> 不会 +1</li></ol><p>而 <code>route</code> 是一个跳转的路由对象，每一个路由都会有一个 <code>route</code> 对象，是一个局部的对象，可以获取对应的 <code>name</code>、<code>path</code>、<code>params</code>、<code>query</code>等</p><p><code>$route.path</code> 是一个字符串，等于当前路由对象的路径，会被解析为绝对路径</p><p><code>$route.params</code> 是一个对象，包含路由中的动态片段和全匹配片段的键值对</p><p><code>$route.query</code> 是一个对象，包含路由中查询参数的键值对。例如，对于 <code>/home/news/detail/01?favorite=yes</code> ，会得到 <code>$route.query.favorite == &#39;yes&#39;</code> </p><p><code>$route.router</code> 是路由规则所属的路由器（以及其所属的组件）</p><p><code>$route.matched</code> 是一个数组，包含当前匹配的路径中所包含的所有片段所对应的配置参数对象</p><p><code>$route.name</code> 是当前路径的名字，如果没有使用具名路径，则名字为空</p>]]></content>
      
      
      <categories>
          
          <category> vue.js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue.js </tag>
            
            <tag> router </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Regular Expression</title>
      <link href="/2020/02/17/Regular-Expression/"/>
      <url>/2020/02/17/Regular-Expression/</url>
      
        <content type="html"><![CDATA[<p>A regular expression (regex or regexp for short) is a special text string for describing a search pattern. You can think of regular expressions as wildcards on steroids. You are probably familiar with wildcard notations such as <code>*.txt to</code> find all text files in a file manager. The regex equivalent is <code>^.*\.txt$</code>.</p><p><img src="regexp.png" alt="regular expression"></p>]]></content>
      
      
      <categories>
          
          <category> computer science </category>
          
      </categories>
      
      
        <tags>
            
            <tag> regexp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Errors in Vue Development</title>
      <link href="/2019/12/21/Errors-in-Vue-Development/"/>
      <url>/2019/12/21/Errors-in-Vue-Development/</url>
      
        <content type="html"><![CDATA[<p><strong>1、Problem</strong>:  （TypeScript）using <code>a.b</code> or <code>this.b</code><br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ERROR: property <span class="string">'b'</span> does not exist on value <span class="keyword">of</span> type</span><br></pre></td></tr></table></figure><br><strong>Solution</strong>:  change <code>a</code> or <code>this</code> to <code>(a as any)</code> or <code>(this as any)</code></p><p><strong>2、Problem</strong>: using js or jquery to modify DOM’s css value doesn’t work</p><p><strong>Solution</strong>: mount Js functions in <code>mounted</code> instead of <code>created</code></p><p><strong>3、Problem</strong>: DOM does not change after changing <code>data</code></p><p><strong>Solution</strong>: using <code>this.$set(Object, &#39;key&#39;, value)</code> instead of <code>this.Object.key = value</code></p><p><strong>4、Problem</strong>: （TypeScript）using<br><code>document.getElementsByClassName(&#39;CLASS_NAME&#39;)[key].style.ATTRIBUTE = VALUE</code> or <code>document.querySelector(&#39;.CLASS&#39;).style.ATTRIBUTE = VALUE</code><br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ERROR: property <span class="string">'style'</span> does not exist on type <span class="string">'Element'</span>.Vetur(<span class="number">2339</span>)</span><br></pre></td></tr></table></figure><br><strong>Solution</strong>: usign <code>(document.querySelector(&#39;.CLASS&#39;) as HTMLElement).style.ATTRIBUTE = VALUE;</code> or jQuery</p>]]></content>
      
      
      <categories>
          
          <category> vue.js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue.js </tag>
            
            <tag> error </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Update Node.js</title>
      <link href="/2019/12/20/Update-Node-js/"/>
      <url>/2019/12/20/Update-Node-js/</url>
      
        <content type="html"><![CDATA[<ol><li><p>清除 npm 缓存<br><code>npm cache clean -f</code></p></li><li><p>安装 <a href="https://github.com/tj/n" target="_blank" rel="noopener">n</a> 模块，<a href="https://github.com/tj/n" target="_blank" rel="noopener">n</a> 模块是专门用来管理 nodejs 的版本的<br><code>sudo npm install -g n</code></p></li><li><p>查看 <a href="https://github.com/tj/n" target="_blank" rel="noopener">n</a> 模块的版本<br><code>n -V</code></p></li><li><p>升级到稳定版<br><code>n stable</code></p></li><li><p>升级到指定版本<br><code>n [版本号]</code></p></li><li><p><a href="https://github.com/tj/n" target="_blank" rel="noopener">n</a> 模块适用于 linux 或 mac，windows 下使用 <a href="https://github.com/nvm-sh/nvm" target="_blank" rel="noopener">nvm</a> 或 <a href="https://github.com/nullivex/nodist" target="_blank" rel="noopener">nodist</a> 对 node.js 或 npm进行版本管理。</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> node.js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> node.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Error Installing MySqlClient</title>
      <link href="/2019/12/20/Error-Installing-MySqlClient/"/>
      <url>/2019/12/20/Error-Installing-MySqlClient/</url>
      
        <content type="html"><![CDATA[<p>Django 使用 mysql 时，需要安装 mysqlclient 或 pymysql ，笔者的系统是 MACOS ，用 pyenv 管理 python 版本，使用 pyenv-virtualenv 搭建 python 虚拟环境，python 版本是 python3.8，虚拟环境中安装 mysqlclient 时出现了报错，错误及解决方法如下。</p><h2 id="Error"><a href="#Error" class="headerlink" title="Error"></a>Error</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">Collecting mysqlclient</span><br><span class="line">  Using cached https://files.pythonhosted.org/packages/d0/97/7326248ac8d5049968bf4ec708a5d3d4806e412a42e74160d7f266a3e03a/mysqlclient-1.4.6.tar.gz</span><br><span class="line">Installing collected packages: mysqlclient</span><br><span class="line">    Running setup.py install <span class="keyword">for</span> mysqlclient ... error</span><br><span class="line">    ERROR: Command errored out with <span class="built_in">exit</span> status 1:</span><br><span class="line">     <span class="built_in">command</span>: /Users/dugang/.pyenv/versions/3.8.0/envs/myow/bin/python -u -c <span class="string">'import sys, setuptools, tokenize; sys.argv[0] = '</span><span class="string">"'"</span><span class="string">'/private/var/folders/g1/ht4cq7sx40vcbll3gw_bncgh0000gn/T/pip-install-cytmezc5/mysqlclient/setup.py'</span><span class="string">"'"</span><span class="string">'; __file__='</span><span class="string">"'"</span><span class="string">'/private/var/folders/g1/ht4cq7sx40vcbll3gw_bncgh0000gn/T/pip-install-cytmezc5/mysqlclient/setup.py'</span><span class="string">"'"</span><span class="string">';f=getattr(tokenize, '</span><span class="string">"'"</span><span class="string">'open'</span><span class="string">"'"</span><span class="string">', open)(__file__);code=f.read().replace('</span><span class="string">"'"</span><span class="string">'\r\n'</span><span class="string">"'"</span><span class="string">', '</span><span class="string">"'"</span><span class="string">'\n'</span><span class="string">"'"</span><span class="string">');f.close();exec(compile(code, __file__, '</span><span class="string">"'"</span><span class="string">'exec'</span><span class="string">"'"</span><span class="string">'))'</span> install --record /private/var/folders/g1/ht4cq7sx40vcbll3gw_bncgh0000gn/T/pip-record-cmhc1r6g/install-record.txt --single-version-externally-managed --compile --install-headers /Users/dugang/.pyenv/versions/3.8.0/envs/myow/include/site/python3.8/mysqlclient</span><br><span class="line">         cwd: /private/var/folders/g1/ht4cq7sx40vcbll3gw_bncgh0000gn/T/pip-install-cytmezc5/mysqlclient/</span><br><span class="line">    Complete output (30 lines):</span><br><span class="line">    running install</span><br><span class="line">    running build</span><br><span class="line">    running build_py</span><br><span class="line">    creating build</span><br><span class="line">    creating build/lib.macosx-10.15-x86_64-3.8</span><br><span class="line">    creating build/lib.macosx-10.15-x86_64-3.8/MySQLdb</span><br><span class="line">    copying MySQLdb/__init__.py -&gt; build/lib.macosx-10.15-x86_64-3.8/MySQLdb</span><br><span class="line">    copying MySQLdb/_exceptions.py -&gt; build/lib.macosx-10.15-x86_64-3.8/MySQLdb</span><br><span class="line">    copying MySQLdb/compat.py -&gt; build/lib.macosx-10.15-x86_64-3.8/MySQLdb</span><br><span class="line">    copying MySQLdb/connections.py -&gt; build/lib.macosx-10.15-x86_64-3.8/MySQLdb</span><br><span class="line">    copying MySQLdb/converters.py -&gt; build/lib.macosx-10.15-x86_64-3.8/MySQLdb</span><br><span class="line">    copying MySQLdb/cursors.py -&gt; build/lib.macosx-10.15-x86_64-3.8/MySQLdb</span><br><span class="line">    copying MySQLdb/release.py -&gt; build/lib.macosx-10.15-x86_64-3.8/MySQLdb</span><br><span class="line">    copying MySQLdb/times.py -&gt; build/lib.macosx-10.15-x86_64-3.8/MySQLdb</span><br><span class="line">    creating build/lib.macosx-10.15-x86_64-3.8/MySQLdb/constants</span><br><span class="line">    copying MySQLdb/constants/__init__.py -&gt; build/lib.macosx-10.15-x86_64-3.8/MySQLdb/constants</span><br><span class="line">    copying MySQLdb/constants/CLIENT.py -&gt; build/lib.macosx-10.15-x86_64-3.8/MySQLdb/constants</span><br><span class="line">    copying MySQLdb/constants/CR.py -&gt; build/lib.macosx-10.15-x86_64-3.8/MySQLdb/constants</span><br><span class="line">    copying MySQLdb/constants/ER.py -&gt; build/lib.macosx-10.15-x86_64-3.8/MySQLdb/constants</span><br><span class="line">    copying MySQLdb/constants/FIELD_TYPE.py -&gt; build/lib.macosx-10.15-x86_64-3.8/MySQLdb/constants</span><br><span class="line">    copying MySQLdb/constants/FLAG.py -&gt; build/lib.macosx-10.15-x86_64-3.8/MySQLdb/constants</span><br><span class="line">    running build_ext</span><br><span class="line">    building <span class="string">'MySQLdb._mysql'</span> extension</span><br><span class="line">    creating build/temp.macosx-10.15-x86_64-3.8</span><br><span class="line">    creating build/temp.macosx-10.15-x86_64-3.8/MySQLdb</span><br><span class="line">    clang -Wno-unused-result -Wsign-compare -Wunreachable-code -DNDEBUG -g -fwrapv -O3 -Wall -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -Dversion_info=(1,4,6,<span class="string">'final'</span>,0) -D__version__=1.4.6 -I/usr/<span class="built_in">local</span>/Cellar/mariadb/10.4.6_1/include/mysql -I/usr/<span class="built_in">local</span>/Cellar/mariadb/10.4.6_1/include/mysql/.. -I/Users/dugang/.pyenv/versions/3.8.0/envs/myow/include -I/Users/dugang/.pyenv/versions/3.8.0/include/python3.8 -c MySQLdb/_mysql.c -o build/temp.macosx-10.15-x86_64-3.8/MySQLdb/_mysql.o</span><br><span class="line">    clang -bundle -undefined dynamic_lookup -L/usr/<span class="built_in">local</span>/opt/readline/lib -L/usr/<span class="built_in">local</span>/opt/readline/lib -L/Users/dugang/.pyenv/versions/3.8.0/lib -L/usr/<span class="built_in">local</span>/opt/readline/lib -L/usr/<span class="built_in">local</span>/opt/readline/lib -L/Users/dugang/.pyenv/versions/3.8.0/lib build/temp.macosx-10.15-x86_64-3.8/MySQLdb/_mysql.o -L/usr/<span class="built_in">local</span>/Cellar/mariadb/10.4.6_1/lib -lmariadb -lz -liconv -lssl -lcrypto -o build/lib.macosx-10.15-x86_64-3.8/MySQLdb/_mysql.cpython-38-darwin.so</span><br><span class="line">    ld: library not found <span class="keyword">for</span> -lssl</span><br><span class="line">    clang: error: linker <span class="built_in">command</span> failed with <span class="built_in">exit</span> code 1 (use -v to see invocation)</span><br><span class="line">    error: <span class="built_in">command</span> <span class="string">'clang'</span> failed with <span class="built_in">exit</span> status 1</span><br><span class="line">    ----------------------------------------</span><br><span class="line">ERROR: Command errored out with <span class="built_in">exit</span> status 1: /Users/dugang/.pyenv/versions/3.8.0/envs/myow/bin/python -u -c <span class="string">'import sys, setuptools, tokenize; sys.argv[0] = '</span><span class="string">"'"</span><span class="string">'/private/var/folders/g1/ht4cq7sx40vcbll3gw_bncgh0000gn/T/pip-install-cytmezc5/mysqlclient/setup.py'</span><span class="string">"'"</span><span class="string">'; __file__='</span><span class="string">"'"</span><span class="string">'/private/var/folders/g1/ht4cq7sx40vcbll3gw_bncgh0000gn/T/pip-install-cytmezc5/mysqlclient/setup.py'</span><span class="string">"'"</span><span class="string">';f=getattr(tokenize, '</span><span class="string">"'"</span><span class="string">'open'</span><span class="string">"'"</span><span class="string">', open)(__file__);code=f.read().replace('</span><span class="string">"'"</span><span class="string">'\r\n'</span><span class="string">"'"</span><span class="string">', '</span><span class="string">"'"</span><span class="string">'\n'</span><span class="string">"'"</span><span class="string">');f.close();exec(compile(code, __file__, '</span><span class="string">"'"</span><span class="string">'exec'</span><span class="string">"'"</span><span class="string">'))'</span> install --record /private/var/folders/g1/ht4cq7sx40vcbll3gw_bncgh0000gn/T/pip-record-cmhc1r6g/install-record.txt --single-version-externally-managed --compile --install-headers /Users/dugang/.pyenv/versions/3.8.0/envs/myow/include/site/python3.8/mysqlclient Check the logs <span class="keyword">for</span> full <span class="built_in">command</span> output.</span><br></pre></td></tr></table></figure><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">brew install openssl</span><br><span class="line"><span class="built_in">export</span> LIBRARY_PATH=<span class="variable">$LIBRARY_PATH</span>:/usr/<span class="built_in">local</span>/opt/openssl/lib/</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> mysqlclient </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Usage of Virtualenv</title>
      <link href="/2019/12/11/Usage-of-Virtualenv/"/>
      <url>/2019/12/11/Usage-of-Virtualenv/</url>
      
        <content type="html"><![CDATA[<p>Virtualenv is a tool to create isolated python environments. It creates an environment that has its own installation directories, that doesn’t share libraries with other virtualenv environments (and optionally doesn’t access the globally installed libraries either).</p><h2 id="pyenv"><a href="#pyenv" class="headerlink" title="pyenv"></a>pyenv</h2><p>pyenv 是一个 Python 的版本管理工具，它可以改变全局的 Python 版本，可以在 MAC 中同时安装多个版本的 Python，设置目录级别的 Python 版本，同时它还能创建和管理 Python 虚拟环境。</p><p>安装方法如下<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">brew update</span><br><span class="line">brew install pyenv</span><br><span class="line">pyenv -v</span><br></pre></td></tr></table></figure></p><p>Python 安装<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pyenv install PYTHON_VERSION</span><br></pre></td></tr></table></figure></p><p>安装 Python时出现 ERROR<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xcrun: error: invalid active developer path (/Library/Developer/CommandLineTools), missing xcrun at: /Library/Developer/CommandLineTools/usr/bin/xcrun</span><br></pre></td></tr></table></figure><br>解决办法<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xcode-select --install</span><br></pre></td></tr></table></figure></p><p>Pyenv 常用命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看所有已安装的版本</span></span><br><span class="line">pyenv versions</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看所有命令</span></span><br><span class="line">pyenv commands</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置或显示本地的 python 版本</span></span><br><span class="line">pyenv <span class="built_in">local</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置或显示全局的 python 版本</span></span><br><span class="line">pyenv global</span><br><span class="line"></span><br><span class="line"><span class="comment"># 切换回系统版本</span></span><br><span class="line">pyenv global system</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解除 local 设置</span></span><br><span class="line">pyenv <span class="built_in">local</span> --<span class="built_in">unset</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 解除 shell 设置</span></span><br><span class="line">pyenv shell --<span class="built_in">unset</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置或显示 shell 指定的 python 版本（本次会画）</span></span><br><span class="line">pyenv shell</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装指定的 python 版本</span></span><br><span class="line">pyenv install PYTHON_VERSION</span><br><span class="line"></span><br><span class="line"><span class="comment"># 卸载指定的 python 版本</span></span><br><span class="line">pyenv uninstall PYTHON_VERSION</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示当前的 python 版本及其本地路径</span></span><br><span class="line">pyenv version</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示安装路径</span></span><br><span class="line">pyenv <span class="built_in">which</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看可安装的 python 版本</span></span><br><span class="line">pyenv install --list</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新 pyenv</span></span><br><span class="line">brew upgrade pyenv</span><br></pre></td></tr></table></figure></p><p>如果上面的命令不成功，则需要配置一下环境变量<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> PYENV_ROOT=~/.pyenv</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PYENV_ROOT</span>/shims:<span class="variable">$PATH</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># init pyenv</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">which</span> pyenv &gt; /dev/null;</span><br><span class="line">  <span class="keyword">then</span> <span class="built_in">eval</span> <span class="string">"<span class="variable">$(pyenv init -)</span>"</span>;</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure></p><h2 id="pyenv-virtualenv"><a href="#pyenv-virtualenv" class="headerlink" title="pyenv-virtualenv"></a>pyenv-virtualenv</h2><p>Pyenv-virtualenv 是一款 pyenv 插件，可以用来搭建基于不同 Python 版本、虚拟且独立的 Python 环境，可以使每个项目环境与其他项目独立开来，保持环境的干净，解决包冲突问题。</p><p>安装方法<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install pyenv-virtualenv</span><br></pre></td></tr></table></figure></p><p>配置环境变量，在 <code>~/.bash_profile</code> 中加入<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># init pyenv-virtualenv</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">which</span> pyenv-virtualenv-init &gt; /dev/null;</span><br><span class="line">  <span class="keyword">then</span> <span class="built_in">eval</span> <span class="string">"<span class="variable">$(pyenv virtualenv-init -)</span>"</span>;</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure></p><p>使用方法如下<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用当前版本创建 virtualenv</span></span><br><span class="line">pyenv virtualenv NAME</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建指定版本的 virtualenv</span></span><br><span class="line">pyenv virtualenv PYTHON_VERSION NAME</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看已创建的 virtualenv</span></span><br><span class="line">pyenv versions</span><br><span class="line"></span><br><span class="line"><span class="comment"># 激活已创建的 virtualenv</span></span><br><span class="line">pyenv activate NAME</span><br><span class="line"></span><br><span class="line"><span class="comment"># 停用已创建的 virtualenv</span></span><br><span class="line">pyenv deactivate</span><br><span class="line"></span><br><span class="line"><span class="comment"># 自动激活 virtualenv</span></span><br><span class="line">pyenv <span class="built_in">local</span> NAME</span><br><span class="line"></span><br><span class="line"><span class="comment"># 取消自动激活</span></span><br><span class="line">pyenv <span class="built_in">local</span> --<span class="built_in">unset</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除 virtualenv</span></span><br><span class="line">pyenv uninstall NAME</span><br></pre></td></tr></table></figure></p><h2 id="virtualenv"><a href="#virtualenv" class="headerlink" title="virtualenv"></a>virtualenv</h2><p>Virtualenv 通过创建一个虚拟化的 python 运行环境，将我们所需的依赖安装进去的，不同项目之间相互不干扰。</p><p>安装 virtualenv<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install virtualenv</span><br></pre></td></tr></table></figure></p><p>安装 virtualenvwrapper<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install virtualenvwrapper  <span class="comment"># windows 为 virtualenvwrapper-win</span></span><br></pre></td></tr></table></figure></p><p>linux 下建立软连接<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -s /usr/<span class="built_in">local</span>/python3/bin/virtualenv /usr/bin/virtualenv</span><br></pre></td></tr></table></figure></p><p>linux 中添加环境变量<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> VIRTUALENVWRAPPER_PYTHON=/usr/bin/python3</span><br><span class="line"><span class="comment"># 虚拟环境存储的目录，手动建立</span></span><br><span class="line"><span class="built_in">export</span> WORKON_HOME=<span class="variable">$HOME</span>/.virtualenvs</span><br><span class="line"><span class="built_in">source</span> /usr/<span class="built_in">local</span>/python3/bin/virtualenvwrapper.sh</span><br></pre></td></tr></table></figure></p><p>linux 执行命令让环境变量生效<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure></p><p>mac 下环境变量配置<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> VIRTUALENVWRAPPER_PYTHON=  <span class="comment"># 命令 which python3 查询出来的路径</span></span><br><span class="line"><span class="comment"># 虚拟环境存储的目录</span></span><br><span class="line"><span class="built_in">export</span> WORKON_HOME=<span class="variable">$HOME</span>/.virtualenvs</span><br><span class="line"><span class="built_in">source</span> <span class="comment"># 命令 which virtualenvwrapper.sh 查询出来的路径</span></span><br></pre></td></tr></table></figure></p><p>mac 执行命令让环境变量生效<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.bash_profile</span><br></pre></td></tr></table></figure></p><p>virtualenv 相关命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建虚拟环境</span></span><br><span class="line">mkvirtualenv NAME</span><br><span class="line">mkvirtualenv NAME --python=python3.8</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除虚拟环境</span></span><br><span class="line">rmvirtualenv NAME</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看所有虚拟环境</span></span><br><span class="line">workon</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入虚拟环境</span></span><br><span class="line">workon NAME</span><br><span class="line"></span><br><span class="line"><span class="comment"># 退出虚拟环境</span></span><br><span class="line">deactivate</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在虚拟环境中安装相关包</span></span><br><span class="line">workon NAME</span><br><span class="line">pip3 install PACKAGE_NAME</span><br><span class="line"></span><br><span class="line"><span class="comment"># 卸载虚拟环境中的相关包</span></span><br><span class="line">workon NAME</span><br><span class="line">pip3 uninstall PACKAGE_NAME</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看安装的包</span></span><br><span class="line">pip3 list</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> virtualenv </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flex Box</title>
      <link href="/2019/12/05/Flex-Box/"/>
      <url>/2019/12/05/Flex-Box/</url>
      
        <content type="html"><![CDATA[<p>Flex box 即弹性布局，是 CSS3 的一种新的布局模式。是一种当页面需要适应不同的屏幕大小以及设备类型时确保元素拥有恰当的行为的布局方式。引入弹性盒布局模型的目的是提供一种更加有效的方式来对一个容器中的子元素进行排列、对齐和分配空白空间。目前基本所有的主流浏览器都支持该属性，同时好多前端的框架也都支持该属性布局。</p><p>Flex box 由 flex container 和 flex item 组成，flex box 通过设置 display 属性的值为 flex 或 inline-flex 将其定义为弹性容器，弹性容器内包含了一个或多个弹性子元素，弹性容器外及弹性子元素内是正常渲染的。弹性盒子只定义了弹性子元素如何在弹性容器内布局，弹性子元素通常在弹性盒子内一行显示，默认情况每个容器只有一行。</p><p>Flex box 的属性如下：</p><p><code>flex-direction: row | row-reverse | column | column-reverse</code></p><ul><li>row - 横向从左到右排列（左对齐），默认的排列方式</li><li>row-reverse - 反转横向排列（右对齐，从后往前排，最后一项排在最前面</li><li>column - 纵向排列</li><li>column-reverse - 反转纵向排列，从后往前排，最后一项排在最上面</li></ul><p><code>justify-content: flex-start | flex-end | center | space-between | space-around</code></p><ul><li>flex-start - 弹性项目向行头紧挨着填充</li><li>flex-end - 弹性项目向行尾紧挨着填充</li><li>center - 弹性项目居中紧挨着填充</li><li>space-between - 弹性项目平均分布在该行上</li><li>space-around - 弹性项目平均分布在该行上，两边留有一半的间隔空间</li></ul><p><code>align-items: flex-start | flex-end | center | baseline | stretch</code></p><ul><li>flex-start - 弹性盒子元素的纵轴起始位置的边界紧靠住该行的纵轴起始边界</li><li>flex-end - 弹性盒子元素的纵轴起始位置的边界紧靠住该行的纵轴结束边界</li><li>center - 弹性盒子元素在该行的纵轴上居中放置</li><li>baseline - 如弹性盒子元素的行内轴与纵轴为同一条，则该值与’flex-start’等效。其它情况下，该值将参与基线对齐</li><li>stretch - 如果指定纵轴大小的属性值为’auto’，则其值会使项目的边距盒的尺寸尽可能接近所在行的尺寸</li></ul><p><code>flex-wrap: nowrap|wrap|wrap-reverse|initial|inherit</code></p><ul><li>nowrap - 默认， 弹性容器为单行</li><li>wrap - 弹性容器为多行</li><li>wrap-reverse - 反转 wrap 排列</li></ul><p><code>align-content: flex-start | flex-end | center | space-between | space-around | stretch</code></p><ul><li>stretch - 默认。各行将会伸展以占用剩余的空间</li><li>flex-start - 各行向弹性盒容器的起始位置堆叠</li><li>flex-end - 各行向弹性盒容器的结束位置堆叠</li><li>center -各行向弹性盒容器的中间位置堆叠</li><li>space-between - 各行在弹性盒容器中平均分布</li><li>space-around - 各行在弹性盒容器中平均分布，两端保留子元素与子元素之间间距大小的一半</li></ul><p><code>order: &lt;integer&gt;</code> 用整数值来定义排列顺序，数值小的排在前面，可以为负值</p><p><code>margin: auto</code> 处理剩下的空间</p><p><code>align-self: auto | flex-start | flex-end | center | baseline | stretch</code></p><ul><li>auto - 如果’align-self’的值为’auto’，则其计算值为元素的父元素的’align-items’值，如果其没有父元素，则计算值为’stretch’</li><li>flex-start - 弹性盒子元素的纵轴起始位置的边界紧靠住该行的纵轴起始边界</li><li>flex-end - 弹性盒子元素的纵轴起始位置的边界紧靠住该行的纵轴结束边界</li><li>center - 弹性盒子元素在该行的纵轴上居中放置</li><li>baseline - 如弹性盒子元素的行内轴与纵轴为同一条，则该值与’flex-start’等效。其它情况下，该值将参与基线对齐</li><li>stretch - 如果指定纵轴大小的属性值为’auto’，则其值会使项目的边距盒的尺寸尽可能接近所在行的尺寸，但同时会遵照’min/max-width/height’属性的限制</li></ul><p><code>flex: auto | initial | none | inherit |  [ flex-grow ] || [ flex-shrink ] || [ flex-basis ]</code></p><ul><li>auto - 计算值为 1 1 auto</li><li>initial - 计算值为 0 1 auto</li><li>none - 计算值为 0 0 auto</li><li>inherit - 从父元素继承</li><li>flex-grow - 定义弹性盒子元素的扩展比率</li><li>flex-shrink - 定义弹性盒子元素的收缩比率</li><li>flex-basis - 定义弹性盒子元素的默认基准值</li></ul>]]></content>
      
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
            <tag> flex </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Greedy Algorithm</title>
      <link href="/2019/11/18/Greedy-Algorithm/"/>
      <url>/2019/11/18/Greedy-Algorithm/</url>
      
        <content type="html"><![CDATA[<p>贪心算法又称贪婪算法，是遵循某种规则，不断贪心地选取当前最优策略的算法。贪心算法的关键是贪心策略的选择，选择的贪心策略必须具备无后效性，即某个状态以前的过程不会影响以后的状态，只与当前状态有关。接下来介绍几个贪心算法的典型例子。</p><h3 id="Question-1"><a href="#Question-1" class="headerlink" title="Question 1"></a>Question 1</h3><p><img src="question1.png" alt="question1"></p><h3 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h3><p>这个问题的最优解法是每次选择结束最早的工作，这样参与的工作最多。</p><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  greedy1.cpp</span></span><br><span class="line"><span class="comment">//  GREEDY</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  Created by dusign on 2019/11/18.</span></span><br><span class="line"><span class="comment">//  Copyright © 2019 gang du. All rights reserved.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAX_SIZE = <span class="number">100000</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> *s, <span class="keyword">int</span> *t)</span></span>&#123;</span><br><span class="line">    pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; itv[n];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">        itv[i].first = t[i];</span><br><span class="line">        itv[i].second = s[i];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    sort(itv, itv + n);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>, sign = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(sign &lt; itv[i].second)&#123;</span><br><span class="line">            ans++;</span><br><span class="line">            sign = itv[i].first;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; ans &lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, s[MAX_SIZE], t[MAX_SIZE];</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; s[i];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; t[i];</span><br><span class="line">    </span><br><span class="line">    solve(n, s, t);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Question-2"><a href="#Question-2" class="headerlink" title="Question 2"></a>Question 2</h3><p><img src="question2.png" alt="question2"></p><h3 id="Analysis-1"><a href="#Analysis-1" class="headerlink" title="Analysis"></a>Analysis</h3><p>这个问题的最优解法是每次取头部和尾部中最小的一个就行，如果头部和尾部相同的话就继续比较头部和尾部的下一位。</p><h3 id="Solution-1"><a href="#Solution-1" class="headerlink" title="Solution"></a>Solution</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  greedy2.cpp</span></span><br><span class="line"><span class="comment">//  GREEDY</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  Created by dusign on 2019/11/18.</span></span><br><span class="line"><span class="comment">//  Copyright © 2019 gang du. All rights reserved.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAX_SIZE = <span class="number">2000</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">(<span class="keyword">int</span> N, <span class="keyword">char</span> *S)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a = <span class="number">0</span>, b = N - <span class="number">1</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(a &lt;= b)&#123;</span><br><span class="line">        <span class="keyword">bool</span> left = <span class="literal">false</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; a + i &lt;= b - i; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(S[a + i] &lt; S[b - i])&#123;</span><br><span class="line">                left = <span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(S[a + i] &gt; S[b - i])&#123;</span><br><span class="line">                left = <span class="literal">false</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(left) <span class="built_in">cout</span> &lt;&lt; S[a++];</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">cout</span> &lt;&lt; S[b--];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> N;</span><br><span class="line">    <span class="keyword">char</span> S[MAX_SIZE];</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; N;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; S[i];</span><br><span class="line">    </span><br><span class="line">    solve(N, S);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Question-3"><a href="#Question-3" class="headerlink" title="Question 3"></a>Question 3</h3><p><img src="question3.png" alt="question3"></p><h3 id="Analysis-2"><a href="#Analysis-2" class="headerlink" title="Analysis"></a>Analysis</h3><p>这个问题的最优解法是从第一个开始，把所有的点分成若干组，每一组两端的距离小于等于 2R，每一组中间的一个点添加标记，这样添加标记的点就是最少的。</p><h3 id="Solution-2"><a href="#Solution-2" class="headerlink" title="Solution"></a>Solution</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  greedy3.cpp</span></span><br><span class="line"><span class="comment">//  GREEDY</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  Created by dusign on 2019/11/25.</span></span><br><span class="line"><span class="comment">//  Copyright © 2019 gang du. All rights reserved.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAX_SIZE = <span class="number">1000</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">(<span class="keyword">int</span> N, <span class="keyword">int</span> R, <span class="keyword">int</span> *X)</span></span>&#123;</span><br><span class="line">    sort(X, X + N);</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>, ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i &lt; N)&#123;</span><br><span class="line">        <span class="keyword">int</span> s = X[i];</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">while</span>(i &lt; N &amp;&amp; X[i] &lt;= s + R) i++;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">int</span> p = X[i - <span class="number">1</span>];</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">while</span>(i &lt; N &amp;&amp; X[i] &lt;= p + R) i++;</span><br><span class="line">        </span><br><span class="line">        ans++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> N, R, X[MAX_SIZE];</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; N &gt;&gt; R;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; X[i];</span><br><span class="line">    </span><br><span class="line">    solve(N, R, X);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Question-4"><a href="#Question-4" class="headerlink" title="Question 4"></a>Question 4</h3><p><img src="question4.png" alt="question3"></p><h3 id="Analysis-3"><a href="#Analysis-3" class="headerlink" title="Analysis"></a>Analysis</h3><p>这个问题的最优解法是木板在切割的过程中越长的木板越早割，短的木板留到最后切割，这样的话开销最少。整个切割过程也可以看成一个二叉树，每一层都会有开销，这样的话长的木板在上面开销才最少。</p><h3 id="Solution-3"><a href="#Solution-3" class="headerlink" title="Solution"></a>Solution</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  greedy4.cpp</span></span><br><span class="line"><span class="comment">//  GREEDY</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  Created by dusign on 2019/11/27.</span></span><br><span class="line"><span class="comment">//  Copyright © 2019 gang du. All rights reserved.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAX_SIZE = <span class="number">50000</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">(<span class="keyword">int</span> N, <span class="keyword">int</span> *L)</span></span>&#123;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> ans = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(N &gt; <span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">int</span> mii1 = <span class="number">0</span>, mii2 = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(L[mii1] &gt; L[mii2]) swap(mii1, mii2);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>; i &lt; N; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(L[i] &lt; L[mii1])&#123;</span><br><span class="line">                mii2 = mii1;</span><br><span class="line">                mii1 = i;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(L[i] &lt; L[mii2])&#123;</span><br><span class="line">                mii2 = i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> t = L[mii1] + L[mii2];</span><br><span class="line">        ans += t;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(mii1 == N<span class="number">-1</span>) swap(mii1, mii2);</span><br><span class="line">        </span><br><span class="line">        L[mii1] = t;</span><br><span class="line">        L[mii2] = L[N - <span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">        N--;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> N, L[MAX_SIZE];</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; N;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; L[i];</span><br><span class="line">    </span><br><span class="line">    solve(N, L);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> algorithm </tag>
            
            <tag> greedy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ants</title>
      <link href="/2019/11/12/Ants/"/>
      <url>/2019/11/12/Ants/</url>
      
        <content type="html"><![CDATA[<p>Algorithms change the world. The importance of algorithms is self-evident to a programmer, so the practice of some algorithms is indispensable. Next, I will share some algorithmic problems.</p><h3 id="Question"><a href="#Question" class="headerlink" title="Question"></a>Question</h3><p><img src="ants-crawl.png" alt="ants"></p><h3 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h3><p>看到本题，很容易想到的是穷竭搜索，但是如果蚂蚁数量大的话穷竭搜索时间复杂度太大。仔细分析本题发现如果两只蚂蚁相遇之后各自掉头也可以看成两只蚂蚁交错通过，这对于结果没有什么影响，利用这一发现可以很容易的解决此问题。</p><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  ants.cpp</span></span><br><span class="line"><span class="comment">//  ANTS</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  Created by dusign on 2019/11/16.</span></span><br><span class="line"><span class="comment">//  Copyright © 2019 gang du. All rights reserved.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAP_SIZE = <span class="number">10000</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">max</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> tmp = a;</span><br><span class="line">    <span class="keyword">if</span>(b &gt; a)</span><br><span class="line">        tmp = b;</span><br><span class="line">    <span class="keyword">return</span> tmp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">min</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> tmp = a;</span><br><span class="line">    <span class="keyword">if</span>(b &lt; a)</span><br><span class="line">        tmp = b;</span><br><span class="line">    <span class="keyword">return</span> tmp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">(<span class="keyword">int</span> L, <span class="keyword">int</span> n, <span class="keyword">int</span> *x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> minT = <span class="number">0</span>, maxT = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">        minT = max(minT, min(x[i], (L - x[i])));</span><br><span class="line">        maxT = max(maxT, max(x[i], (L - x[i])));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; minT &lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; maxT &lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> L, n, x[MAP_SIZE];</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; L &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i ++)&#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; x[i];</span><br><span class="line">    &#125;</span><br><span class="line">    solve(L, n, x);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Remark"><a href="#Remark" class="headerlink" title="Remark"></a>Remark</h3><p>解决一些算法问题时，要先想一想能不能用数学的思维简化问题，这样有时候会得到事半功倍的效果。就像是本题，如果使用穷竭搜索，不仅费时费力，而且时间复杂度也不理想。</p>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> algorithm </tag>
            
            <tag> POJ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>How Browsers Work</title>
      <link href="/2019/11/06/How-Browsers-Work/"/>
      <url>/2019/11/06/How-Browsers-Work/</url>
      
        <content type="html"><![CDATA[<p>This comprehensive primer on the internal operations of WebKit and Gecko is the result of much research done by Israeli developer Tali Garsiel. Over a few years, she reviewed all the published data about browser internals and spent a lot of time reading web browser source code. The original address of the article is <a href="http://taligarsiel.com" target="_blank" rel="noopener">Tali garsiel’s site</a>.</p><h1 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h1><p>Web browsers are probably the most widely used software. In this book I will explain how they work behind the scenes. We will see what happens when you type ‘google.com’ in the address bar until you see the Google page on the browser screen.</p><h2 id="The-browsers-we-will-talk-about"><a href="#The-browsers-we-will-talk-about" class="headerlink" title="The browsers we will talk about"></a>The browsers we will talk about</h2><p>There are five major browsers used today - Internet Explorer, Firefox, Safari, Chrome and Opera. I will give examples from the open source browsers - Firefox,Chrome and Safari, which is partly open source. According to the W3C browser statistics, currently(October 2009), the usage share of Firefox, Safari and Chrome together is nearly 60%. So nowdays open source browsers are a substantial part of the browser business.</p><h2 id="The-browser’s-main-functionality"><a href="#The-browser’s-main-functionality" class="headerlink" title="The browser’s main functionality"></a>The browser’s main functionality</h2><p>The browser main functionality is to present the web resource you choose, by requesting it from the server and displaying it on the browser window. The resource format is usually HTML but also PDF, image and more. The location of the resource is specified by the user using a URI (Uniform resource Identifier). More on that in the network chapter.</p><p>The way the browser interprets and displays HTML files is specified in the HTML and CSS specifications. These specifications are maintained by the W3C (World Wide Web Consortium) organization, which is the standards organization for the web. The current version of HTML is <a href="http://www.w3.org/TR/html401/" target="_blank" rel="noopener">version 4</a>. Version 5 is in progress. The current CSS version is <a href="http://www.w3.org/TR/CSS2/" target="_blank" rel="noopener">version 2</a> and version 3 is in progress. For years browsers conformed to only a part of the specifications and developed their own extensions. That caused serious compatibility issues for web authors. Today most of the browsers more or less conform to the specifications.</p><p>Browsers’ user interface have a lot in common with each other. Among the common user interface elements are:</p><ul><li>Address bar for inserting the URI</li><li>Back and forward buttons</li><li>Bookmarking options</li><li>A refresh and stop buttons for refreshing and stopping the loading of current documents</li><li>Home button that gets you to your home page</li></ul><p>Strangely enough, the browser’s user interface is not specified in any formal specification, it is just good practices shaped over years of experience and by browsers imitating each other. The HTML5 specification doesn’t define UI elements a browser must have, but lists some common elements. Among those are the address bar, status bar and tool bar. There are, of course, features unique to a specific browser like Firefox downloads manager. More on that in the user interface chapter.</p><h2 id="The-browser’s-high-level-structure"><a href="#The-browser’s-high-level-structure" class="headerlink" title="The browser’s high level structure"></a>The browser’s high level structure</h2><p>The browser’s main components are (1.1):</p><ol><li>The user interface - this includes the address bar, back/forward button, bookmarking menu etc. Every part of the browser display except the main window where you see the requested page.</li><li>The browser engine - the interface for querying and manipulating the rendering engine.</li><li>The rendering engine - responsible for displaying the requested content. For example if the requested content is HTML, it is responsible for parsing the HTML and CSS and displaying the parsed content on the screen.</li><li>Networking - used for network calls, like HTTP requests. It has platform independent interface and underneath implementations for each platform.</li><li>UI backend - used for drawing basic widgets like combo boxes and windows. It exposes a generic interface that is not platform specific. Underneath it uses the operating system user interface methods.</li><li>JavaScript interpreter. Used to parse and execute the JavaScript code.</li><li>Data storage. This is a persistence layer. The browser needs to save all sorts of data on the hard disk, for examples, cookies. The new HTML specification (HTML5) defines ‘web database’ which is a complete (although light) database in the browser.</li></ol><p><img src="figure1.png" alt="Browser main components"></p><p><strong><center>Figure 1: Browser main components.</center></strong></p><p>It is important to note that Chrome, unlike most browsers, holds multiple instances of the rendering engine - one for each tab,. Each tab is a separate process.</p><p>I will devote a chapter for each of these components.</p><h2 id="Communication-between-the-components"><a href="#Communication-between-the-components" class="headerlink" title="Communication between the components"></a>Communication between the components</h2><p>Both Firefox and Chrome developed a special communication infrastructures. They will be discussed in a special chapter.</p><h1 id="The-rendering-engine"><a href="#The-rendering-engine" class="headerlink" title="The rendering engine"></a>The rendering engine</h1><p>The responsibility of the rendering engine is well… Rendering, that is display of the requested contents on the browser screen.</p><p>By default the rendering engine can display HTML and XML documents and images. It can display other types through a plug-in (a browser extension). An example is displaying PDF using a PDF viewer plug-in. We will talk about plug-ins and extensions in a special chapter. In this chapter we will focus on the main use case - displaying HTML and images that are formatted using CSS.</p><h2 id="Rendering-engines"><a href="#Rendering-engines" class="headerlink" title="Rendering engines"></a>Rendering engines</h2><p>Our reference browsers - Firefox, Chrome and Safari are built upon two rendering engines. Firefox uses Gecko - a “home made” Mozilla rendering engine. Both Safari and Chrome use Webkit.</p><p>Webkit is an open source rendering engine which started as an engine for the Linux platform and was modified by Apple to support Mac and Windows. See <a href="http://webkit.org/" target="_blank" rel="noopener">http://webkit.org/</a> for more details.</p><h2 id="The-main-flow"><a href="#The-main-flow" class="headerlink" title="The main flow"></a>The main flow</h2><p>The rendering engine will start getting the contents of the requested document from the networking layer. This will usually be done in 8K chunks.</p><p>After that this is the basic flow of the rendering engine:</p><p><img src="figure2.png" alt="Rendering engine basic flow"></p><p><strong><center>Figure 2:Rendering engine basic flow.</center></strong></p><p>The rendering engine will start parsing the HTML document and turn the tags to DOM nodes in a tree called the “content tree”. It will parse the style data, both in external CSS files and in style elements. The styling information together with visual instructions in the HTML will be used to create another tree - the render tree.</p><p>The render tree contains rectangles with visual attributes like color and dimensions. The rectangles are in the right order to be displayed on the screen.</p><p>After the construction of the render tree it goes through a “layout” process. This means giving each node the exact coordinates where it should appear on the screen. The next stage is painting - the render tree will be traversed and each node will be painted using the UI backend layer.</p><p>It’s important to understand that this is a gradual process. For better user experience, the rendering engine will try to display contents on the screen as soon as possible. It will not wait until all HTML is parsed before starting to build and layout the render tree. Parts of the content will be parsed and displayed, while the process continues with the rest of the contents that keeps coming from the network.</p><h2 id="Main-flow-examples"><a href="#Main-flow-examples" class="headerlink" title="Main flow examples"></a>Main flow examples</h2><p><img src="figure3.png" alt="Webkit main flow"></p><p><strong><center>Figure 3: Webkit main flow</center></strong></p><p><img src="figure4.jpg" alt="Mozilla&#39;s Gecko rendering engine main flow"></p><p><strong><center>Figure 4: Mozilla's Gecko rendering engine main flow(3.6)</center></strong></p><p>From figures 3 and 4 you can see that although Webkit and Gecko use slightly different terminology, the flow is basically the same.<br>Gecko calls the tree of visually formatted elements - Frame tree. Each element is a frame. Webkit uses the term “Render Tree” and it consists of “Render Objects”. Webkit uses the term “layout” for the placing of elements, while Gecko calls it “Reflow”. “Attachment” is Webkit’s term for connecting DOM nodes and visual information to create the render tree. A minor non semantic difference is that Gecko has an extra layer between the HTML and the DOM tree. It is called the “content sink” and is a factory for making DOM elements. We will talk about each part of the flow:</p><h2 id="Parsing-and-DOM-tree-construction"><a href="#Parsing-and-DOM-tree-construction" class="headerlink" title="Parsing and DOM tree construction"></a>Parsing and DOM tree construction</h2><h3 id="Parsing-general"><a href="#Parsing-general" class="headerlink" title="Parsing - general"></a>Parsing - general</h3><p>Since parsing is a very significant process within the rendering engine, we will go into it a little more deeply. Let’s begin with a little introduction about parsing.</p><p>Parsing a document means translating it to some structure that makes sense - something the code can understand and use. The result of parsing is usually a tree of nodes that represent the structure of the document. It is called a parse tree or a syntax tree.</p><p>Example - parsing the expression “2 + 3 - 1” could return this tree:</p><p><img src="figure5.png" alt="mathematical expression tree node"></p><p><strong><center>Figure 5: mathematical expression tree node</center></strong></p><h4 id="Grammars"><a href="#Grammars" class="headerlink" title="Grammars"></a>Grammars</h4><p>Parsing is based on the syntax rules the document obeys - the language or format it was written in. Every format you can parse must have deterministic grammar consisting of vocabulary and syntax rules. It is called a context free grammar. Human languages are not such languages and therefore cannot be parsed with conventional parsing techniques.</p><h4 id="Parser-Lexer-combination"><a href="#Parser-Lexer-combination" class="headerlink" title="Parser - Lexer combination"></a>Parser - Lexer combination</h4><p>Parsing can be separated into two sub processes - lexical analysis and syntax analysis.</p><p>Lexical analysis is the process of breaking the input into tokens. Tokens are the language vocabulary - the collection of valid building blocks. In human language it will consist of all the words that appear in the dictionary for that language.</p><p>Syntax analysis is the applying of the language syntax rules.</p><p>Parsers usually divide the work between two components - the lexer(sometimes called tokenizer) that is responsible for breaking the input into valid tokens, and the parser that is responsible for constructing the parse tree by analyzing the document structure according to the language syntax rules. The lexer knows how to strip irrelevant characters like white spaces and line breaks.</p><p><img src="figure6.png" alt="from source document to parse trees"></p><p><strong><center>Figure 6: from source document to parse trees</center></strong></p><p>The parsing process is iterative. The parser will usually ask the lexer for a new token and try to match the token with one of the syntax rules. If a rule is matched, a node corresponding to the token will be added to the parse tree and the parser will ask for another token. </p><p>If no rule matches, the parser will store the token internally, and keep asking for tokens until a rule matching all the internally stored tokens is found. If no rule is found then the parser will raise an exception. This means the document was not valid and contained syntax errors.</p><h4 id="Translation"><a href="#Translation" class="headerlink" title="Translation"></a>Translation</h4><p>Many times the parse tree is not the final product. Parsing is often used in translation - transforming the input document to another format. An example is compilation. The compiler that compiles a source code into machine code first parses it into a parse tree and then translates the tree into a machine code document.</p><p><img src="figure7.png" alt="compilation flow"></p><p><strong><center>Figure 7: compilation flow</center></strong></p><h4 id="Parsing-example"><a href="#Parsing-example" class="headerlink" title="Parsing example"></a>Parsing example</h4><p>In figure 5 we built a parse tree from a mathematical expression. Let’s try to define a simple mathematical language and see the parse process.</p><p>Vocabulary: Our language can include integers, plus signs and minus signs.</p><p>Syntax:</p><ol><li>The language syntax building blocks are expressions, terms and operations.</li><li>Our language can include any number of expressions.</li><li>A expression is defined as a “term” followed by an “operation” followed by another term</li><li>An operation is a plus token or a minus token</li><li>A term is an integer token or an expression</li></ol><p>Let’s analyze the input “2 + 3 - 1”:</p><p>The first substring that matches a rule is “2”, according to rule #5 it is a term. The second match is “2 + 3” this matches the second rule - a term followed by an operation followed by another term. The next match will only be hit at the end of the input. “2 + 3 - 1” is an expression because we already know that ?2+3? is a term so we have a term followed by an operation followed by another term. “2 + + “will not match any rule and therefore is an invalid input.</p><h4 id="Formal-definitions-for-vocabulary-and-syntax"><a href="#Formal-definitions-for-vocabulary-and-syntax" class="headerlink" title="Formal definitions for vocabulary and syntax"></a>Formal definitions for vocabulary and syntax</h4><p>Vocabulary is usually expressed by regular expressions.</p><p>For example our language will be defined as:<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">INTEGER : <span class="number">0</span>|[<span class="number">1</span><span class="number">-9</span>][<span class="number">0</span><span class="number">-9</span>]*</span><br><span class="line">PLUS : +</span><br><span class="line">MINUS : -</span><br></pre></td></tr></table></figure></p><p>As you see, integers are defined by a regular expression.</p><p>Syntax is usually defined in a format called BNF. Our language will be defined as:<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">expression := term  operation  term</span><br><span class="line">operation := PLUS | MINUS</span><br><span class="line">term := INTEGER | expression</span><br></pre></td></tr></table></figure></p><p>We said that a language can be parsed by regular parsers if its grammar is a context frees grammar. An intuitive definition of a context free grammar is a grammar that can be entirely expressed in BNF. For a formal definition see <a href="http://en.wikipedia.org/wiki/Context-free_grammar" target="_blank" rel="noopener">http://en.wikipedia.org/wiki/Context-free_grammar</a></p><h4 id="Types-of-parsers"><a href="#Types-of-parsers" class="headerlink" title="Types of parsers"></a>Types of parsers</h4><p>There are two basic types of parsers - top down parsers and bottom up parsers. An intuitive explanation is that top down parsers see the high level structure of the syntax and try to match one of them. Bottom up parsers start with the input and gradually transform it into the syntax rules, starting from the low level rules until high level rules are met.</p><p>Let’s see how the two types of parsers will parse our example:</p><p>Top down parser will start from the higher level rule - it will identify “2 + 3” as an expression. It will then identify “2 + 3 - 1” as an expression (the process of identifying the expression evolves matching the other rules, but the start point is the highest level rule).</p><p>The bottom up parser will scan the input until a rule is matched it will then replace the matching input with the rule. This will go on until the end of the input. The partly matched expression is placed on the parsers stack.</p><center>    <table style="text-align:center;width:500px;padding:0px;font-size:14px;">        <tr style="height:10px;padding:0px;margin:0px;">            <th><center>Stack</center></th>            <th><center>Input</center></th>        </tr>        <tr style="height:8px;padding:0px;margin:0px;">            <td></td>            <td>2 + 3 - 1</td>        </tr>        <tr style="height:8px;padding:0px;margin:0px;">            <td>term</td>            <td>+ 3 - 1</td>        </tr>        <tr style="height:8px;padding:0px;margin:0px;">            <td>term operation</td>            <td>3 - 1</td>        </tr>        <tr style="height:8px;padding:0px;margin:0px;">            <td>expression</td>            <td>- 1</td>        </tr>        <tr style="height:8px;padding:0px;margin:0px;">            <td>expression operation</td>            <td>1</td>        </tr>        <tr style="height:8px;padding:0px;margin:0px;">            <td>expression</td>            <td></td>        </tr>    </table></center><p>This type of bottom up parser is called a shift reduce parser, because the input is shifted to the right (imagine a pointer pointing first at the input start and moving to the right) and is gradually reduced to syntax rules.</p><h4 id="Generating-parsers-automatically"><a href="#Generating-parsers-automatically" class="headerlink" title="Generating parsers automatically"></a>Generating parsers automatically</h4><p>There are tools that can generate a parser for you. They are called parser generators. You feed them with the grammar of your language - its vocabulary and syntax rules and they generate a working parser. Creating a parser requires a deep understanding of parsing and its not easy to create an optimized parser by hand, so parser generators can be very useful.</p><p>Webkit uses two well known parser generators - Flex for creating a lexer and Bison for creating a parser (you might run into them with the names Lex and Yacc). Flex input is a file containing regular expression definitions of the tokens. Bison’s input is the language syntax rules in BNF format.</p><h3 id="HTML-Parser"><a href="#HTML-Parser" class="headerlink" title="HTML Parser"></a>HTML Parser</h3><p>The job of the HTML parser is to parse the HTML markup into a parse tree.</p><h4 id="The-HTML-grammar-definition"><a href="#The-HTML-grammar-definition" class="headerlink" title="The HTML grammar definition"></a>The HTML grammar definition</h4><p>The vocabulary and syntax of HTML are defined in specifications created by the w3c organization. The current version is HTML4 and work on HTML5 is in progress.</p><h4 id="Not-a-context-free-grammar"><a href="#Not-a-context-free-grammar" class="headerlink" title="Not a context free grammar"></a>Not a context free grammar</h4><p>As we have seen in the parsing introduction, grammar syntax can be defined formally using formats like BNF. </p><p>Unfortunately all the conventional parser topics do not apply to HTML (I didn’t bring them up just for fun - they will be used in parsing CSS and JavaScript). HTML cannot easily be defined by a context free grammar that parsers need. </p><p>There is a formal format for defining HTML - DTD (Document Type Definition) - but it is not a context free grammar. </p><p>This appears strange at first site - HTML is rather close to XML .There are lots of available XML parsers. There is an XML variation of HTML - XHTML - so what’s the big difference? </p><p>The difference is that HTML approach is more “forgiving”, it lets you omit certain tags which are added implicitly, sometimes omit the start or end of tags etc. On the whole it’s a “soft” syntax, as opposed to XML’s stiff and demanding syntax. </p><p>Apparently this seemingly small difference makes a world of a difference. On one hand this is the main reason why HTML is so popular - it forgives your mistakes and makes life easy for the web author. On the other hand, it makes it difficult to write a format grammar. So to summarize - HTML cannot be parsed easily, not by conventional parsers since its grammar is not a context free grammar, and not by XML parsers.</p><h4 id="HTML-DTD"><a href="#HTML-DTD" class="headerlink" title="HTML DTD"></a>HTML DTD</h4><p>HTML definition is in a DTD format. This format is used to define languages of the SGML family. The format contains definitions for all allowed elements, their attributes and hierarchy. As we saw earlier, the HTML DTD doesn’t form a context free grammar.</p><p>There are a few variations of the DTD. The strict mode conforms solely to the specifications but other modes contain support for markup used by browsers in the past. The purpose is backwards compatibility with older content. The current strict DTD is here: <a href="http://www.w3.org/TR/html4/strict.dtd" target="_blank" rel="noopener">http://www.w3.org/TR/html4/strict.dtd</a></p><h4 id="DOM"><a href="#DOM" class="headerlink" title="DOM"></a>DOM</h4><p>The output tree - the parse tree is a tree of DOM element and attribute nodes. DOM is short for Document Object Model. It is the object presentation of the HTML document and the interface of HTML elements to the outside world like JavaScript. </p><p>The root of the tree is the “Document” object.</p><p>The DOM has an almost one to one relation to the markup. Example, this markup:<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">            Hello World</span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"example.png"</span>/&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>Would be translated to the following DOM tree:</p><p><img src="figure8.png" alt="DOM tree of the example markup"></p><p><strong><center>Figure 8: DOM tree of the example markup</center></strong></p><p>Like HTML, DOM is specified by the w3c organization. See <a href="http://www.w3.org/DOM/DOMTR" target="_blank" rel="noopener">http://www.w3.org/DOM/DOMTR</a>. It is a generic specification for manipulating documents. A specific module describes HTML specific elements. The HTML definitions can be found here: <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/idl-definitions.html" target="_blank" rel="noopener">http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/idl-definitions.html</a>.</p><p>When I say the tree contains DOM nodes, I mean the tree is constructed of elements that implement one of the DOM interfaces. Browsers use concrete implementations that have other attributes used by the browser internally.</p><h4 id="The-parsing-algorithm"><a href="#The-parsing-algorithm" class="headerlink" title="The parsing algorithm"></a>The parsing algorithm</h4><p>As we saw in the previous sections, HTML cannot be parsed using the regular top down or bottom up parsers.</p><p>The reasons are:</p><ol><li>The forgiving nature of the language.</li><li>The fact that browsers have traditional error tolerance to support well known cases of invalid HTML.</li><li>The parsing process in reentrant. Usually the source doesn’t change during parsing, but in HTML, script tags containing “document.write” can add extra tokens, so the parsing process actually modifies the input.</li></ol><p>Unable to use the regular parsing techniques, browsers create custom parsers for parsing HTML.</p><p>The parsing algorithm is described in details by the HTML5 specification. The algorithm consists of two stages - tokenization and tree construction.</p><p>Tokenization is the lexical analysis, parsing the input into tokens. Among HTML tokens are start tags, end tags, attribute names and attribute values.</p><p>The tokenizer recognizes the token, gives it to the tree constructor and consumes the next character for recognizing the next token and so on until the end of the input.</p><p><img src="figure61.png" alt="HTML parsing flow"></p><p><strong><center>Figure 6: HTML parsing flow (taken from HTML5 spec)</center></strong></p><h4 id="The-tokenization-algorithm"><a href="#The-tokenization-algorithm" class="headerlink" title="The tokenization algorithm"></a>The tokenization algorithm</h4><p>The algorithm’s output is an HTML token. The algorithm is expressed as a state machine. Each state consumes one or more characters of the input stream and updates the next state according to those characters. The decision is influenced by the current tokenization state and by the tree construction state. This means the same consumed character will yield different results for the correct next state, depending on the current state. The algorithm is too complex to bring fully, so let’s see a simple example that will help us understand the principal.</p><p>Basic example - tokenizing the following HTML:<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        Hello world</span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>The initial state is the “Data state”. When the “&lt;” character is encountered, the state is changed to “Tag open state”. Consuming an “a-z” character causes creation of a “Start tag token”, the state is change to “Tag name state”. We stay in this state until the “&gt;” character is consumed. Each character is appended to the new token name. In our case the created token is an “html” token. </p><p>When the “&gt;” tag is reached, the current token is emitted and the state changes back to the “Data state”. The “<body>" tag will be treated by the same steps. So far the "html" and "body" tags were emitted. We are now back at the "Data state". Consuming the "H" character of "Hello world" will cause creation and emitting of a character token, this goes on until the "<" of "</body>“ is reached. We will emit a character token for each character of “Hello world”. </p><p>We are now back at the “Tag open state”. Consuming the next input “/“ will cause creation of an “end tag token” and a move to the “Tag name state”. Again we stay in this state until we reach “&gt;”.Then the new tag token will be emitted and we go back to the “Data state”. The “&lt;/html&gt;” input will be treated like the previous case.</p><p><img src="figure9.png" alt="Tokenizing the example input"></p><p><strong><center>Figure 9: Tokenizing the example input</center></strong></p><h4 id="Tree-construction-algorithm"><a href="#Tree-construction-algorithm" class="headerlink" title="Tree construction algorithm"></a>Tree construction algorithm</h4><p>When the parser is created the Document object is created. During the tree construction stage the DOM tree with the Document in its root will be modified and elements will be added to it. Each node emitted by the tokenizer will be processed by the tree constructor. For each token the specification defines which DOM element is relevant to it and will be created for this token. Except of adding the element to the DOM tree it is also added to a stack of open elements. This stack is used to correct nesting mismatches and unclosed tags. The algorithm is also described as a state machine. The states are called “insertion modes”.</p><p>Let’s see the tree construction process for the example input:<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        Hello world</span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>The input to the tree construction stage is a sequence of tokens from the tokenization stage The first mode is the “initial mode”. Receiving the html token will cause a move to the “before html” mode and a reprocessing of the token in that mode. This will cause a creation of the HTMLHtmlElement element and it will be appended to the root Document object. </p><p>The state will be changed to “before head”. We receive the “body” token. An HTMLHeadElement will be created implicitly although we don’t have a “head” token and it will be added to the tree. </p><p>We now move to the “in head” mode and then to “after head”. The body token is reprocessed, an HTMLBodyElement is created and inserted and the mode is transferred to “in body”. </p><p>The character tokens of the “Hello world” string are now received. The first one will cause creation and insertion of a “Text” node and the other characters will be appended to that node. </p><p>The receiving of the body end token will cause a transfer to “after body” mode. We will now receive the html end tag which will move us to “after after body” mode. Receiving the end of file token will end the parsing.</p><p><img src="figure10.gif" alt="tree construction of example html"></p><p><strong><center>Figure 10: tree construction of example html</center></strong></p><h4 id="Actions-when-the-parsing-is-finished"><a href="#Actions-when-the-parsing-is-finished" class="headerlink" title="Actions when the parsing is finished"></a>Actions when the parsing is finished</h4><p>At this stage the browser will mark the document as interactive and start parsing scripts that are in “deferred” mode - those who should be executed after the document is parsed. The document state will be then set to “complete” and a “load” event will be fired.</p><p>You can see the full algorithms for tokenization and tree construction in HTML5 specification - <a href="http://www.w3.org/TR/html5/syntax.html#html-parser" target="_blank" rel="noopener">http://www.w3.org/TR/html5/syntax.html#html-parser</a></p><h4 id="Browsers-error-tolerance"><a href="#Browsers-error-tolerance" class="headerlink" title="Browsers error tolerance"></a>Browsers error tolerance</h4><p>You never get an “Invalid Syntax” error on an HTML page. Browsers fix an invalid content and go on. </p><p>Take this HTML for example:<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mytag</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mytag</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        Really lousy HTML</span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>I must have violated about a million rules (“mytag” is not a standard tag, wrong nesting of the “p” and “div” elements and more) but the browser still shows it correctly and doesn’t complain. So a lot of the parser code is fixing the HTML author mistakes.</p><p>The error handling is quite consistent in browsers but amazingly enough it’s not part of HTML current specification. Like bookmarking and back/forward buttons it’s just something that developed in browsers over the years. There are known invalid HTML constructs that repeat themselves in many sites and the browsers try to fix them in a conformant way with other browsers.</p><p>The HTML5 specification does define some of these requirements. Webkit summarizes this nicely in the comment at the beginning of the HTML parser class</p><p>The parser parses tokenized input into the document, building up the document tree. If the document is well-formed, parsing it is straightforward. Unfortunately, we have to handle many HTML documents that are not well-formed, so the parser has to be tolerant about errors.</p><p>We have to take care of at least the following error conditions:</p><ol><li>The element being added is explicitly forbidden inside some outer tag.In this case we should close all tags up to the one, which forbids the element, and add it afterwards.</li><li>We are not allowed to add the element directly. It could be that the person writing the document forgot some tag in between (or that the tag in between is optional).This could be the case with the following tags: HTML HEAD BODY TBODY TR TD LI (did I forget any?). </li><li>We want to add a block element inside to an inline element. Close all inline elements up to the next higher block element.</li><li>If this doesn’t help, close elements until we are allowed to add the element or ignore the tag.</li></ol><p>Let’s see some Webkit error tolerance examples:<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">br</span>&gt;</span> instead of <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>Some sites use <code>&lt;/br&gt;</code> instead of <code>&lt;br&gt;</code>. In order to be compatible with IE and Firefox Webkit treats this like <code>&lt;br&gt;</code>.<br>The code:<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (t-&gt;isCloseTag(brTag) &amp;&amp; m_document-&gt;inCompatMode()) &#123;</span><br><span class="line">    reportError(MalformedBRError);</span><br><span class="line">    t-&gt;beginTag = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>Note - the error handling is internal - it won’t be presented to the user.</p><p><strong>A stray table</strong></p><p>A stray table is a table inside another table contents but not inside a table cell.<br>Like this example:<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>inner table<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>outer table<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>Webkit will change the hierarchy to two sibling tables:<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>outer table<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>inner table<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>The code:<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (m_inStrayTableContent &amp;&amp; localName == tableTag)</span><br><span class="line">    popBlock(tableTag);</span><br></pre></td></tr></table></figure></p><p>Webkit uses a stack for the current element contents - it will pop the inner table out of the outer table stack. The tables will now be siblings.</p><p><strong>Nested form elements</strong></p><p>In case the user puts a form inside another form, the second form is ignored.<br>The code:<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (!m_currentFormElement) &#123;</span><br><span class="line">    m_currentFormElement = <span class="keyword">new</span> HTMLFormElement(formTag,    m_document);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><strong>A too deep tag hierarchy</strong></p><p>The comment speaks for itself. </p><p>www.liceo.edu.mx is an example of a site that achieves a level of nesting of about 1500 tags, all from a bunch of <code>&lt;b&gt;</code>s. We will only allow at most 20 nested tags of the same type before just ignoring them all together.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">bool HTMLParser::allowNestedRedundantTag(<span class="keyword">const</span> AtomicString&amp; tagName)&#123;</span><br><span class="line">unsigned i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (HTMLStackElem* curr = m_blockStack;</span><br><span class="line">        i &lt; cMaxRedundantTagDepth &amp;&amp; curr &amp;&amp; curr-&gt;tagName == tagName;</span><br><span class="line">    curr = curr-&gt;next, i++) &#123; &#125;</span><br><span class="line"><span class="keyword">return</span> i != cMaxRedundantTagDepth;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Misplaced html or body end tags</strong></p><p>Again - the comment speaks for itself.</p><p>Support for really broken html.We never close the body tag, since some stupid web pages close it before the actual end of the doc.<br>Let’s rely on the end() call to close things.<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (t-&gt;tagName == htmlTag || t-&gt;tagName == bodyTag )</span><br><span class="line">    <span class="keyword">return</span>;</span><br></pre></td></tr></table></figure></p><p>So web authors beware - unless you want to appear as an example in a Webkit error tolerance code - write well formed HTML.</p><h3 id="CSS-parsing"><a href="#CSS-parsing" class="headerlink" title="CSS parsing"></a>CSS parsing</h3><p>Remember the parsing concepts in the introduction? Well, unlike HTML, CSS is a context free grammar and can be parsed using the types of parsers described in the introduction. In fact the CSS specification defines CSS lexical and syntax grammar (<a href="http://www.w3.org/TR/CSS2/grammar.html" target="_blank" rel="noopener">http://www.w3.org/TR/CSS2/grammar.html</a>).</p><p>Let’s see some examples:<br>The lexical grammar (vocabulary) is defined by regular expressions for each token:<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">comment     \/\*[^*]*\*+([^/*][^*]*\*+)*\/</span><br><span class="line">num         [0-9]+|[0-9]*"."[0-9]+</span><br><span class="line"><span class="selector-tag">nonascii</span>    <span class="selector-attr">[\200-\377]</span></span><br><span class="line">nmstart     [_a-z]|&#123;nonascii&#125;|&#123;escape&#125;</span><br><span class="line">nmchar      [_a-z0-9-]|&#123;nonascii&#125;|&#123;escape&#125;</span><br><span class="line">name        &#123;nmchar&#125;+</span><br><span class="line">ident       &#123;nmstart&#125;&#123;nmchar&#125;*</span><br></pre></td></tr></table></figure></p><p>“ident” is short for identifier, like a class name. “name” is an element id (that is referred by “#” )</p><p>The syntax grammar is described in BNF.<br><figure class="highlight bnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">ruleset</span><br><span class="line">  : selector [ ',' S* selector ]*</span><br><span class="line">    '&#123;' S* declaration [ ';' S* declaration ]* '&#125;' S*</span><br><span class="line">  ;</span><br><span class="line">selector</span><br><span class="line">  : simple_selector [ combinator selector | S+ [ combinator selector ] ]</span><br><span class="line">  ;</span><br><span class="line">simple_selector</span><br><span class="line">  : element_name [ HASH | class | attrib | pseudo ]*</span><br><span class="line">  | [ HASH | class | attrib | pseudo ]+</span><br><span class="line">  ;</span><br><span class="line">class</span><br><span class="line">  : '.' IDENT</span><br><span class="line">  ;</span><br><span class="line">element_name</span><br><span class="line">  : IDENT | '*'</span><br><span class="line">  ;</span><br><span class="line">attrib</span><br><span class="line">  : '[' S* IDENT S* [ [ '=' | INCLUDES | DASHMATCH ] S*</span><br><span class="line">    [ IDENT | STRING ] S* ] ']'</span><br><span class="line">  ;</span><br><span class="line">pseudo</span><br><span class="line">  : ':' [ IDENT | FUNCTION S* [IDENT S*] ')' ]</span><br><span class="line">  ;</span><br></pre></td></tr></table></figure></p><p>Explanation: A ruleset is this structure:<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span><span class="selector-class">.error</span>, <span class="selector-tag">a</span><span class="selector-class">.error</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>:red;</span><br><span class="line">    <span class="attribute">font-weight</span>:bold;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>div.error and a.error are selectors. The part inside the curly braces contains the rules that are applied by this ruleset. This structure is defined formally in this definition:<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">ruleset</span></span><br><span class="line">  : <span class="selector-tag">selector</span> <span class="selector-attr">[ ',' S* selector ]</span>*</span><br><span class="line">    '&#123;' S* declaration [ ';' S* declaration ]* '&#125;' S*</span><br><span class="line">  ;</span><br></pre></td></tr></table></figure></p><p>This means a ruleset is a selector or optionally number of selectors separated by a coma and spaces (S stands for white space). A ruleset contains curly braces and inside them a declaration or optionally a number of declarations separated by a semicolon. “declaration” and “selector” will be defined in the following BNF definitions.</p><h4 id="Webkit-CSS-parser"><a href="#Webkit-CSS-parser" class="headerlink" title="Webkit CSS parser"></a>Webkit CSS parser</h4><p>Webkit uses Flex and Bison parser generators to create parsers automatically from the CSS grammar files. As you recall from the parser introduction, Bison creates a bottom up shift reduce parser. Firefox uses a top down parser written manually. In both cases each CSS file is parsed into a StyleSheet object, each object contains CSS rules. The CSS rule objects contain selector and declaration objects and other object corresponding to CSS grammar.</p><p><img src="figure71.png" alt="parsing CSS"></p><p><strong><center>Figure 7: parsing CSS</center></strong></p><h3 id="Parsing-scripts"><a href="#Parsing-scripts" class="headerlink" title="Parsing scripts"></a>Parsing scripts</h3><p>This will be dealt with in the chapter about JavaScript</p><h3 id="The-order-of-processing-scripts-and-style-sheets"><a href="#The-order-of-processing-scripts-and-style-sheets" class="headerlink" title="The order of processing scripts and style sheets"></a>The order of processing scripts and style sheets</h3><h4 id="Scripts"><a href="#Scripts" class="headerlink" title="Scripts"></a>Scripts</h4><p>The model of the web is synchronous. Authors expect scripts to be parsed and executed immediately when the parser reaches a <code>&lt;script&gt;</code> tag. The parsing of the document halts until the script was executed. If the script is external then the resource must be first fetched from the network - this is also done synchronously, the parsing halts until the resource is fetched. This was the model for many years and is also specified in HTML 4 and 5 specifications. Authors could mark the script as “defer” and thus it will not halt the document parsing and will execute after it is parsed. HTML5 adds an option to mark the script as asynchronous so it will be parsed and executed by a different thread.</p><h4 id="Speculative-parsing"><a href="#Speculative-parsing" class="headerlink" title="Speculative parsing"></a>Speculative parsing</h4><p>Both Webkit and Firefox do this optimization. While executing scripts, another thread parses the rest of the document and finds out what other resources need to be loaded from the network and loads them. These way resources can be loaded on parallel connections and the overall speed is better. Note - the speculative parser doesn’’t modify the DOM tree and leaves that to the main parser, it only parses references to external resources like external scripts, style sheets and images.</p><h4 id="Style-sheets"><a href="#Style-sheets" class="headerlink" title="Style sheets"></a>Style sheets</h4><p>Style sheets on the other hand have a different model. Conceptually it seems that since style sheets don’t change the DOM tree, there is no reason to wait for them and stop the document parsing. There is an issue, though, of scripts asking for style information during the document parsing stage. If the style is not loaded and parsed yet, the script will get wrong answers and apparently this caused lots of problems. It seems to be an edge case but is quite common. Firefox blocks all scripts when there is a style sheet that is still being loaded and parsed. Webkit blocks scripts only when they try to access for certain style properties that may be effected by unloaded style sheets.</p><h2 id="Render-tree-construction"><a href="#Render-tree-construction" class="headerlink" title="Render tree construction"></a>Render tree construction</h2><p>While the DOM tree is being constructed, the browser constructs another tree, the render tree. This tree is of visual elements in the order in which they will be displayed. It is the visual representation of the document. The purpose of this tree is to enable painting the contents in their correct order.</p><p>Firefox calls the elements in the render tree “frames”. Webkit uses the term renderer or render object. </p><p>A renderer knows how to layout and paint itself and it’s children. </p><p>Webkits RenderObject class, the base class of the renderers has the following definition:<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RenderObject</span></span>&#123;</span><br><span class="line">    virtual <span class="keyword">void</span> layout();</span><br><span class="line">    virtual <span class="keyword">void</span> paint(PaintInfo);</span><br><span class="line">    virtual <span class="keyword">void</span> rect repaintRect();</span><br><span class="line">    Node* node;  <span class="comment">//the DOM node</span></span><br><span class="line">    RenderStyle* style;  <span class="comment">// the computed style</span></span><br><span class="line">    RenderLayer* containgLayer; <span class="comment">//the containing z-index layer</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>Each renderer represents a rectangular area usually corresponding to the node’s CSS box, as described by the CSS2 spec. It contains geometric information like width, height and position. </p><p>The box type is affected by the “display” style attribute that is relevant for the node (see the style computation section). Here is Webkit code for deciding what type of renderer should be created for a DOM node, according to the display attribute.<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">RenderObject* RenderObject::createObject(Node* node, RenderStyle* style)&#123;</span><br><span class="line">    Document* doc = node-&gt;<span class="built_in">document</span>();</span><br><span class="line">    RenderArena* arena = doc-&gt;renderArena();</span><br><span class="line">    ...</span><br><span class="line">    RenderObject* o = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">switch</span> (style-&gt;display()) &#123;</span><br><span class="line">        <span class="keyword">case</span> NONE:</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> INLINE:</span><br><span class="line">            o = <span class="keyword">new</span> (arena) RenderInline(node);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> BLOCK:</span><br><span class="line">            o = <span class="keyword">new</span> (arena) RenderBlock(node);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> INLINE_BLOCK:</span><br><span class="line">            o = <span class="keyword">new</span> (arena) RenderBlock(node);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> LIST_ITEM:</span><br><span class="line">            o = <span class="keyword">new</span> (arena) RenderListItem(node);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> o;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>The element type is also considered, for example form controls and tables have special frames. </p><p>In Webkit if an element wants to create a special renderer it will override the “createRenderer” method. The renderers points to style objects that contains the non geometric information.</p><h3 id="The-render-tree-relation-to-the-DOM-tree"><a href="#The-render-tree-relation-to-the-DOM-tree" class="headerlink" title="The render tree relation to the DOM tree"></a>The render tree relation to the DOM tree</h3><p>The renderers correspond to the DOM elements, but the relation is not one to one. Non visual DOM elements will not be inserted in the render tree. An example is the “head” element. Also elements whose display attribute was assigned to “none” will not appear in the tree (elements with “hidden” visibility attribute will appear in the tree).</p><p>There are DOM elements which correspond to several visual objects. These are usually elements with complex structure that cannot be described by a single rectangle. For example, the “select” element has 3 renderers - one for the display area, one for the drop down list box and one for the button. Also when text is broken into multiple lines because the width is not sufficient for one line, the new lines will be added as extra renderers. </p><p>Another example of several renderers is broken HTML. According to CSS spec an inline element must contain either only block element or only inline elements. In case of mixed content, anonymous block renderers will be created to wrap the inline elements.</p><p>Some render objects correspond to a DOM node but not in the same place in the tree. Floats and absolutely positioned elements are out of flow, placed in a different place in the tree, and mapped to the real frame. A placeholder frame is where they should have been.</p><p><img src="figure11.png" alt="The render tree and the corresponding DOM tree"></p><p><strong><center>Figure 11: The render tree and the corresponding DOM tree(3.1). The "Viewport" is the initial containing block. In Webkit it will be the "RenderView" object.</center></strong></p><h3 id="The-flow-of-constructing-the-tree"><a href="#The-flow-of-constructing-the-tree" class="headerlink" title="The flow of constructing the tree"></a>The flow of constructing the tree</h3><p>In Firefox, the presentation is registered as a listener for DOM updates. The presentation delegates frame creation to the “FrameConstructor” and the constructor resolves style(see style computation) and creates a frame.</p><p>In Webkit the process of resolving the style and creating a renderer is called “attachment”. Every DOM node has an “attach” method. Attachment is synchronous, node insertion to the DOM tree calls the new node “attach” method.</p><p>Processing the html and body tags results in the construction of the render tree root. The root render object corresponds to what the CSS spec calls the containing block - the top most block that contains all other blocks. Its dimensions are the viewport - the browser window display area dimensions. Firefox calls it ViewPortFrame and Webkit calls it RenderView. This is the render object that the document point to. The rest of the tree is constructed as a DOM nodes insertion. </p><p>See CSS2 on this topic - <a href="http://www.w3.org/TR/CSS21/intro.html#processing-model" target="_blank" rel="noopener">http://www.w3.org/TR/CSS21/intro.html#processing-model</a></p><h3 id="Style-Computation"><a href="#Style-Computation" class="headerlink" title="Style Computation"></a>Style Computation</h3><p>Building the render tree requires calculating the visual properties of each render object. This is done by calculating the style properties of each element.</p><p>The style includes style sheets of various origins, inline style elements and visual properties in the HTML (like the “bgcolor” property).The later is translated to matching CSS style properties.</p><p>The origins of style sheets are the browser’s default style sheets, the style sheets provided by the page author and user style sheets - these are style sheets provides by the browser user (browsers let you define your favorite style. In Firefox, for instance, this is done by placing a style sheet in the “Firefox Profile” folder).</p><p>Style computation brings up a few difficulties:</p><ol><li>Style data is a very large construct, holding the numerous style properties, this can cause memory problems.<br>2.Finding the matching rules for each element can cause performance issues if it’s not optimized. Traversing the entire rule list for each element to find matches is a heavy task. Selectors can have complex structure that can cause the matching process to start on a seemingly promising path that is proven to be futile and another path has to be tried.<br>For example - this compound selector:<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> <span class="selector-tag">div</span> <span class="selector-tag">div</span> <span class="selector-tag">div</span>&#123;</span><br><span class="line">...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>Means the rules apply to a <code>&lt;div&gt;</code> who is the descendant of 3 divs.Suppose you want to check if the rule applies for a given <code>&lt;div&gt;</code> element. You choose a certain path up the tree for checking. You may need to traverse the node tree up just to find out there are only two divs and the rule does not apply. You then need to try other paths in the tree.</li><li>Applying the rules involves quite complex cascade rules that define the hierarchy of the rules.</li></ol><p>Let’s see how the browsers face these issues:</p><h4 id="Sharing-style-data"><a href="#Sharing-style-data" class="headerlink" title="Sharing style data"></a>Sharing style data</h4><p>Webkit nodes references style objects (RenderStyle) These objects can be shared by nodes in some conditions. The nodes are siblings or cousins and:</p><ol><li>The elements must be in the same mouse state (e.g., one can’t be in :hover while the other isn’t)</li><li>Neither element should have an id</li><li>The tag names should match</li><li>The class attributes should match</li><li>The set of mapped attributes must be identical</li><li>The link states must match</li><li>The focus states must match</li><li>Neither element should be affected by attribute selectors, where affected is defined as having any selector match that uses an attribute selector in any position within the selector at all</li><li>There must be no inline style attribute on the elements</li><li>There must be no sibling selectors in use at all. WebCore simply throws a global switch when any sibling selector is encountered and disables style sharing for the entire document when they are present. This includes the + selector and selectors like :first-child and :last-child.</li></ol><h4 id="Firefox-rule-tree"><a href="#Firefox-rule-tree" class="headerlink" title="Firefox rule tree"></a>Firefox rule tree</h4><p>Firefox has two extra trees for easier style computation - the rule tree and style context tree. Webkit also has style objects but they are not stored in a tree like the style context tree, only the DOM node points to its relevant style.</p><p><img src="figure13.png" alt="Firefox style context tree"></p><p><strong><center>Figure 13: Firefox style context tree(2.2)</center></strong></p><p>The style contexts contain end values. The values are computed by applying all the matching rules in the correct order and performing manipulations that transform them from logical to concrete values. For example - if the logical value is percentage of the screen it will be calculated and transformed to absolute units. The rule tree idea is really clever. It enables sharing these values between nodes to avoid computing them again. This also saves space.</p><p>All the matched rules are stored in a tree. The bottom nodes in a path have higher priority. The tree contains all the paths for rule matches that were found. Storing the rules is done lazily. The tree isn’t calculated at the beginning for every node, but whenever a node style needs to be computed the computed paths are added to the tree.</p><p>The idea is to see the tree paths as words in a lexicon. Lets say we already computed this rule tree:</p><p><img src="figure14.png" alt="figure14"></p><p>Suppose we need to match rules for another element in the content tree, and find out the matched rules (in the correct order) are B - E - I. We already have this path in the tree because we already computed path A - B - E - I - L. We will now have less work to do. </p><p>Let’s see how the tree saves as work.</p><h5 id="Division-into-structs"><a href="#Division-into-structs" class="headerlink" title="Division into structs"></a>Division into structs</h5><p>The style contexts are divided into structs. Those structs contain style information for a certain category like border or color. All the properties in a struct are either inherited or non inherited. Inherited properties are properties that unless defined by the element, are inherited from its parent. Non inherited properties (called “reset” properties) use default values if not defined.</p><p>The tree helps us by caching entire structs (containing the computed end values) in the tree. The idea is that if the bottom node didn’t supply a definition for a struct, a cached struct in an upper node can be used.</p><h5 id="Computing-the-style-contexts-using-the-rule-tree"><a href="#Computing-the-style-contexts-using-the-rule-tree" class="headerlink" title="Computing the style contexts using the rule tree"></a>Computing the style contexts using the rule tree</h5><p>When computing the style context for a certain element, we first compute a path in the rule tree or use an existing one. We then begin to apply the rules in the path to fill the structs in our new style context. We start at the bottom node of the path - the one with the highest precedence (usually the most specific selector) and traverse the tree up until our struct is full. If there is no specification for the struct in that rule node, then we can greatly optimize - we go up the tree until we find a node that specifies it fully and simply point to it - that’s the best optimization - the entire struct is shared. This saves computation of end values and memory. </p><p>If we find partial definitions we go up the tree until the struct is filled.</p><p>If we didn’t find any definitions for our struct, then in case the struct is an “inherited” type - we point to the struct of our parent in the context tree, in this case we also succeeded in sharing structs. If its a reset struct then default values will be used.</p><p>If the most specific node does add values then we need to do some extra calculations for transforming it to actual values. We then cache the result in the tree node so it can be used by children.</p><p>In case an element has a sibling or a brother that points to the same tree node then the entire style context can be shared between them.</p><p>Lets see an example: Suppose we have this HTML<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"err"</span> <span class="attr">id</span>=<span class="string">"div1"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">                this is a <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"big"</span>&gt;</span> big error <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                this is also a</span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"big"</span>&gt;</span> very  big  error<span class="tag">&lt;/<span class="name">span</span>&gt;</span> error</span><br><span class="line">            <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"err"</span> <span class="attr">id</span>=<span class="string">"div2"</span>&gt;</span>another error<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>And the following rules:<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;<span class="attribute">margin</span>:<span class="number">5px</span>; <span class="attribute">color</span>:black&#125;</span><br><span class="line"><span class="selector-class">.err</span> &#123;<span class="attribute">color</span>:red&#125;</span><br><span class="line"><span class="selector-class">.big</span> &#123;<span class="attribute">margin-top</span>:<span class="number">3px</span>&#125;</span><br><span class="line"><span class="selector-tag">div</span> <span class="selector-tag">span</span> &#123;<span class="attribute">margin-bottom</span>:<span class="number">4px</span>&#125;</span><br><span class="line"><span class="selector-id">#div1</span> &#123;<span class="attribute">color</span>:blue&#125;</span><br><span class="line"><span class="selector-id">#div</span> 2 &#123;<span class="attribute">color</span>:green&#125;</span><br></pre></td></tr></table></figure></p><p>To simplify things let’s say we need to fill out only two structs - the color struct and the margin struct. The color struct contains only one member - the color The margin struct contains the four sides. </p><p>The resulting rule tree will look like this (the nodes are marked with the node name : the # of rule they point at):</p><p><img src="figure121.png" alt="The rule tree"></p><p><strong><center>Figure 12: The rule tree</center></strong></p><p>The context tree will look like this (node name : rule node they point to):</p><p><img src="figure131.png" alt="The context tree"></p><p><strong><center>Figure 13: The context tree</center></strong></p><p>Suppose we parse the HTML and get to the second <code>&lt;div&gt;</code> tag. We need to create a style context for this node and fill its style structs. We will match the rules and discover that the matching rules for the <code>&lt;div&gt;</code> are 1 ,2 and 6. This means there is already an existing path in the tree that our element can use and we just need to add another node to it for rule 6 (node F in the rule tree). </p><p>We will create a style context and put it in the context tree. The new style context will point to node F in the rule tree.</p><p>We now need to fill the style structs. We will begin by filling out the margin struct. Since the last rule node(F) doesn’t add to the margin struct, we can go up the tree until we find a cached struct computed in a previous node insertion and use it. We will find it on node B, which is the uppermost node that specified margin rules.</p><p>We do have a definition for the color struct, so we can’t use a cached struct. Since color has one attribute we don’t need to go up the tree to fill other attributes. We will compute the end value (convert string to RGB etc) and cache the computed struct on this node.</p><p>The work on the second <code>&lt;span&gt;</code> element is even easier. We will match the rules and come to the conclusion that it points to rule G, like the previous span. Since we have siblings that point to the same node, we can share the entire style context and just point to the context of the previous span.</p><p>For structs that contain rules that are inherited from the parent, caching is done on the context tree (the color property is actually inherited, but Firefox treats it as reset and caches it on the rule tree). </p><p>For instance if we added rules for fonts in a paragraph:<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">p &#123;font-family:Verdana; font size:10px; font-weight:bold&#125;</span><br></pre></td></tr></table></figure></p><p>Then the div element, which is a child of the paragraph in the context tree, could have shared the same font struct as his parent. This is if no font rules where specified for the “div”.</p><p>In Webkit, who does not have a rule tree, the matched declarations are traversed 4 times. First non important high priority properties (properties that should be applied first because others depend on them - like display) are applied, than high priority important, then normal priority non important, then normal priority important rules. This means that properties that appear multiple times will be resolved according to the correct cascade order. The last wins. </p><p>So to summarize - sharing the style objects(entirely or some of the structs inside them) solves issues 1 and 3. Firefox rule tree also helps in applying the properties in the correct order.</p><h4 id="Manipulating-the-rules-for-an-easy-match"><a href="#Manipulating-the-rules-for-an-easy-match" class="headerlink" title="Manipulating the rules for an easy match"></a>Manipulating the rules for an easy match</h4><p>There are several sources for style rules:<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">-</span> <span class="selector-tag">CSS</span> <span class="selector-tag">rules</span>, <span class="selector-tag">either</span> <span class="selector-tag">in</span> <span class="selector-tag">external</span> <span class="selector-tag">style</span> <span class="selector-tag">sheets</span> <span class="selector-tag">or</span> <span class="selector-tag">in</span> <span class="selector-tag">style</span> <span class="selector-tag">elements</span>.</span><br><span class="line"><span class="selector-tag">p</span> &#123;<span class="attribute">color</span>:blue&#125;</span><br><span class="line"><span class="selector-tag">-</span> <span class="selector-tag">Inline</span> <span class="selector-tag">style</span> <span class="selector-tag">attributes</span> <span class="selector-tag">like</span></span><br><span class="line">&lt;p style="color:blue" /&gt;</span><br><span class="line"><span class="selector-tag">-</span> <span class="selector-tag">HTML</span> <span class="selector-tag">visual</span> <span class="selector-tag">attributes</span> (<span class="selector-tag">which</span> <span class="selector-tag">are</span> <span class="selector-tag">mapped</span> <span class="selector-tag">to</span> <span class="selector-tag">relevant</span> <span class="selector-tag">style</span> <span class="selector-tag">rules</span>)</span><br><span class="line">&lt;p bgcolor="blue" /&gt;</span><br></pre></td></tr></table></figure></p><p>The last two are easily matched to the element since he owns the style attributes and HTML attributes can be mapped using the element as the key.</p><p>As noted previously in issue #2, the CSS rule matching can be trickier. To solve the difficulty, the rules are manipulated for easier access.</p><p>After parsing the style sheet, the rules are added one of several hash maps, according to the selector. There are maps by id, by class name, by tag name and a general map for anything that doesn’t fit into those categories. If the selector is an id, the rule will be added to the id map, if it’s a class it will be added to the class map etc. </p><p>This manipulation makes it much easier to match rules. There is no need to look in every declaration - we can extract the relevant rules for an element from the maps. This optimization eliminates 95+% of the rules, so that they need not even be considered during the matching process(4.1).</p><p>Let’s see for example the following style rules:<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span><span class="selector-class">.error</span> &#123;<span class="attribute">color</span>:red&#125;</span><br><span class="line"><span class="selector-id">#messageDiv</span> &#123;<span class="attribute">height</span>:<span class="number">50px</span>&#125;</span><br><span class="line"><span class="selector-tag">div</span> &#123;<span class="attribute">margin</span>:<span class="number">5px</span>&#125;</span><br></pre></td></tr></table></figure></p><p>The first rule will be inserted into the class map. The second into the id map and the third into the tag map.<br>For the following HTML fragment;<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"error"</span>&gt;</span>an error occurred <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">" messageDiv"</span>&gt;</span>this is a message<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>We will first try to find rules for the p element. The class map will contain an “error” key under which the rule for “p.error” is found. The div element will have relevant rules in the id map (the key is the id) and the tag map. So the only work left is finding out which of the rules that were extracted by the keys really match. </p><p>For example if the rule for the div was<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">table</span> <span class="selector-tag">div</span> &#123;<span class="attribute">margin</span>:<span class="number">5px</span>&#125;</span><br></pre></td></tr></table></figure></p><p>it will still be extracted from the tag map, because the key is the rightmost selector, but it would not match our div element, who does not have a table ancestor.</p><p>Both Webkit and Firefox do this manipulation.</p><h4 id="Applying-the-rules-in-the-correct-cascade-order"><a href="#Applying-the-rules-in-the-correct-cascade-order" class="headerlink" title="Applying the rules in the correct cascade order"></a>Applying the rules in the correct cascade order</h4><p>The style object has properties corresponding to every visual attribute (all css attributes but more generic). If the property is not defined by any of the matched rules - then some properties can be inherited by the parent element style object. Other properties have default values.</p><p>The problem begins when there is more than one definition - here comes the cascade order to solve the issue.</p><h5 id="Style-sheet-cascade-order"><a href="#Style-sheet-cascade-order" class="headerlink" title="Style sheet cascade order"></a>Style sheet cascade order</h5><p>A declaration for a style property can appear in several style sheets, and several times inside a style sheet. This means the order of applying the rules is very important. This is called the “cascade” order. According to CSS2 spec, the cascade order is (from low to high):</p><ol><li>Browser declarations</li><li>User normal declarations</li><li>Author normal declarations</li><li>Author important declarations</li><li>User important declarations</li></ol><p>The browser declarations are least important and the user overrides the author only if the declaration was marked as important. Declarations with the same order will be sorted by specifity and then the order they are specified. The HTML visual attributes are translated to matching CSS declarations . They are treated as author rules with low priority.</p><h5 id="Specifity"><a href="#Specifity" class="headerlink" title="Specifity"></a>Specifity</h5><p>The selector specifity is defined by the CSS2 specification as follows:</p><ul><li>count 1 if the declaration is from is a ‘style’ attribute rather than a rule with a selector, 0 otherwise (= a)</li><li>count the number of ID attributes in the selector (= b)</li><li>count the number of other attributes and pseudo-classes in the selector (= c)</li><li>count the number of element names and pseudo-elements in the selector (= d)</li></ul><p>Concatenating the four numbers a-b-c-d (in a number system with a large base) gives the specificity.</p><p>The number base you need to use is defined by the highest count you have in one of the categories. </p><p>For example, if a=14 you can use hexadecimal base. In the unlikely case where a=17 you will need a 17 digits number base. The later situation can happen with a selector like this: html body div div p … (17 tags in your selector.. not very likely).</p><p>Some examples:<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">*             &#123;&#125;  <span class="comment">/* a=0 b=0 c=0 d=0 -&gt; specificity = 0,0,0,0 */</span></span><br><span class="line"><span class="selector-tag">li</span>            &#123;&#125;  <span class="comment">/* a=0 b=0 c=0 d=1 -&gt; specificity = 0,0,0,1 */</span></span><br><span class="line"><span class="selector-tag">li</span><span class="selector-pseudo">:first-line</span> &#123;&#125;  <span class="comment">/* a=0 b=0 c=0 d=2 -&gt; specificity = 0,0,0,2 */</span></span><br><span class="line"><span class="selector-tag">ul</span> <span class="selector-tag">li</span>         &#123;&#125;  <span class="comment">/* a=0 b=0 c=0 d=2 -&gt; specificity = 0,0,0,2 */</span></span><br><span class="line"><span class="selector-tag">ul</span> <span class="selector-tag">ol</span>+<span class="selector-tag">li</span>      &#123;&#125;  <span class="comment">/* a=0 b=0 c=0 d=3 -&gt; specificity = 0,0,0,3 */</span></span><br><span class="line"><span class="selector-tag">h1</span> + *<span class="selector-attr">[rel=up]</span>&#123;&#125;  <span class="comment">/* a=0 b=0 c=1 d=1 -&gt; specificity = 0,0,1,1 */</span></span><br><span class="line"><span class="selector-tag">ul</span> <span class="selector-tag">ol</span> <span class="selector-tag">li</span><span class="selector-class">.red</span>  &#123;&#125;  <span class="comment">/* a=0 b=0 c=1 d=3 -&gt; specificity = 0,0,1,3 */</span></span><br><span class="line"><span class="selector-tag">li</span><span class="selector-class">.red</span><span class="selector-class">.level</span>  &#123;&#125;  <span class="comment">/* a=0 b=0 c=2 d=1 -&gt; specificity = 0,0,2,1 */</span></span><br><span class="line"><span class="selector-id">#x34y</span>         &#123;&#125;  <span class="comment">/* a=0 b=1 c=0 d=0 -&gt; specificity = 0,1,0,0 */</span></span><br><span class="line">style=""          /* a=1 b=0 c=0 d=0 -&gt; specificity = 1,0,0,0 */</span><br></pre></td></tr></table></figure></p><h5 id="Sorting-the-rules"><a href="#Sorting-the-rules" class="headerlink" title="Sorting the rules"></a>Sorting the rules</h5><p>After the rules are matched, they are sorted according to the cascade rules. Webkit uses bubble sort for small lists and merge sort for big ones. Webkit implements sorting by overriding the “&gt;” operator for the rules:<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> bool operator &gt;(CSSRuleData&amp; r1, CSSRuleData&amp; r2)</span><br><span class="line">&#123;</span><br><span class="line">    int spec1 = r1.selector()-&gt;specificity();</span><br><span class="line">    int spec2 = r2.selector()-&gt;specificity();</span><br><span class="line">    <span class="keyword">return</span> (spec1 == spec2) : r1.position() &gt; r2.position() : spec1 &gt; spec2; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="Gradual-process"><a href="#Gradual-process" class="headerlink" title="Gradual process"></a>Gradual process</h3><p>Webkit uses a flag that marks if all top level style sheets (including @imports) have been loaded. If the style is not fully loaded when attaching - place holders are used and it s marked in the document, and they will be recalculated once the style sheets were loaded.</p><h2 id="Layout"><a href="#Layout" class="headerlink" title="Layout"></a>Layout</h2><p>When the renderer is created and added to the tree, it does not have a position and size. Calculating these values is called layout or reflow.</p><p>HTML uses a flow based layout model, meaning that most of the time it is possible to compute the geometry in a single pass. Elements later ``in the flow’’ typically do not affect the geometry of elements that are earlier ``in the flow’’, so layout can proceed left-to-right, top-to-bottom through the document. There are exceptions - for example, HTML tables may require more than one pass (3.5).</p><p>The coordinate system is relative to the root frame. Top and left coordinates are used.</p><p>Layout is a recursive process. It begins at the root renderer, which corresponds to the element of the HTML document. Layout continues recursively through some or all of the frame hierarchy, computing geometric information for each renderer that requires it.</p><p>The position of the root renderer is 0,0 and its dimensions is the viewport - the visible part of the browser window.</p><p>All renderers have a “layout” or “reflow” method, each renderer invokes the layout method of its children that need layout.</p><h3 id="Dirty-bit-system"><a href="#Dirty-bit-system" class="headerlink" title="Dirty bit system"></a>Dirty bit system</h3><p>In order not to do a full layout for every small change, browser use a “dirty bit” system. A renderer that is changed or added marks itself and its children as “dirty” - needing layout.</p><p>There are two flags - “dirty” and “children are dirty”. Children are dirty means that although the renderer itself may be ok, it has at least one child that needs a layout.</p><h3 id="Global-and-incremental-layout"><a href="#Global-and-incremental-layout" class="headerlink" title="Global and incremental layout"></a>Global and incremental layout</h3><p>Layout can be triggered on the entire render tree - this is “global” layout. This can happen as a result of:</p><ol><li>A global style change that affects all renderers, like a font size change.</li><li>As a result of a screen being resized</li></ol><p>Layout can be incremental, only the dirty renderers will be layed out (this can cause some damage which will require extra layouts). </p><p>Incremental layout is triggered (asynchronously) when renderers are dirty. For example when new renderers are appended to the render tree after extra content came from the network and was added to the DOM tree.</p><p><img src="figure20.png" alt="Incremental layout"></p><p><strong><center>Figure 20:Incremental layout - only dirty renderers and their children are layed out(3.6).</center></strong></p><h3 id="Asynchronous-and-Synchronous-layout"><a href="#Asynchronous-and-Synchronous-layout" class="headerlink" title="Asynchronous and Synchronous layout"></a>Asynchronous and Synchronous layout</h3><p>Incremental layout is done asynchronously. Firefox queues “reflow commands” for incremental layouts and a scheduler triggers batch execution of these commands. Webkit also has a timer that executes an incremental layout - the tree is traversed and “dirty” renderers are layout out. </p><p>Scripts asking for style information, like “offsightHeight” can trigger incremental layout synchronously. Global layout will usually be triggered synchronously. Sometimes layout is triggered as a callback after an initial layout because some attributes , like the scrolling position changed.</p><h3 id="Optimizations"><a href="#Optimizations" class="headerlink" title="Optimizations"></a>Optimizations</h3><p>When a layout is triggered by a “resize” or a change in the renderer position(and not size), the renders sizes are taken from a cache and not recalculated..<br>In some cases - only a sub tree is modified and layout does not start from the root. This can happen in cases where the change is local and does not affect its surroundings - like text inserted into text fields (otherwise every keystroke would have triggered a layout starting from the root).</p><h3 id="The-layout-process"><a href="#The-layout-process" class="headerlink" title="The layout process"></a>The layout process</h3><p>The layout usually has the following pattern:</p><ol><li>Parent renderer determines its own width.</li><li>Parent goes over children and:<ol><li>Place the child renderer (sets its x and y).</li><li>Calls child layout if needed(they are dirty or we are in a global layout or some other reason) - this calculates the child’s height.</li></ol></li><li>Parent uses children accumulative heights and the heights of the margins and paddings to set it own height - this will be used by the parent renderer’s parent.</li><li>Sets its dirty bit to false.</li></ol><p>Firefox uses a “state” object(nsHTMLReflowState) as a parameter to layout (termed “reflow”). Among others the state includes the parents width. </p><p>The output of Firefox layout is a “metrics” object(nsHTMLReflowMetrics). It will contain the renderer computed height.</p><h3 id="Width-calculation"><a href="#Width-calculation" class="headerlink" title="Width calculation"></a>Width calculation</h3><p>The renderer’s width is calculated using the container block’s width , the renderer’s style “width” property, the margins and borders. </p><p>For example the width of the following div:<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"width:30%"</span>/&gt;</span></span><br></pre></td></tr></table></figure></p><p>Would be calculated by Webkit as following(class RenderBox method calcWidth):</p><ul><li>The container width is the maximum of the containers availableWidth and 0. The availableWidth in this case is the contentWidth which is calculated as:<br><code>clientWidth() - paddingLeft() - paddingRight()</code> clientWidth and clientHeight represent the interior of an object excluding border and scrollbar.</li><li>The elements width is the “width” style attribute. It will be calculated as an absolute value by computing the percentage of the container width.</li><li>The horizontal borders and paddings are now added.</li></ul><p>So far this was the calculation of the “preferred width”. Now the minimum and maximum widths will be calculated. If the preferred width is higher then the maximum width - the maximum width is used. If it is lower then the minimum width (the smallest unbreakable unit) hen the minimum width is used.</p><p>The values are cached, in case a layout is needed but the width does not change.</p><h3 id="Line-Breaking"><a href="#Line-Breaking" class="headerlink" title="Line Breaking"></a>Line Breaking</h3><p>When a renderer in the middle of layout decides it needs to break. It stops and propagates to its parent it needs to be broken. The parent will create the extra renderers and calls layout on them.</p><h2 id="Painting"><a href="#Painting" class="headerlink" title="Painting"></a>Painting</h2><p>In the painting stage, the render tree is traversed and the renderers “paint” method is called to display their content on the screen. Painting uses the UI infrastructure component. More on that in the chapter about the UI.</p><h3 id="Global-and-Incremental"><a href="#Global-and-Incremental" class="headerlink" title="Global and Incremental"></a>Global and Incremental</h3><p>Like layout, painting can also be global - the entire tree is painted - or incremental. In incremental painting, some of the renderers change in a way that does not affect the entire tree. The changed renderer invalidates it’s rectangle on the screen. This causes the OS to see it as a “dirty region” and generate a “paint” event. The OS does it cleverly and coalesces several regions into one. In Chrome it is more complicated because the renderer is in a different process then the main process. Chrome simulates the OS behavior to some extent. The presentation listens to these events and delegates the message to the render root. The tree is traversed until the relevant renderer is reached. It will repaint itself (and usually its children).</p><h3 id="The-painting-order"><a href="#The-painting-order" class="headerlink" title="The painting order"></a>The painting order</h3><p>CSS2 defines the order of the painting process - <a href="http://www.w3.org/TR/CSS21/zindex.html" target="_blank" rel="noopener">http://www.w3.org/TR/CSS21/zindex.html</a>. This is actually the order in which the elements are stacked in the stacking contexts. This order affects painting since the stacks are painted from back to front. The stacking order of a block renderer is:</p><ol><li>background color</li><li>background image</li><li>border</li><li>children</li><li>outline</li></ol><h3 id="Firefox-display-list"><a href="#Firefox-display-list" class="headerlink" title="Firefox display list"></a>Firefox display list</h3><p>Firefox goes over the render tree and builds a display list for the painted rectangular. It contains the renderers relevant for the rectangular, in the right painting order (backgrounds of the renderers, then borders etc). </p><p>That way the tree needs to be traversed only once for a repaint instead of several times - painting all backgrounds, then all images , then all borders etc.<br>Firefox optimizes the process by not adding elements that will be hidden, like elements completely beneath other opaque elements.</p><h3 id="Webkit-rectangle-storage"><a href="#Webkit-rectangle-storage" class="headerlink" title="Webkit rectangle storage"></a>Webkit rectangle storage</h3><p>Before repainting, webkit saves the old rectangle as a bitmap. It then paints only the delta between the new and old rectangles. </p><h2 id="Dynamic-changes"><a href="#Dynamic-changes" class="headerlink" title="Dynamic changes"></a>Dynamic changes</h2><p>The browsers try to do the minimal possible actions in response to a change. So changes to an elements color will cause only repaint of the element. Changes to the element position will cause layout and repaint of the element, its children and possibly siblings. Adding a DOM node will cause layout and repaint of the node. Major changes, like increasing font size of the “html” element, will cause invalidation of caches, relyout and repaint of the entire tree.</p><h2 id="The-rendering-engine’s-threads"><a href="#The-rendering-engine’s-threads" class="headerlink" title="The rendering engine’s threads"></a>The rendering engine’s threads</h2><p>The rendering engine is single threaded. Almost everything, except network operations, happens in a single thread. In Firefox and safari this is the main thread of the browser. In chrome it’s the tab process main thread. </p><p>Network operations can be performed by several parallel threads. The number of parallel connections is limited (usually 2 - 6 connections. Firefox 3, for example, uses 6).</p><h3 id="Event-loop"><a href="#Event-loop" class="headerlink" title="Event loop"></a>Event loop</h3><p>The browser main thread is an event loop. Its an infinite loop that keeps the process alive. It waits for events (like layout and paint events) and processes them. This is Firefox code for the main event loop:<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> (!mExiting)</span><br><span class="line">    NS_ProcessNextEvent(thread);</span><br></pre></td></tr></table></figure></p><h2 id="CSS2-visual-model"><a href="#CSS2-visual-model" class="headerlink" title="CSS2 visual model"></a>CSS2 visual model</h2><h3 id="The-canvas"><a href="#The-canvas" class="headerlink" title="The canvas"></a>The canvas</h3><p>According to CCS2 specification, the term canvas describes “the space where the formatting structure is rendered.” - where the browser paints the content.<br>The canvas is infinite for each dimension of the space but browsers choose an initial width based on the dimensions of the viewport.</p><p>According to <a href="http://www.w3.org/TR/CSS2/zindex.html" target="_blank" rel="noopener">http://www.w3.org/TR/CSS2/zindex.html</a>, the canvas is transparent if contained within another, and given a browser defined color if it is not.</p><h3 id="CSS-Box-model"><a href="#CSS-Box-model" class="headerlink" title="CSS Box model"></a>CSS Box model</h3><p>The CSS box model describes the rectangular boxes that are generated for elements in the document tree and laid out according to the visual formatting model.<br>Each box has a content area (e.g., text, an image, etc.) and optional surrounding padding, border, and margin areas.</p><p><img src="figure141.jpg" alt="CSS2 box model"></p><p><strong><center>Figure 14:CSS2 box model</center></strong></p><p>Each node generates 0..n such boxes. All elements have a “display” property that determines their type of box that will be generated.</p><p>Examples:<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">block</span>  <span class="selector-tag">-</span> <span class="selector-tag">generates</span> <span class="selector-tag">a</span> <span class="selector-tag">block</span> <span class="selector-tag">box</span>.</span><br><span class="line"><span class="selector-tag">inline</span> <span class="selector-tag">-</span> <span class="selector-tag">generates</span> <span class="selector-tag">one</span> <span class="selector-tag">or</span> <span class="selector-tag">more</span> <span class="selector-tag">inline</span> <span class="selector-tag">boxes</span>.</span><br><span class="line"><span class="selector-tag">none</span> <span class="selector-tag">-</span> <span class="selector-tag">no</span> <span class="selector-tag">box</span> <span class="selector-tag">is</span> <span class="selector-tag">generated</span>.</span><br></pre></td></tr></table></figure></p><p>The default is inline but the browser style sheet set other defaults. For example - the default display for “div” element is block.<br>You can find a default style sheet example here <a href="http://www.w3.org/TR/CSS2/sample.html" target="_blank" rel="noopener">http://www.w3.org/TR/CSS2/sample.html</a></p><h3 id="Positioning-scheme"><a href="#Positioning-scheme" class="headerlink" title="Positioning scheme"></a>Positioning scheme</h3><p>There are three schemes:</p><ol><li>Normal - the object is positioned according to its place in the document - this means its place in the render tree is like its place in the dom tree and layed out according to its box type and dimensions</li><li>Float - the object is first layed out like normal flow, then moved as far left or right as possible</li><li>Absolute - the object is put in the render tree differently than its place in the DOM tree</li></ol><p>The positioning scheme is set by the “position” property and the “float” attribute.</p><ol><li>static and relative cause a normal flow</li><li>absolute and fixed cause an absolute positioning</li></ol><p>In static positioning no position is defined and the default positioning is used. In the other schemes, the author specifies the position - top,bottom,left,right.</p><p>The way the box is layed out is determined by:</p><ul><li>Box type</li><li>Box dimensions</li><li>Positioning scheme</li><li>External information - like images size and the size of the screen</li></ul><h3 id="Box-types"><a href="#Box-types" class="headerlink" title="Box types"></a>Box types</h3><p>Block box: forms a block - have their own rectangle on the browser window.</p><p><img src="figure151.png" alt="Block box"></p><p><strong><center>Figure 15:Block box</center></strong></p><p>Inline box: does not have its own block, but is inside a containing block.</p><p><img src="figure152.png" alt="Inine boxes"></p><p><strong><center>Figure 15:Inine boxes</center></strong></p><p>Blocks are formatted vertically one after the other. Inlines are formatted horizontally.</p><p><img src="figure161.png" alt="Block and Inline formatting"></p><p><strong><center>Figure 16:Block and Inline formatting</center></strong></p><p>Inline boxes are put inside lines or “line boxes”. The lines are at least as tall as the tallest box but can be taller, when the boxes are aligned “baseline” - meaning the bottom part of an element is aligned at a point of another box other then the bottom. In case the container width is not enough, the inlines will be put in several lines. This is usually what happens in a paragraph.</p><p><img src="figure171.png" alt="Lines"></p><p><strong><center>Figure 17:Lines</center></strong></p><h3 id="Positioning"><a href="#Positioning" class="headerlink" title="Positioning"></a>Positioning</h3><h4 id="Relative"><a href="#Relative" class="headerlink" title="Relative"></a>Relative</h4><p>Relative positioning - positioned like usual and then moved by the required delta.</p><p><img src="figure181.png" alt="Relative positioning"></p><p><strong><center>Figure 18:Relative positioning</center></strong></p><h4 id="Floats"><a href="#Floats" class="headerlink" title="Floats"></a>Floats</h4><p>A float box is shifted to the left or right of a line. The interesting feature is that the other boxes flow around it The HTML:<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">style</span>=<span class="string">"float:right"</span> <span class="attr">src</span>=<span class="string">"images/image.gif"</span> <span class="attr">width</span>=<span class="string">"100"</span> <span class="attr">height</span>=<span class="string">"100"</span>&gt;</span>Lorem ipsum dolor sit amet, consectetuer...</span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>Will look like:</p><p><img src="figure191.png" alt="Float"></p><p><strong><center>Figure 19:Float</center></strong></p><h4 id="Absolute-and-fixed"><a href="#Absolute-and-fixed" class="headerlink" title="Absolute and fixed"></a>Absolute and fixed</h4><p>The layout is defined exactly regardless of the normal flow. The element does not participate in the normal flow. The dimensions are relative to the container. In fixed - the container is the view port.</p><p><img src="figure120.png" alt="Fixed positioning"></p><p><strong><center>Figure 20:Fixed positioning</center></strong></p><p>Note - the fixed box will not move even when the document is scrolled!</p><h3 id="Layered-representation"><a href="#Layered-representation" class="headerlink" title="Layered representation"></a>Layered representation</h3><p>It is specified by the z-index CSS property. It represents the 3rd dimension of the box, its position along the “z axis”.</p><p>The boxes are divided to stacks (called stacking contexts). In each stack the back elements will be painted first and the forward elements on top, closer to the user. In case of overlap the will hide the former element. </p><p>The stacks are ordered according to the z-index property. Boxes with “z-index” property form a local stack. The viewport has the outer stack.<br>Example:<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">STYLE</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span></span><br><span class="line">    div &#123; </span><br><span class="line">        position: absolute; </span><br><span class="line">        left: 2in; </span><br><span class="line">        top: 2in; </span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">STYLE</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">P</span>&gt;</span>   </span><br><span class="line">    <span class="tag">&lt;<span class="name">DIV</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">style</span>=<span class="string">"z-index: 3;background-color:red; width: 1in; height: 1in; "</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">DIV</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">DIV</span></span></span><br><span class="line"><span class="tag">        <span class="attr">style</span>=<span class="string">"z-index: 1;background-color:green;width: 2in; height: 2in;"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">DIV</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>The result will be this:</p><p><img src="figure1201.png" alt="Fixed positioning"></p><p><strong><center>Figure 20:Fixed positioning</center></strong></p><p>Although the green div comes before the red one, and would have been painted before in the regular flow, the z-index property is higher, so it is more forward in the stack held by the root box.</p><h2 id="Resources"><a href="#Resources" class="headerlink" title="Resources"></a>Resources</h2><p><br/></p><p style="word-break:normal;text-indent: -2em;margin-left: 2em;margin-top:0px;margin-bottom:12px;line-height:28px;padding:0px;">1. &nbsp;&nbsp;&nbsp;Browser architecture</p><p style="word-break:normal;text-indent: -2em;margin-left: 2em;margin-top:0px;margin-bottom:12px;line-height:28px;padding:0px;">1.1. Grosskurth, Alan. A Reference Architecture for Web Browsers. <a href="http://grosskurth.ca/papers/browser-refarch.pdf" target="_blank" rel="noopener">http://grosskurth.ca/papers/browser-refarch.pdf</a>.</p><p style="word-break:normal;text-indent: -2em;margin-left: 2em;margin-top:0px;margin-bottom:12px;line-height:28px;padding:0px;">2. &nbsp;&nbsp;&nbsp;Parsing</p><p style="word-break:normal;text-indent: -2em;margin-left: 2em;margin-top:0px;margin-bottom:12px;line-height:28px;padding:0px;">2.1. Aho, Sethi, Ullman, Compilers: Principles, Techniques, and Tools (aka the "Dragon book"), Addison-Wesley, 1986.</p><p style="word-break:normal;text-indent: -2em;margin-left: 2em;margin-top:0px;margin-bottom:12px;line-height:28px;padding:0px;">2.2. Rick Jelliffe. The Bold and the Beautiful: two new drafts for HTML 5. <a href="http://broadcast.oreilly.com/2009/05/the-bold-and-the-beautiful-two.html" target="_blank" rel="noopener">http://broadcast.oreilly.com/2009/05/the-bold-and-the-beautiful-two.html</a>.</p><p style="word-break:normal;text-indent: -2em;margin-left: 2em;margin-top:0px;margin-bottom:12px;line-height:28px;padding:0px;">3. &nbsp;&nbsp;&nbsp;Firefox</p><p style="word-break:normal;text-indent: -2em;margin-left: 2em;margin-top:0px;margin-bottom:12px;line-height:28px;padding:0px;">3.1. L. David Baron, Faster HTML and CSS: Layout Engine Internals for Web Developers. <a href="http://dbaron.org/talks/2008-11-12-faster-html-and-css/slide-6.xhtml" target="_blank" rel="noopener">http://dbaron.org/talks/2008-11-12-faster-html-and-css/slide-6.xhtml</a>.</p><p style="word-break:normal;text-indent: -2em;margin-left: 2em;margin-top:0px;margin-bottom:12px;line-height:28px;padding:0px;">3.2. L. David Baron, Faster HTML and CSS: Layout Engine Internals for Web Developers(Google tech talk video). <a href="http://www.youtube.com/watch?v=a2_6bGNZ7bA" target="_blank" rel="noopener">http://www.youtube.com/watch?v=a2_6bGNZ7bA</a>.</p><p style="word-break:normal;text-indent: -2em;margin-left: 2em;margin-top:0px;margin-bottom:12px;line-height:28px;padding:0px;">3.3. L. David Baron, Mozilla's Layout Engine. <a href="http://www.mozilla.org/newlayout/doc/layout-2006-07-12/slide-6.xhtml" target="_blank" rel="noopener">http://www.mozilla.org/newlayout/doc/layout-2006-07-12/slide-6.xhtml</a>.</p><p style="word-break:normal;text-indent: -2em;margin-left: 2em;margin-top:0px;margin-bottom:12px;line-height:28px;padding:0px;">3.4. L. David Baron, Mozilla Style System Documentation. <a href="http://www.mozilla.org/newlayout/doc/style-system.html" target="_blank" rel="noopener">http://www.mozilla.org/newlayout/doc/style-system.html</a>.</p><p style="word-break:normal;text-indent: -2em;margin-left: 2em;margin-top:0px;margin-bottom:12px;line-height:28px;padding:0px;">3.5. Chris Waterson, Notes on HTML Reflow. <a href="http://www.mozilla.org/newlayout/doc/reflow.html" target="_blank" rel="noopener">http://www.mozilla.org/newlayout/doc/reflow.html</a>.</p><p style="word-break:normal;text-indent: -2em;margin-left: 2em;margin-top:0px;margin-bottom:12px;line-height:28px;padding:0px;">3.6. Chris Waterson, Gecko Overview. <a href="http://www.mozilla.org/newlayout/doc/gecko-overview.htm" target="_blank" rel="noopener">http://www.mozilla.org/newlayout/doc/gecko-overview.htm</a>.</p><p style="word-break:normal;text-indent: -2em;margin-left: 2em;margin-top:0px;margin-bottom:12px;line-height:28px;padding:0px;">3.7. Alexander Larsson, The life of an HTML HTTP request. <a href="https://developer.mozilla.org/en/The_life_of_an_HTML_HTTP_request" target="_blank" rel="noopener">https://developer.mozilla.org/en/The_life_of_an_HTML_HTTP_request</a>.</p><p style="word-break:normal;text-indent: -2em;margin-left: 2em;margin-top:0px;margin-bottom:12px;line-height:28px;padding:0px;">4. &nbsp;&nbsp;&nbsp;Webkit</p><p style="word-break:normal;text-indent: -2em;margin-left: 2em;margin-top:0px;margin-bottom:12px;line-height:28px;padding:0px;">4.1. David Hyatt, Implementing CSS(part 1). <a href="http://weblogs.mozillazine.org/hyatt/archives/cat_safari.html" target="_blank" rel="noopener">http://weblogs.mozillazine.org/hyatt/archives/cat_safari.html</a>.</p><p style="word-break:normal;text-indent: -2em;margin-left: 2em;margin-top:0px;margin-bottom:12px;line-height:28px;padding:0px;">4.2. David Hyatt, An Overview of WebCore. <a href="http://weblogs.mozillazine.org/hyatt/WebCore/chapter2.html" target="_blank" rel="noopener">http://weblogs.mozillazine.org/hyatt/WebCore/chapter2.html</a>.</p><p style="word-break:normal;text-indent: -2em;margin-left: 2em;margin-top:0px;margin-bottom:12px;line-height:28px;padding:0px;">4.3. David Hyatt, WebCore Rendering. <a href="http://webkit.org/blog/114/" target="_blank" rel="noopener">http://webkit.org/blog/114/</a>.</p><p style="word-break:normal;text-indent: -2em;margin-left: 2em;margin-top:0px;margin-bottom:12px;line-height:28px;padding:0px;">4.4. David Hyatt, The FOUC Problem. <a href="http://webkit.org/blog/66/the-fouc-problem/" target="_blank" rel="noopener">http://webkit.org/blog/66/the-fouc-problem/</a>.</p><p style="word-break:normal;text-indent: -2em;margin-left: 2em;margin-top:0px;margin-bottom:12px;line-height:28px;padding:0px;">5. &nbsp;&nbsp;&nbsp;W3C Specifications</p><p style="word-break:normal;text-indent: -2em;margin-left: 2em;margin-top:0px;margin-bottom:12px;line-height:28px;padding:0px;">5.1. HTML 4.01 Specification. <a href="http://www.w3.org/TR/html4/" target="_blank" rel="noopener">http://www.w3.org/TR/html4/</a>.</p><p style="word-break:normal;text-indent: -2em;margin-left: 2em;margin-top:0px;margin-bottom:12px;line-height:28px;padding:0px;">5.2. HTML5 Specification. <a href="http://dev.w3.org/html5/spec/Overview.html" target="_blank" rel="noopener">http://dev.w3.org/html5/spec/Overview.html</a>.</p><p style="word-break:normal;text-indent: -2em;margin-left: 2em;margin-top:0px;margin-bottom:12px;line-height:28px;padding:0px;">5.3. Cascading Style Sheets Level 2 Revision 1 (CSS 2.1) Specification. <a href="http://www.w3.org/TR/CSS2/" target="_blank" rel="noopener">http://www.w3.org/TR/CSS2/</a>.</p><p style="word-break:normal;text-indent: -2em;margin-left: 2em;margin-top:0px;margin-bottom:12px;line-height:28px;padding:0px;">6. &nbsp;&nbsp;&nbsp;Browsers build instructions</p><p style="word-break:normal;text-indent: -2em;margin-left: 2em;margin-top:0px;margin-bottom:12px;line-height:28px;padding:0px;">6.1. Firefox. <a href="https://developer.mozilla.org/en/Build_Documentation" target="_blank" rel="noopener">https://developer.mozilla.org/en/Build_Documentation</a>.</p><p style="word-break:normal;text-indent: -2em;margin-left: 2em;margin-top:0px;margin-bottom:12px;line-height:28px;padding:0px;">6.2. Webkit. <a href="http://webkit.org/building/build.html" target="_blank" rel="noopener">http://webkit.org/building/build.html</a>.</p>]]></content>
      
      
      <categories>
          
          <category> computer science </category>
          
      </categories>
      
      
        <tags>
            
            <tag> browser </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo-Theme-Snail</title>
      <link href="/2019/11/01/Hexo-Theme-Snail/"/>
      <url>/2019/11/01/Hexo-Theme-Snail/</url>
      
        <content type="html"><![CDATA[<h1 id="hexo-theme-snail"><a href="#hexo-theme-snail" class="headerlink" title="hexo-theme-snail"></a>hexo-theme-snail</h1><p><a href="https://github.com/dusign/hexo-theme-snail" target="_blank" rel="noopener">View Hexo-Theme-Snail Sources On Github &#10174; </a></p><p><strong>Light theme preview</strong></p><p><img src="snail-light.png" alt="hexo-theme-snail"></p><p><strong>Dark theme preview</strong></p><p><img src="snail-dark.png" alt="hexo-theme-snail"></p><p><strong>Star theme preview</strong></p><p><img src="snail-star.png" alt="hexo-theme-snail"></p><p>Hexo-theme-snail is a succinct hexo theme. It has two colors, light and star, that can be set according to your own preferences in the settings, and also has the functions of sharing and commenting. More features are under development.</p><h2 id="Features"><a href="#Features" class="headerlink" title="Features"></a>Features</h2><ul><li>light color theme and star theme</li><li>diversified comment system</li><li>notice tips</li><li>sharing to other platforms (under development)</li><li>picture sharing (under development)</li></ul><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Install-Hexo"><a href="#Install-Hexo" class="headerlink" title="Install Hexo"></a>Install Hexo</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-cli -g</span><br></pre></td></tr></table></figure><h3 id="Setup-your-blog"><a href="#Setup-your-blog" class="headerlink" title="Setup your blog"></a>Setup your blog</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init blog</span><br></pre></td></tr></table></figure><h3 id="Installation-Theme"><a href="#Installation-Theme" class="headerlink" title="Installation Theme"></a>Installation Theme</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> blog</span><br><span class="line">$ rm -rf <span class="built_in">source</span></span><br><span class="line">$ rm -rf scaffolds</span><br><span class="line">$ rm _config.yml package.json README.md LICENSE</span><br><span class="line">$ git <span class="built_in">clone</span> https://github.com/dusign/hexo-theme-snail.git</span><br><span class="line">$ mv ./hexo-theme-snail/snail ./themes</span><br><span class="line">$ mv ./hexo-theme-snail/* ./</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure><h3 id="Install-Mathjax"><a href="#Install-Mathjax" class="headerlink" title="Install Mathjax"></a>Install Mathjax</h3><p>To install Mathjax, please click <a href="https://www.dusign.net/2019/10/14/Hexo-Configuration/">https://www.dusign.net/2019/10/14/Hexo-Configuration/</a> for a detailed tutorial.</p><h3 id="Install-WordCount"><a href="#Install-WordCount" class="headerlink" title="Install WordCount"></a>Install WordCount</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-wordcount --save</span><br></pre></td></tr></table></figure><p>See <a href="https://github.com/willin/hexo-wordcount" target="_blank" rel="noopener">https://github.com/willin/hexo-wordcount</a> for detailed configuration method.</p><h3 id="Set-Theme"><a href="#Set-Theme" class="headerlink" title="Set Theme"></a>Set Theme</h3><p>Modify the value of <code>theme:</code> in <code>_config.yml</code><br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">snail</span></span><br></pre></td></tr></table></figure></p><h3 id="Start-the-Server"><a href="#Start-the-Server" class="headerlink" title="Start the Server"></a>Start the Server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><h2 id="Configuration"><a href="#Configuration" class="headerlink" title="Configuration"></a>Configuration</h2><h3 id="Site"><a href="#Site" class="headerlink" title="Site"></a>Site</h3><p>Replace the following information with your own.<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Site</span></span><br><span class="line"><span class="attr">title:</span> </span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">At</span> <span class="string">the</span> <span class="string">bottom</span> <span class="string">of</span> <span class="string">the</span> <span class="string">well,</span> <span class="string">it</span> <span class="string">is</span> <span class="string">destined</span> <span class="string">to</span> <span class="string">see</span> <span class="string">only</span> <span class="string">the</span> <span class="string">sky</span> <span class="string">at</span> <span class="string">the</span> <span class="string">wellhead.</span> </span><br><span class="line">          <span class="string">However,</span> <span class="string">the</span> <span class="string">starting</span> <span class="string">point</span> <span class="string">only</span> <span class="string">affects</span> <span class="string">the</span> <span class="string">process</span> <span class="string">of</span> <span class="string">reaching</span> <span class="string">your</span> <span class="string">peak</span> <span class="string">and</span> <span class="string">does</span> <span class="string">not</span> <span class="string">determine</span> <span class="string">the</span> <span class="string">height</span> <span class="string">you</span> <span class="string">reach.</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">Dusign</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">en</span></span><br><span class="line"><span class="attr">timezone:</span></span><br></pre></td></tr></table></figure></p><h3 id="Site-Settings"><a href="#Site-Settings" class="headerlink" title="Site Settings"></a>Site Settings</h3><p>Put customized pictures in <code>img</code> directory.<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Site settings</span></span><br><span class="line"><span class="attr">SEOTitle:</span> <span class="string">Hexo-theme-snail</span></span><br><span class="line"><span class="attr">email:</span> <span class="string">hexo-theme-snail@mail.com</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">"A hexo theme"</span></span><br><span class="line"><span class="attr">keyword:</span> <span class="string">"dusign, hexo-theme-snail"</span></span><br><span class="line"><span class="attr">header-img:</span> <span class="string">img/header_img/home-bg-1-dark.jpg</span></span><br><span class="line"><span class="attr">signature:</span> <span class="literal">true</span> <span class="comment">#show signature</span></span><br><span class="line"><span class="attr">signature-img:</span> <span class="string">img/signature/dusign.png</span></span><br></pre></td></tr></table></figure></p><h3 id="SNS-Settings"><a href="#SNS-Settings" class="headerlink" title="SNS Settings"></a>SNS Settings</h3><p>If you don’t want to display it, you can delete it directly.<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># SNS settings</span></span><br><span class="line"><span class="attr">github_username:</span>    <span class="string">dusign</span></span><br><span class="line"><span class="attr">twitter_username:</span>   <span class="string">dusignr</span></span><br><span class="line"><span class="attr">facebook_username:</span>  <span class="string">Gang</span> <span class="string">Du</span></span><br><span class="line"><span class="attr">zhihu_username:</span> <span class="string">dusignr</span></span><br></pre></td></tr></table></figure></p><h3 id="Sidebar-Settings"><a href="#Sidebar-Settings" class="headerlink" title="Sidebar Settings"></a>Sidebar Settings</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Sidebar Settings</span></span><br><span class="line"><span class="attr">sidebar:</span> <span class="literal">true</span>                      <span class="comment"># whether or not using Sidebar.</span></span><br><span class="line"><span class="attr">sidebar-about-description:</span> <span class="string">"Welcome to visit, I'm Dusign!"</span></span><br><span class="line"><span class="attr">sidebar-avatar:</span> <span class="string">img/ironman-draw.png</span>      <span class="comment"># use absolute URL, seeing it's used in both `/` and `/about/`</span></span><br><span class="line"><span class="attr">widgets:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">search</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">featured-tags</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">short-about</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">visitor</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">recent-posts</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">friends-blog</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">archive</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">category</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># widget behavior</span></span><br><span class="line"><span class="comment">## Archive</span></span><br><span class="line"><span class="attr">archive_type:</span> <span class="string">'monthly'</span></span><br><span class="line"><span class="attr">show_count:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## Featured Tags</span></span><br><span class="line"><span class="attr">featured-tags:</span> <span class="literal">true</span>                     <span class="comment"># whether or not using Feature-Tags</span></span><br><span class="line"><span class="attr">featured-condition-size:</span> <span class="number">1</span>              <span class="comment"># A tag will be featured if the size of it is more than this condition value</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## Friends</span></span><br><span class="line"><span class="attr">friends:</span> <span class="string">[</span></span><br><span class="line">    <span class="string">&#123;</span></span><br><span class="line"><span class="attr">        title:</span> <span class="string">"Dusign's Blog"</span><span class="string">,</span></span><br><span class="line"><span class="attr">        href:</span> <span class="string">"https://blog.csdn.net/d_Nail"</span></span><br><span class="line">    <span class="string">&#125;,&#123;</span></span><br><span class="line"><span class="attr">        title:</span> <span class="string">"Dusign's Web"</span><span class="string">,</span></span><br><span class="line"><span class="attr">        href:</span> <span class="string">"#"</span></span><br><span class="line">    <span class="string">&#125;,&#123;</span></span><br><span class="line"><span class="attr">        title:</span> <span class="string">"Dusign's Github"</span><span class="string">,</span></span><br><span class="line"><span class="attr">        href:</span> <span class="string">"https://github.com/dusign"</span></span><br><span class="line">    <span class="string">&#125;,&#123;</span></span><br><span class="line"><span class="attr">        title:</span> <span class="string">"Other"</span><span class="string">,</span></span><br><span class="line"><span class="attr">        href:</span> <span class="string">"#"</span></span><br><span class="line">    <span class="string">&#125;</span></span><br><span class="line"><span class="string">]</span></span><br></pre></td></tr></table></figure><h3 id="Theme"><a href="#Theme" class="headerlink" title="Theme"></a>Theme</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">snail</span></span><br></pre></td></tr></table></figure><h3 id="Deployment"><a href="#Deployment" class="headerlink" title="Deployment"></a>Deployment</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">  repo:</span></span><br><span class="line"><span class="attr">      github:</span> <span class="string">github.repository.address</span></span><br><span class="line"><span class="attr">      coding:</span> <span class="string">coding.repository.address</span></span><br><span class="line"><span class="attr">  branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><h3 id="Share"><a href="#Share" class="headerlink" title="Share"></a>Share</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## Share</span></span><br><span class="line"><span class="attr">share:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h3 id="Comment"><a href="#Comment" class="headerlink" title="Comment"></a>Comment</h3><p>See <a href="https://github.com/imsun/gitment" target="_blank" rel="noopener">https://github.com/imsun/gitment</a> for detailed configuration method.<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Comment</span></span><br><span class="line"><span class="comment">## This comment system is gitment</span></span><br><span class="line"><span class="comment">## gitment url: https://github.com/imsun/gitment</span></span><br><span class="line"><span class="attr">comment:</span></span><br><span class="line"><span class="attr">  gitment:</span></span><br><span class="line"><span class="attr">    enable:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">    owner:</span></span><br><span class="line"><span class="attr">    repo:</span></span><br><span class="line"><span class="attr">    client_id:</span></span><br><span class="line"><span class="attr">    client_secret:</span></span><br><span class="line"><span class="attr">  livere:</span></span><br><span class="line"><span class="attr">    enable:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  disqus:</span></span><br><span class="line"><span class="attr">    enable:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">    username:</span></span><br></pre></td></tr></table></figure></p><h3 id="Tip"><a href="#Tip" class="headerlink" title="Tip"></a>Tip</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Tip</span></span><br><span class="line"><span class="attr">tip:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  copyright:</span> <span class="string">This</span> <span class="string">is</span> <span class="string">copyright.</span></span><br><span class="line"><span class="attr">  content:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><h3 id="Background-effects"><a href="#Background-effects" class="headerlink" title="Background effects"></a>Background effects</h3><p>Set the <code>enable</code> value of the desired color sheme to <code>true</code>. If the value of <code>bg_effects.star.enable</code> is <code>true</code>, please modify the value of <code>highlight_theme</code> in <code>./themes/snail/_config.yml</code> to <code>night</code>.<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Background effects</span></span><br><span class="line"><span class="comment">## If there is no effect after modification, please empty the cache and try again.</span></span><br><span class="line"><span class="comment">## ⚠️ The following special effects will take up a lot of cpu resorces, please open it carefully.</span></span><br><span class="line"><span class="attr">bg_effects:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  line:</span></span><br><span class="line"><span class="attr">    enable:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">    color:</span> <span class="number">129</span><span class="string">,200,61</span></span><br><span class="line"><span class="attr">    pointColor:</span> <span class="number">129</span><span class="string">,200,61</span></span><br><span class="line"><span class="attr">    opacity:</span> <span class="number">0.7</span></span><br><span class="line"><span class="attr">    zIndex:</span> <span class="bullet">-9</span></span><br><span class="line"><span class="attr">    count:</span> <span class="number">99</span></span><br><span class="line"><span class="attr">  mouse_click:</span></span><br><span class="line"><span class="attr">    enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">    content:</span> <span class="string">'"🌱","just do it","🍀"'</span></span><br><span class="line"><span class="attr">    color:</span> <span class="string">'"rgb(121,93,179)"</span></span><br><span class="line"><span class="string">          ,"rgb(76,180,231)"</span></span><br><span class="line"><span class="string">          ,"rgb(184,90,154)"'</span></span><br><span class="line"><span class="attr">  wave:</span></span><br><span class="line"><span class="attr">    enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></p><h3 id="Visitor-statistics"><a href="#Visitor-statistics" class="headerlink" title="Visitor statistics"></a>Visitor statistics</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Visitor statistics</span></span><br><span class="line"><span class="attr">visitor:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  type:</span></span><br></pre></td></tr></table></figure><h3 id="Color-Theme"><a href="#Color-Theme" class="headerlink" title="Color Theme"></a>Color Theme</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># Color Theme</span><br><span class="line">## light , dark or star</span><br><span class="line">## If you set the value of the `color_theme` to `dark`, set the value of the `highlight_theme` to `night` in `/theme/snail/config.yml`</span><br><span class="line">## `mouse_control` is only valid for star themes</span><br><span class="line">color_theme: light</span><br><span class="line">mouse_control: false</span><br></pre></td></tr></table></figure><h3 id="Search"><a href="#Search" class="headerlink" title="Search"></a>Search</h3><p>run <code>$ npm install hexo-generator-search --save</code><br>then add the follow configure to <code>_config.yml</code><br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## Search</span></span><br><span class="line"><span class="attr">search:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  path:</span> <span class="string">search.xml</span></span><br><span class="line"><span class="attr">  field:</span> <span class="string">post</span></span><br><span class="line"><span class="attr">  content:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></p><ul><li>path - file path. By default is search.xml . If the file extension is .json, the output format will be JSON. Otherwise XML format file will be exported.</li><li>field - the search scope you want to search, you can chose:<ul><li>post (Default) - will only covers all the posts of your blog.</li><li>page - will only covers all the pages of your blog.</li><li>all - will covers all the posts and pages of your blog.</li></ul></li><li>content - whether contains the whole content of each article. If false, the generated results only cover title and other meta info without mainbody. By default is true.</li></ul><h3 id="Error-and-Solutions"><a href="#Error-and-Solutions" class="headerlink" title="Error and Solutions"></a>Error and Solutions</h3><ul><li>run <code>hexo deploy</code> with “ERROR Deployer not found: git”<br>solution: <code>npm install --save hexo-deployer-git</code></li></ul><h3 id="Top"><a href="#Top" class="headerlink" title="Top"></a>Top</h3><p>Hexo-theme-snail has added the article top function, just add the following content in the article head.<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">top:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></p><h2 id="Releases"><a href="#Releases" class="headerlink" title="Releases"></a>Releases</h2><p>v1.3</p><ul><li>fix <em>category</em> jump path issue in sidebar</li><li>add a default image for new articles</li><li>add <em>photography</em> (under development)</li><li>fix <em>top</em> and <em>page</em> conflict</li></ul><p>v1.2</p><ul><li>fix the bug</li><li>add <em>search</em> within site</li><li>add <em>top</em></li><li>image wave effect</li><li>add <em>share</em></li><li>add dark theme</li></ul><p>v1.1</p><ul><li>change title font-family</li><li>add <em>wordcount</em></li><li>add visitor statistics</li><li>fix the bug (<em>categories</em> not display)</li><li>replacing mathjax with marked</li></ul><p>v1.0</p><ul><li>fix the bugs</li><li>add comment system</li><li>add notice tips</li><li>add star theme</li><li>add line theme (background effect)</li><li>add mouse-click effect</li></ul><h2 id="License"><a href="#License" class="headerlink" title="License"></a>License</h2><p>Apache License 2.0 Copyright(c) 2018-2020 <a href="https://github.com/dusign" target="_blank" rel="noopener">dusign</a><br><a href="https://github.com/dusign/hexo-theme-snail" target="_blank" rel="noopener">hexo-theme-snail</a> is derived from <a href="https://github.com/YenYuHsuan/hexo-theme-beantech" target="_blank" rel="noopener">hexo-theme-beantech</a> ，thanks <a href="https://github.com/YenYuHsuan" target="_blank" rel="noopener">YenYuHsuan</a>.</p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> hexo-theme-snail </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BFS Introduction</title>
      <link href="/2019/10/31/BFS-Introduction/"/>
      <url>/2019/10/31/BFS-Introduction/</url>
      
        <content type="html"><![CDATA[<p>宽度优先搜索（BFS，Breadth-First Search）与深度优先搜索类似，从某个状态出发搜索所有可以到达的状态。</p><p>与深度优先搜索的不同之处在于搜索的顺序，宽度优先搜索总是先搜索距离初始状态近的状态。也就是说，它是按照开始状态 -&gt; 只需一次转移就可以达到的所有状态 -&gt; 只需两次转移就可以达到的所有状态 -&gt; … … 这样的顺序进行搜索。对于同一个状态，宽度搜索只经过一次，因此复杂度为 O(状态数 * 转移方式)。</p><p>深度优先搜索（隐式地）利用了栈进行计算，而宽度优先搜索则利用了队列。搜索时首先将初始状态添加到队列里，此后从队列的最前端不断取出状态，把从该状态可以转移到的状态中尚未访问过的部分加入队列，如此往复，直至队列被取空或找到问题的解。</p><h3 id="Question"><a href="#Question" class="headerlink" title="Question"></a>Question</h3><p><img src="question.png" alt="question"></p><h3 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h3><p>宽度优先搜索按照距开始状态由近及远的顺序进行搜索，因此可以很容易地用来求最短路径、最少操作之类的问题的答案。这个问题中状态只是目前的位置坐标，因此可以构造成 pair 或者编码成 int 来表达状态，当状况更加复杂时就需要封装成一个类来表示状态了。</p><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  bfs.cpp</span></span><br><span class="line"><span class="comment">//  BFS</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  Created by dusign on 2019/10/31.</span></span><br><span class="line"><span class="comment">//  Copyright © 2019 gang du. All rights reserved.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 尚未达到的距离，无穷大</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">100000000</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAX_N = <span class="number">100</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAX_M = <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; P;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> maze[MAX_N][MAX_M + <span class="number">1</span>];</span><br><span class="line"><span class="keyword">int</span> N, M;</span><br><span class="line"><span class="keyword">int</span> sx, sy;</span><br><span class="line"><span class="keyword">int</span> gx, gy;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> d[MAX_N][MAX_M];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> dx[<span class="number">4</span>] = &#123;<span class="number">1</span>, <span class="number">0</span>, <span class="number">-1</span>, <span class="number">0</span>&#125;, dy[<span class="number">4</span>] = &#123;<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">-1</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">bfs</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">queue</span>&lt;P&gt; que;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; M; j++)</span><br><span class="line">            d[i][j] = INF;</span><br><span class="line">    </span><br><span class="line">    que.push(P(sx, sy));</span><br><span class="line">    d[sx][sy] = <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(que.size())&#123;</span><br><span class="line">        P p = que.front();</span><br><span class="line">        que.pop();</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(p.first == gx &amp;&amp; p.second == gy) <span class="keyword">break</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> nx = p.first + dx[i];</span><br><span class="line">            <span class="keyword">int</span> ny = p.second + dy[i];</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span>(<span class="number">0</span> &lt;= nx &amp;&amp; nx &lt; N &amp;&amp; <span class="number">0</span> &lt;= ny &amp;&amp; ny &lt; M &amp;&amp; maze[nx][ny] != <span class="string">'#'</span> &amp;&amp; d[nx][ny] == INF)&#123;</span><br><span class="line">                que.push(P(nx, ny));</span><br><span class="line">                d[nx][ny] = d[p.first][p.second] + <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> d[gx][gy];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> res = bfs();</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; res &lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; N &gt;&gt; M;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; M; j++)&#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; maze[i][j];</span><br><span class="line">            <span class="keyword">if</span>(maze[i][j] == <span class="string">'S'</span>)&#123;</span><br><span class="line">                sx = i;</span><br><span class="line">                sy = j;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(maze[i][j] == <span class="string">'G'</span>)&#123;</span><br><span class="line">                gx = i;</span><br><span class="line">                gy = j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">    solve();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Remark"><a href="#Remark" class="headerlink" title="Remark"></a>Remark</h3><p>宽度优先搜索会把状态逐个加入队列，因此通常需要与状态数成正比的内存空间。而深度优先搜索是与最大的递归深度成正比。一般与状态数相比，递归的深度并不会太大，所以可以认为深度优先搜索更加节省内存。</p><p>此外，也有采用与宽度优先搜索类似的状态转移顺序，并注重节约内存占用的迭代加深深度优先搜索（IDDFS, Iterative Deepening Depth-First Search）。IDDFS 是一种在最开始将深度优先搜索的递归次数限制在1次，在找到解之前不断增加递归深度的方法。</p>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> algorithm </tag>
            
            <tag> bfs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DFS Introduction</title>
      <link href="/2019/10/25/DFS-Introduction/"/>
      <url>/2019/10/25/DFS-Introduction/</url>
      
        <content type="html"><![CDATA[<p>DFS 是搜索的手段之一。它从某个状态开始，不断地转移状态直到无法转移，然后回退到前一步的状态，继续转移到其他状态，如此不断重复，直到找到最终的解为止。</p><h3 id="Question"><a href="#Question" class="headerlink" title="Question"></a>Question</h3><p><img src="question.png" alt="question"></p><h3 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h3><p>从任意的 W 开始，不停地把临接的部分用 ‘ . ’ 代替。1次 DFS 后与初始的这个 W 连接的所有 W 就都被替换成了 ‘ . ’ ，因此直到图中不再存在 W 为止，总共进行 DFS 的次数就是答案了。8个方向共对应了8种状态转移，每个格子作为 DFS 的参数至多被调用一次，所以复杂度为 &Omicron;(8 x N x M) = &Omicron;(N x M)。</p><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  dfs.cpp</span></span><br><span class="line"><span class="comment">//  DFS</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  Created by gang du on 2019/10/26.</span></span><br><span class="line"><span class="comment">//  Copyright © 2019 dusign. All rights reserved.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> N, M;</span><br><span class="line"><span class="keyword">char</span> field[<span class="number">100</span>][<span class="number">101</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">    field[x][y] = <span class="string">'.'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> dx = <span class="number">-1</span>; dx &lt;= <span class="number">1</span>; dx++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> dy = <span class="number">-1</span>; dy &lt;= <span class="number">1</span>; dy++)&#123;</span><br><span class="line">            <span class="keyword">int</span> nx = x + dx;</span><br><span class="line">            <span class="keyword">int</span> ny = y + dy;</span><br><span class="line">            <span class="keyword">if</span>(<span class="number">0</span> &lt;= nx &amp;&amp; nx &lt; N &amp;&amp; <span class="number">0</span> &lt;= ny &amp;&amp; ny &lt; M &amp;&amp; field[nx][ny] == <span class="string">'w'</span>)</span><br><span class="line">                dfs(nx, ny);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; M; j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(field[i][j] == <span class="string">'w'</span>)&#123;</span><br><span class="line">                dfs(i, j);</span><br><span class="line">                res ++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; res &lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; N &gt;&gt; M;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; M; j++)&#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; field[i][j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    solve();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> algorithm </tag>
            
            <tag> dfs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML Special Characters</title>
      <link href="/2019/10/23/HTML-Special-Characters/"/>
      <url>/2019/10/23/HTML-Special-Characters/</url>
      
        <content type="html"><![CDATA[<p>HTML（HyperText Markup Language）全称为超文本标记语言，是一种标识性的语言。有时候在写 HTML 的时候，我们会用到特殊的符号，这些符号没法直接通过键盘打出来。现将这些特殊符号整理如下，系统对大家有帮助。下面的内容可能不全，笔者会逐渐补充完整。</p><p>下面所有的符号为了方便省略了分号，在使用的过程中需要在编码的后面加 <code>;</code>,这样才能正确显示。</p><h3 id="箭头类"><a href="#箭头类" class="headerlink" title="箭头类"></a>箭头类</h3><div class="table-container"><table><thead><tr><th style="text-align:center">符号</th><th style="text-align:center">HTML</th><th style="text-align:center">JS</th><th style="text-align:center">CSS</th><th style="text-align:center">符号</th><th style="text-align:center">HTML</th><th style="text-align:center">JS</th><th style="text-align:center">CSS</th></tr></thead><tbody><tr><td style="text-align:center">⇠</td><td style="text-align:center"><code>&amp;#8672</code></td><td style="text-align:center"><code>\u21E0</code></td><td style="text-align:center"><code>\21E0</code></td><td style="text-align:center">⇢</td><td style="text-align:center"><code>&amp;#8674</code></td><td style="text-align:center"><code>\u21E2</code></td><td style="text-align:center"><code>\21E2</code></td></tr><tr><td style="text-align:center">⇡</td><td style="text-align:center"><code>&amp;#8673</code></td><td style="text-align:center"><code>\u21E1</code></td><td style="text-align:center"><code>\21E1</code></td><td style="text-align:center">⇣</td><td style="text-align:center"><code>&amp;#8675</code></td><td style="text-align:center"><code>\u21E3</code></td><td style="text-align:center"><code>\21E3</code></td></tr><tr><td style="text-align:center">↞</td><td style="text-align:center"><code>&amp;#8606</code></td><td style="text-align:center"><code>\u219E</code></td><td style="text-align:center"><code>\219E</code></td><td style="text-align:center">↠</td><td style="text-align:center"><code>&amp;#8608</code></td><td style="text-align:center"><code>\u21A0</code></td><td style="text-align:center"><code>\21A0</code></td></tr><tr><td style="text-align:center">↟</td><td style="text-align:center"><code>&amp;#8607</code></td><td style="text-align:center"><code>\u219F</code></td><td style="text-align:center"><code>\219F</code></td><td style="text-align:center">↡</td><td style="text-align:center"><code>&amp;#8609</code></td><td style="text-align:center"><code>\u21A1</code></td><td style="text-align:center"><code>\21A1</code></td></tr><tr><td style="text-align:center">←</td><td style="text-align:center"><code>&amp;#8592</code></td><td style="text-align:center"><code>\u2190</code></td><td style="text-align:center"><code>\2190</code></td><td style="text-align:center">→</td><td style="text-align:center"><code>&amp;#8594</code></td><td style="text-align:center"><code>\u2192</code></td><td style="text-align:center"><code>\2192</code></td></tr><tr><td style="text-align:center">↑</td><td style="text-align:center"><code>&amp;#8593</code></td><td style="text-align:center"><code>\u2191</code></td><td style="text-align:center"><code>\2191</code></td><td style="text-align:center">↓</td><td style="text-align:center"><code>&amp;#8595</code></td><td style="text-align:center"><code>\u2193</code></td><td style="text-align:center"><code>\2193</code></td></tr><tr><td style="text-align:center">↔</td><td style="text-align:center"><code>&amp;#8596</code></td><td style="text-align:center"><code>\u2194</code></td><td style="text-align:center"><code>\2194</code></td><td style="text-align:center">↕</td><td style="text-align:center"><code>&amp;#8597</code></td><td style="text-align:center"><code>\u2195</code></td><td style="text-align:center"><code>\2195</code></td></tr><tr><td style="text-align:center">⇄</td><td style="text-align:center"><code>&amp;#8644</code></td><td style="text-align:center"><code>\u21C4</code></td><td style="text-align:center"><code>\21C4</code></td><td style="text-align:center">⇅</td><td style="text-align:center"><code>&amp;#8645</code></td><td style="text-align:center"><code>\u21C5</code></td><td style="text-align:center"><code>\21C5</code></td></tr><tr><td style="text-align:center">↢</td><td style="text-align:center"><code>&amp;#8610</code></td><td style="text-align:center"><code>\u21A2</code></td><td style="text-align:center"><code>\21A2</code></td><td style="text-align:center">↣</td><td style="text-align:center"><code>&amp;#8611</code></td><td style="text-align:center"><code>\u21A3</code></td><td style="text-align:center"><code>\21A3</code></td></tr><tr><td style="text-align:center">⇞</td><td style="text-align:center"><code>&amp;#8670</code></td><td style="text-align:center"><code>\u21DE</code></td><td style="text-align:center"><code>\21DE</code></td><td style="text-align:center">⇟</td><td style="text-align:center"><code>&amp;#8671</code></td><td style="text-align:center"><code>\u21DF</code></td><td style="text-align:center"><code>\21DF</code></td></tr><tr><td style="text-align:center">↫</td><td style="text-align:center"><code>&amp;#8619</code></td><td style="text-align:center"><code>\u21AB</code></td><td style="text-align:center"><code>\21AB</code></td><td style="text-align:center">↬</td><td style="text-align:center"><code>&amp;#8620</code></td><td style="text-align:center"><code>\u21AC</code></td><td style="text-align:center"><code>\21AC</code></td></tr><tr><td style="text-align:center">⇜</td><td style="text-align:center"><code>&amp;#8668</code></td><td style="text-align:center"><code>\u21DC</code></td><td style="text-align:center"><code>\21DC</code></td><td style="text-align:center">⇝</td><td style="text-align:center"><code>&amp;#8669</code></td><td style="text-align:center"><code>\u21DD</code></td><td style="text-align:center"><code>\21DD</code></td></tr><tr><td style="text-align:center">↚</td><td style="text-align:center"><code>&amp;#8602</code></td><td style="text-align:center"><code>\u219A</code></td><td style="text-align:center"><code>\219A</code></td><td style="text-align:center">↛</td><td style="text-align:center"><code>&amp;#8603</code></td><td style="text-align:center"><code>\u219B</code></td><td style="text-align:center"><code>\219B</code></td></tr><tr><td style="text-align:center">↮</td><td style="text-align:center"><code>&amp;#8622</code></td><td style="text-align:center"><code>\u21AE</code></td><td style="text-align:center"><code>\21AE</code></td><td style="text-align:center">↭</td><td style="text-align:center"><code>&amp;#8621</code></td><td style="text-align:center"><code>\u21AD</code></td><td style="text-align:center"><code>\21AD</code></td></tr><tr><td style="text-align:center">⇦</td><td style="text-align:center"><code>&amp;#8678</code></td><td style="text-align:center"><code>\u21E6</code></td><td style="text-align:center"><code>\21E6</code></td><td style="text-align:center">⇨</td><td style="text-align:center"><code>&amp;#8680</code></td><td style="text-align:center"><code>\u21E8</code></td><td style="text-align:center"><code>\21E8</code></td></tr><tr><td style="text-align:center">⇧</td><td style="text-align:center"><code>&amp;#8679</code></td><td style="text-align:center"><code>\u21E7</code></td><td style="text-align:center"><code>\21E7</code></td><td style="text-align:center">⇩</td><td style="text-align:center"><code>&amp;#8681</code></td><td style="text-align:center"><code>\u21E9</code></td><td style="text-align:center"><code>\21E9</code></td></tr><tr><td style="text-align:center">▲</td><td style="text-align:center"><code>&amp;#9650</code></td><td style="text-align:center"><code>\u25B2</code></td><td style="text-align:center"><code>\25B2</code></td><td style="text-align:center">►</td><td style="text-align:center"><code>&amp;#9658</code></td><td style="text-align:center"><code>\u25BA</code></td><td style="text-align:center"><code>\25BA</code></td></tr><tr><td style="text-align:center">▼</td><td style="text-align:center"><code>&amp;#9660</code></td><td style="text-align:center"><code>\u25BC</code></td><td style="text-align:center"><code>\25BC</code></td><td style="text-align:center">◄</td><td style="text-align:center"><code>&amp;#9668</code></td><td style="text-align:center"><code>\u25C4</code></td><td style="text-align:center"><code>\25C4</code></td></tr><tr><td style="text-align:center">➔</td><td style="text-align:center"><code>&amp;#10132</code></td><td style="text-align:center"><code>\u2794</code></td><td style="text-align:center"><code>\2794</code></td><td style="text-align:center">➙</td><td style="text-align:center"><code>&amp;#10137</code></td><td style="text-align:center"><code>\u2799</code></td><td style="text-align:center"><code>\2799</code></td></tr><tr><td style="text-align:center">➨</td><td style="text-align:center"><code>&amp;#10152</code></td><td style="text-align:center"><code>\u27A8</code></td><td style="text-align:center"><code>\27A8</code></td><td style="text-align:center">➲</td><td style="text-align:center"><code>&amp;#10162</code></td><td style="text-align:center"><code>\u27B2</code></td><td style="text-align:center"><code>\27B2</code></td></tr><tr><td style="text-align:center">➜</td><td style="text-align:center"><code>&amp;#10140</code></td><td style="text-align:center"><code>\u279C</code></td><td style="text-align:center"><code>\279C</code></td><td style="text-align:center">➞</td><td style="text-align:center"><code>&amp;#10142</code></td><td style="text-align:center"><code>\u279E</code></td><td style="text-align:center"><code>\279E</code></td></tr><tr><td style="text-align:center">➟</td><td style="text-align:center"><code>&amp;#10143</code></td><td style="text-align:center"><code>\u279F</code></td><td style="text-align:center"><code>\279F</code></td><td style="text-align:center">➠</td><td style="text-align:center"><code>&amp;#10144</code></td><td style="text-align:center"><code>\u27A0</code></td><td style="text-align:center"><code>\27A0</code></td></tr><tr><td style="text-align:center">➤</td><td style="text-align:center"><code>&amp;#10148</code></td><td style="text-align:center"><code>\u27A4</code></td><td style="text-align:center"><code>\27A4</code></td><td style="text-align:center">➥</td><td style="text-align:center"><code>&amp;#10149</code></td><td style="text-align:center"><code>\u27A5</code></td><td style="text-align:center"><code>\27A5</code></td></tr><tr><td style="text-align:center">➦</td><td style="text-align:center"><code>&amp;#10150</code></td><td style="text-align:center"><code>\u27A6</code></td><td style="text-align:center"><code>\27A6</code></td><td style="text-align:center">➧</td><td style="text-align:center"><code>&amp;#10151</code></td><td style="text-align:center"><code>\u27A7</code></td><td style="text-align:center"><code>\27A7</code></td></tr><tr><td style="text-align:center">➵</td><td style="text-align:center"><code>&amp;#10165</code></td><td style="text-align:center"><code>\u27B5</code></td><td style="text-align:center"><code>\27B5</code></td><td style="text-align:center">➸</td><td style="text-align:center"><code>&amp;#10168</code></td><td style="text-align:center"><code>\u27B8</code></td><td style="text-align:center"><code>\27B8</code></td></tr><tr><td style="text-align:center">➼</td><td style="text-align:center"><code>&amp;#10172</code></td><td style="text-align:center"><code>\u27BC</code></td><td style="text-align:center"><code>\27BC</code></td><td style="text-align:center">➽</td><td style="text-align:center"><code>&amp;#10173</code></td><td style="text-align:center"><code>\u27BD</code></td><td style="text-align:center"><code>\27BD</code></td></tr><tr><td style="text-align:center">➺</td><td style="text-align:center"><code>&amp;#10170</code></td><td style="text-align:center"><code>\u27BA</code></td><td style="text-align:center"><code>\27BA</code></td><td style="text-align:center">➳</td><td style="text-align:center"><code>&amp;#10163</code></td><td style="text-align:center"><code>\u27B3</code></td><td style="text-align:center"><code>\27B3</code></td></tr><tr><td style="text-align:center">↷</td><td style="text-align:center"><code>&amp;#8631</code></td><td style="text-align:center"><code>\u21B7</code></td><td style="text-align:center"><code>\21B7</code></td><td style="text-align:center">↶</td><td style="text-align:center"><code>&amp;#8630</code></td><td style="text-align:center"><code>\u21B6</code></td><td style="text-align:center"><code>\21B6</code></td></tr><tr><td style="text-align:center">↻</td><td style="text-align:center"><code>&amp;#8635</code></td><td style="text-align:center"><code>\u21BB</code></td><td style="text-align:center"><code>\21BB</code></td><td style="text-align:center">↺</td><td style="text-align:center"><code>&amp;#8634</code></td><td style="text-align:center"><code>\u21BA</code></td><td style="text-align:center"><code>\21BA</code></td></tr><tr><td style="text-align:center">↵</td><td style="text-align:center"><code>&amp;#8629</code></td><td style="text-align:center"><code>\u21B5</code></td><td style="text-align:center"><code>\21B5</code></td><td style="text-align:center">↯</td><td style="text-align:center"><code>&amp;#8623</code></td><td style="text-align:center"><code>\u21AF</code></td><td style="text-align:center"><code>\21AF</code></td></tr><tr><td style="text-align:center">➾</td><td style="text-align:center"><code>&amp;#10174</code></td><td style="text-align:center"><code>\u27BE</code></td><td style="text-align:center"><code>\27BE</code></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td></tr></tbody></table></div><h3 id="基本形状类"><a href="#基本形状类" class="headerlink" title="基本形状类"></a>基本形状类</h3><div class="table-container"><table><thead><tr><th style="text-align:center">符号</th><th style="text-align:center">HTML</th><th style="text-align:center">JS</th><th style="text-align:center">CSS</th><th style="text-align:center">符号</th><th style="text-align:center">HTML</th><th style="text-align:center">JS</th><th style="text-align:center">CSS</th></tr></thead><tbody><tr><td style="text-align:center">❤</td><td style="text-align:center"><code>&amp;#10084</code></td><td style="text-align:center"><code>\u2764</code></td><td style="text-align:center"><code>\2764</code></td><td style="text-align:center">✈</td><td style="text-align:center"><code>&amp;#9992</code></td><td style="text-align:center"><code>\u2708</code></td><td style="text-align:center"><code>\2708</code></td></tr><tr><td style="text-align:center">★</td><td style="text-align:center"><code>&amp;#9733</code></td><td style="text-align:center"><code>\u2605</code></td><td style="text-align:center"><code>\2605</code></td><td style="text-align:center">✦</td><td style="text-align:center"><code>&amp;#10022</code></td><td style="text-align:center"><code>\u2726</code></td><td style="text-align:center"><code>\2726</code></td></tr><tr><td style="text-align:center">☀</td><td style="text-align:center"><code>&amp;#9728</code></td><td style="text-align:center"><code>\u2600</code></td><td style="text-align:center"><code>\2600</code></td><td style="text-align:center">◆</td><td style="text-align:center"><code>&amp;#9670</code></td><td style="text-align:center"><code>\u25C6</code></td><td style="text-align:center"><code>\25C6</code></td></tr><tr><td style="text-align:center">◈</td><td style="text-align:center"><code>&amp;#9672</code></td><td style="text-align:center"><code>\u25C8</code></td><td style="text-align:center"><code>\25C8</code></td><td style="text-align:center">▣</td><td style="text-align:center"><code>&amp;#9635</code></td><td style="text-align:center"><code>\u25A3</code></td><td style="text-align:center"><code>\25A3</code></td></tr><tr><td style="text-align:center">☻</td><td style="text-align:center"><code>&amp;#9787</code></td><td style="text-align:center"><code>\u263B</code></td><td style="text-align:center"><code>\263B</code></td><td style="text-align:center">☺</td><td style="text-align:center"><code>&amp;#9786</code></td><td style="text-align:center"><code>\u263A</code></td><td style="text-align:center"><code>\263A</code></td></tr><tr><td style="text-align:center">☹</td><td style="text-align:center"><code>&amp;#9785</code></td><td style="text-align:center"><code>\u2639</code></td><td style="text-align:center"><code>\2639</code></td><td style="text-align:center">✉</td><td style="text-align:center"><code>&amp;#9993</code></td><td style="text-align:center"><code>\u2709</code></td><td style="text-align:center"><code>\2709</code></td></tr><tr><td style="text-align:center">☎</td><td style="text-align:center"><code>&amp;#9742</code></td><td style="text-align:center"><code>\u260E</code></td><td style="text-align:center"><code>\260E</code></td><td style="text-align:center">☏</td><td style="text-align:center"><code>&amp;#9743</code></td><td style="text-align:center"><code>\u260F</code></td><td style="text-align:center"><code>\260F</code></td></tr><tr><td style="text-align:center">✆</td><td style="text-align:center"><code>&amp;#9990</code></td><td style="text-align:center"><code>\u2706</code></td><td style="text-align:center"><code>\2706</code></td><td style="text-align:center">�</td><td style="text-align:center"><code>&amp;#65533</code></td><td style="text-align:center"><code>\uFFFD</code></td><td style="text-align:center"><code>\FFFD</code></td></tr><tr><td style="text-align:center">☁</td><td style="text-align:center"><code>&amp;#9729</code></td><td style="text-align:center"><code>\u2601</code></td><td style="text-align:center"><code>\2601</code></td><td style="text-align:center">☂</td><td style="text-align:center"><code>&amp;#9730</code></td><td style="text-align:center"><code>\u2602</code></td><td style="text-align:center"><code>\2602</code></td></tr><tr><td style="text-align:center">❄</td><td style="text-align:center"><code>&amp;#10052</code></td><td style="text-align:center"><code>\u2744</code></td><td style="text-align:center"><code>\2744</code></td><td style="text-align:center">☃</td><td style="text-align:center"><code>&amp;#9731</code></td><td style="text-align:center"><code>\u2603</code></td><td style="text-align:center"><code>\2603</code></td></tr><tr><td style="text-align:center">❈</td><td style="text-align:center"><code>&amp;#10056</code></td><td style="text-align:center"><code>\u2748</code></td><td style="text-align:center"><code>\2748</code></td><td style="text-align:center">✿</td><td style="text-align:center"><code>&amp;#10047</code></td><td style="text-align:center"><code>\u273F</code></td><td style="text-align:center"><code>\273F</code></td></tr><tr><td style="text-align:center">❀</td><td style="text-align:center"><code>&amp;#10048</code></td><td style="text-align:center"><code>\u2740</code></td><td style="text-align:center"><code>\2740</code></td><td style="text-align:center">❁</td><td style="text-align:center"><code>&amp;#10049</code></td><td style="text-align:center"><code>\u2741</code></td><td style="text-align:center"><code>\2741</code></td></tr><tr><td style="text-align:center">☘</td><td style="text-align:center"><code>&amp;#9752</code></td><td style="text-align:center"><code>\u2618</code></td><td style="text-align:center"><code>\2618</code></td><td style="text-align:center">❦</td><td style="text-align:center"><code>&amp;#10086</code></td><td style="text-align:center"><code>\u2766</code></td><td style="text-align:center"><code>\2766</code></td></tr><tr><td style="text-align:center">☕</td><td style="text-align:center"><code>&amp;#9749</code></td><td style="text-align:center"><code>\u9749</code></td><td style="text-align:center"><code>\9749</code></td><td style="text-align:center">❂</td><td style="text-align:center"><code>&amp;#10050</code></td><td style="text-align:center"><code>\u2742</code></td><td style="text-align:center"><code>\2742</code></td></tr><tr><td style="text-align:center">☥</td><td style="text-align:center"><code>&amp;#9765</code></td><td style="text-align:center"><code>\u2625</code></td><td style="text-align:center"><code>\2625</code></td><td style="text-align:center">☮</td><td style="text-align:center"><code>&amp;#9774</code></td><td style="text-align:center"><code>\u262E</code></td><td style="text-align:center"><code>\262E</code></td></tr><tr><td style="text-align:center">☯</td><td style="text-align:center"><code>&amp;#9775</code></td><td style="text-align:center"><code>\u262F</code></td><td style="text-align:center"><code>\262F</code></td><td style="text-align:center">☪</td><td style="text-align:center"><code>&amp;#9770</code></td><td style="text-align:center"><code>\u262A</code></td><td style="text-align:center"><code>\262A</code></td></tr><tr><td style="text-align:center">☤</td><td style="text-align:center"><code>&amp;#9764</code></td><td style="text-align:center"><code>\u2624</code></td><td style="text-align:center"><code>\2624</code></td><td style="text-align:center">✄</td><td style="text-align:center"><code>&amp;#9988</code></td><td style="text-align:center"><code>\u2704</code></td><td style="text-align:center"><code>\2704</code></td></tr><tr><td style="text-align:center">✂</td><td style="text-align:center"><code>&amp;#9986</code></td><td style="text-align:center"><code>\u2702</code></td><td style="text-align:center"><code>\2702</code></td><td style="text-align:center">☸</td><td style="text-align:center"><code>&amp;#9784</code></td><td style="text-align:center"><code>\u2638</code></td><td style="text-align:center"><code>\2638</code></td></tr><tr><td style="text-align:center">⚓</td><td style="text-align:center"><code>&amp;#9875</code></td><td style="text-align:center"><code>\u2693</code></td><td style="text-align:center"><code>\2693</code></td><td style="text-align:center">☣</td><td style="text-align:center"><code>&amp;#9763</code></td><td style="text-align:center"><code>\u2623</code></td><td style="text-align:center"><code>\2623</code></td></tr><tr><td style="text-align:center">⚠</td><td style="text-align:center"><code>&amp;#9888</code></td><td style="text-align:center"><code>\u26A0</code></td><td style="text-align:center"><code>\26A0</code></td><td style="text-align:center">⚡</td><td style="text-align:center"><code>&amp;#9889</code></td><td style="text-align:center"><code>\u26A1</code></td><td style="text-align:center"><code>\26A1</code></td></tr><tr><td style="text-align:center">☢</td><td style="text-align:center"><code>&amp;#9762</code></td><td style="text-align:center"><code>\u2622</code></td><td style="text-align:center"><code>\2622</code></td><td style="text-align:center">♻</td><td style="text-align:center"><code>&amp;#9851</code></td><td style="text-align:center"><code>\u267B</code></td><td style="text-align:center"><code>\267B</code></td></tr><tr><td style="text-align:center">♿</td><td style="text-align:center"><code>&amp;#9855</code></td><td style="text-align:center"><code>\u267F</code></td><td style="text-align:center"><code>\267F</code></td><td style="text-align:center">☠</td><td style="text-align:center"><code>&amp;#9760</code></td><td style="text-align:center"><code>\u2620</code></td><td style="text-align:center"><code>\2620</code></td></tr></tbody></table></div><h3 id="货币类"><a href="#货币类" class="headerlink" title="货币类"></a>货币类</h3><div class="table-container"><table><thead><tr><th style="text-align:center">符号</th><th style="text-align:center">HTML</th><th style="text-align:center">JS</th><th style="text-align:center">CSS</th><th style="text-align:center">符号</th><th style="text-align:center">HTML</th><th style="text-align:center">JS</th><th style="text-align:center">CSS</th></tr></thead><tbody><tr><td style="text-align:center">$</td><td style="text-align:center"><code>&amp;#36</code></td><td style="text-align:center"><code>\u0024</code></td><td style="text-align:center"><code>\0024</code></td><td style="text-align:center">¢</td><td style="text-align:center"><code>&amp;#162</code></td><td style="text-align:center"><code>\u00A2</code></td><td style="text-align:center"><code>\00A2</code></td></tr><tr><td style="text-align:center">£</td><td style="text-align:center"><code>&amp;#163</code></td><td style="text-align:center"><code>\u00A3</code></td><td style="text-align:center"><code>\00A3</code></td><td style="text-align:center">¤</td><td style="text-align:center"><code>&amp;#164</code></td><td style="text-align:center"><code>\u00A4</code></td><td style="text-align:center"><code>\00A4</code></td></tr><tr><td style="text-align:center">€</td><td style="text-align:center"><code>&amp;#8364</code></td><td style="text-align:center"><code>\u20AC</code></td><td style="text-align:center"><code>\20AC</code></td><td style="text-align:center">¥</td><td style="text-align:center"><code>&amp;#165</code></td><td style="text-align:center"><code>\u00A5</code></td><td style="text-align:center"><code>\00A5</code></td></tr><tr><td style="text-align:center">₱</td><td style="text-align:center"><code>&amp;#8369</code></td><td style="text-align:center"><code>\u20B1</code></td><td style="text-align:center"><code>\20B1</code></td><td style="text-align:center">₹</td><td style="text-align:center"><code>&amp;#8377</code></td><td style="text-align:center"><code>\u20B9</code></td><td style="text-align:center"><code>\20B9</code></td></tr></tbody></table></div><h3 id="数学类"><a href="#数学类" class="headerlink" title="数学类"></a>数学类</h3><div class="table-container"><table><thead><tr><th style="text-align:center">符号</th><th style="text-align:center">HTML</th><th style="text-align:center">JS</th><th style="text-align:center">CSS</th><th style="text-align:center">符号</th><th style="text-align:center">HTML</th><th style="text-align:center">JS</th><th style="text-align:center">CSS</th></tr></thead><tbody><tr><td style="text-align:center">½</td><td style="text-align:center"><code>&amp;#189</code></td><td style="text-align:center"><code>\u00BD</code></td><td style="text-align:center"><code>\00BD</code></td><td style="text-align:center">¼</td><td style="text-align:center"><code>&amp;#188</code></td><td style="text-align:center"><code>\u00BC</code></td><td style="text-align:center"><code>\00BC</code></td></tr><tr><td style="text-align:center">¾</td><td style="text-align:center"><code>&amp;#190</code></td><td style="text-align:center"><code>\u00BE</code></td><td style="text-align:center"><code>\00BE</code></td><td style="text-align:center">⅓</td><td style="text-align:center"><code>&amp;#8531</code></td><td style="text-align:center"><code>\u2153</code></td><td style="text-align:center"><code>\2153</code></td></tr><tr><td style="text-align:center">⅔</td><td style="text-align:center"><code>&amp;#8532</code></td><td style="text-align:center"><code>\u2154</code></td><td style="text-align:center"><code>\2154</code></td><td style="text-align:center">⅛</td><td style="text-align:center"><code>&amp;#8539</code></td><td style="text-align:center"><code>\u215B</code></td><td style="text-align:center"><code>\215B</code></td></tr><tr><td style="text-align:center">⅜</td><td style="text-align:center"><code>&amp;#8540</code></td><td style="text-align:center"><code>\u215C</code></td><td style="text-align:center"><code>\215C</code></td><td style="text-align:center">⅝</td><td style="text-align:center"><code>&amp;#8541</code></td><td style="text-align:center"><code>\u215D</code></td><td style="text-align:center"><code>\215D</code></td></tr><tr><td style="text-align:center">‰</td><td style="text-align:center"><code>&amp;#8240</code></td><td style="text-align:center"><code>\u2030</code></td><td style="text-align:center"><code>\2030</code></td><td style="text-align:center">%</td><td style="text-align:center"><code>&amp;#37</code></td><td style="text-align:center"><code>\u0025</code></td><td style="text-align:center"><code>\0025</code></td></tr><tr><td style="text-align:center">&lt;</td><td style="text-align:center"><code>&amp;#60</code></td><td style="text-align:center"><code>\u003C</code></td><td style="text-align:center"><code>\003C</code></td><td style="text-align:center">&gt;</td><td style="text-align:center"><code>&amp;#62</code></td><td style="text-align:center"><code>\u003E</code></td><td style="text-align:center"><code>\003E</code></td></tr></tbody></table></div><h3 id="音乐符号类"><a href="#音乐符号类" class="headerlink" title="音乐符号类"></a>音乐符号类</h3><div class="table-container"><table><thead><tr><th style="text-align:center">符号</th><th style="text-align:center">HTML</th><th style="text-align:center">JS</th><th style="text-align:center">CSS</th><th style="text-align:center">符号</th><th style="text-align:center">HTML</th><th style="text-align:center">JS</th><th style="text-align:center">CSS</th></tr></thead><tbody><tr><td style="text-align:center">♩</td><td style="text-align:center"><code>&amp;#9833</code></td><td style="text-align:center"><code>\u2669</code></td><td style="text-align:center"><code>\2669</code></td><td style="text-align:center">♪</td><td style="text-align:center"><code>&amp;#9834</code></td><td style="text-align:center"><code>\u266A</code></td><td style="text-align:center"><code>\266A</code></td></tr><tr><td style="text-align:center">♫</td><td style="text-align:center"><code>&amp;#9835</code></td><td style="text-align:center"><code>\u266B</code></td><td style="text-align:center"><code>\266B</code></td><td style="text-align:center">♬</td><td style="text-align:center"><code>&amp;#9836</code></td><td style="text-align:center"><code>\u266C</code></td><td style="text-align:center"><code>\266C</code></td></tr><tr><td style="text-align:center">♭</td><td style="text-align:center"><code>&amp;#9837</code></td><td style="text-align:center"><code>\u266D</code></td><td style="text-align:center"><code>\266D</code></td><td style="text-align:center">♯</td><td style="text-align:center"><code>&amp;#9839</code></td><td style="text-align:center"><code>\u266F</code></td><td style="text-align:center"><code>\266F</code></td></tr></tbody></table></div><h3 id="对错号"><a href="#对错号" class="headerlink" title="对错号"></a>对错号</h3><div class="table-container"><table><thead><tr><th style="text-align:center">符号</th><th style="text-align:center">HTML</th><th style="text-align:center">JS</th><th style="text-align:center">CSS</th><th style="text-align:center">符号</th><th style="text-align:center">HTML</th><th style="text-align:center">JS</th><th style="text-align:center">CSS</th></tr></thead><tbody><tr><td style="text-align:center">space</td><td style="text-align:center"><code>&amp;#160</code></td><td style="text-align:center"><code>\u00A0</code></td><td style="text-align:center"><code>\00A0</code></td><td style="text-align:center">☐</td><td style="text-align:center"><code>&amp;#9744</code></td><td style="text-align:center"><code>\u2610</code></td><td style="text-align:center"><code>\2610</code></td></tr><tr><td style="text-align:center">☑</td><td style="text-align:center"><code>&amp;#9745</code></td><td style="text-align:center"><code>\u2611</code></td><td style="text-align:center"><code>\2611</code></td><td style="text-align:center">☒</td><td style="text-align:center"><code>&amp;#9746</code></td><td style="text-align:center"><code>\u2612</code></td><td style="text-align:center"><code>\2612</code></td></tr><tr><td style="text-align:center">✓</td><td style="text-align:center"><code>&amp;#10003</code></td><td style="text-align:center"><code>\u2713</code></td><td style="text-align:center"><code>\2713</code></td><td style="text-align:center">✔</td><td style="text-align:center"><code>&amp;#10004</code></td><td style="text-align:center"><code>\u2714</code></td><td style="text-align:center"><code>\2714</code></td></tr><tr><td style="text-align:center">✕</td><td style="text-align:center"><code>&amp;#10005</code></td><td style="text-align:center"><code>\u10005</code></td><td style="text-align:center"><code>\10005</code></td><td style="text-align:center">✖</td><td style="text-align:center"><code>&amp;#10006</code></td><td style="text-align:center"><code>\u2716</code></td><td style="text-align:center"><code>\2716</code></td></tr><tr><td style="text-align:center">✗</td><td style="text-align:center"><code>&amp;#10007</code></td><td style="text-align:center"><code>\u2717</code></td><td style="text-align:center"><code>\2717</code></td><td style="text-align:center">✘</td><td style="text-align:center"><code>&amp;#10008</code></td><td style="text-align:center"><code>\u2718</code></td><td style="text-align:center"><code>\2718</code></td></tr></tbody></table></div><h3 id="星星类"><a href="#星星类" class="headerlink" title="星星类"></a>星星类</h3><div class="table-container"><table><thead><tr><th style="text-align:center">符号</th><th style="text-align:center">HTML</th><th style="text-align:center">JS</th><th style="text-align:center">CSS</th><th style="text-align:center">符号</th><th style="text-align:center">HTML</th><th style="text-align:center">JS</th><th style="text-align:center">CSS</th></tr></thead><tbody><tr><td style="text-align:center">★</td><td style="text-align:center"><code>&amp;#9733</code></td><td style="text-align:center"><code>\u2605</code></td><td style="text-align:center"><code>\2605</code></td><td style="text-align:center">✭</td><td style="text-align:center"><code>&amp;#10029</code></td><td style="text-align:center"><code>\u272D</code></td><td style="text-align:center"><code>\272D</code></td></tr><tr><td style="text-align:center">✮</td><td style="text-align:center"><code>&amp;#10030</code></td><td style="text-align:center"><code>\u272E</code></td><td style="text-align:center"><code>\272E</code></td><td style="text-align:center">☆</td><td style="text-align:center"><code>&amp;#9734</code></td><td style="text-align:center"><code>\u2606</code></td><td style="text-align:center"><code>\2606</code></td></tr><tr><td style="text-align:center">✪</td><td style="text-align:center"><code>&amp;#10026</code></td><td style="text-align:center"><code>\u272A</code></td><td style="text-align:center"><code>\272A</code></td><td style="text-align:center">✡</td><td style="text-align:center"><code>&amp;#10017</code></td><td style="text-align:center"><code>\u2721</code></td><td style="text-align:center"><code>\2721</code></td></tr><tr><td style="text-align:center">✯</td><td style="text-align:center"><code>&amp;#10031</code></td><td style="text-align:center"><code>\u272F</code></td><td style="text-align:center"><code>\272F</code></td><td style="text-align:center">✵</td><td style="text-align:center"><code>&amp;#10037</code></td><td style="text-align:center"><code>\u2735</code></td><td style="text-align:center"><code>\2735</code></td></tr><tr><td style="text-align:center">✶</td><td style="text-align:center"><code>&amp;#10038</code></td><td style="text-align:center"><code>\u2736</code></td><td style="text-align:center"><code>\2736</code></td><td style="text-align:center">✸</td><td style="text-align:center"><code>&amp;#10040</code></td><td style="text-align:center"><code>\u2738</code></td><td style="text-align:center"><code>\2738</code></td></tr><tr><td style="text-align:center">✹</td><td style="text-align:center"><code>&amp;#10041</code></td><td style="text-align:center"><code>\u2739</code></td><td style="text-align:center"><code>\2739</code></td><td style="text-align:center">✺</td><td style="text-align:center"><code>&amp;#10042</code></td><td style="text-align:center"><code>\u273A</code></td><td style="text-align:center"><code>\273A</code></td></tr><tr><td style="text-align:center">✱</td><td style="text-align:center"><code>&amp;#10033</code></td><td style="text-align:center"><code>\u2731</code></td><td style="text-align:center"><code>\2731</code></td><td style="text-align:center">✲</td><td style="text-align:center"><code>&amp;#10034</code></td><td style="text-align:center"><code>\u2732</code></td><td style="text-align:center"><code>\2732</code></td></tr><tr><td style="text-align:center">✴</td><td style="text-align:center"><code>&amp;#10036</code></td><td style="text-align:center"><code>\u2734</code></td><td style="text-align:center"><code>\2734</code></td><td style="text-align:center">✳</td><td style="text-align:center"><code>&amp;#10035</code></td><td style="text-align:center"><code>\u2733</code></td><td style="text-align:center"><code>\2733</code></td></tr><tr><td style="text-align:center">✻</td><td style="text-align:center"><code>&amp;#10043</code></td><td style="text-align:center"><code>\u273B</code></td><td style="text-align:center"><code>\273B</code></td><td style="text-align:center">✽</td><td style="text-align:center"><code>&amp;#10045</code></td><td style="text-align:center"><code>\u273D</code></td><td style="text-align:center"><code>\273D</code></td></tr><tr><td style="text-align:center">❋</td><td style="text-align:center"><code>&amp;#10059</code></td><td style="text-align:center"><code>\u274B</code></td><td style="text-align:center"><code>\274B</code></td><td style="text-align:center">❆</td><td style="text-align:center"><code>&amp;#10054</code></td><td style="text-align:center"><code>\u2746</code></td><td style="text-align:center"><code>\2746</code></td></tr><tr><td style="text-align:center">❄</td><td style="text-align:center"><code>&amp;#10052</code></td><td style="text-align:center"><code>\u2744</code></td><td style="text-align:center"><code>\2744</code></td><td style="text-align:center">❅</td><td style="text-align:center"><code>&amp;#10053</code></td><td style="text-align:center"><code>\u2745</code></td><td style="text-align:center"><code>\2745</code></td></tr></tbody></table></div><h3 id="星座类"><a href="#星座类" class="headerlink" title="星座类"></a>星座类</h3><div class="table-container"><table><thead><tr><th style="text-align:center">符号</th><th style="text-align:center">HTML</th><th style="text-align:center">JS</th><th style="text-align:center">CSS</th><th style="text-align:center">符号</th><th style="text-align:center">HTML</th><th style="text-align:center">JS</th><th style="text-align:center">CSS</th></tr></thead><tbody><tr><td style="text-align:center">♈</td><td style="text-align:center"><code>&amp;#9800</code></td><td style="text-align:center"><code>\u2648</code></td><td style="text-align:center"><code>\2648</code></td><td style="text-align:center">♉</td><td style="text-align:center"><code>&amp;#9801</code></td><td style="text-align:center"><code>\u2649</code></td><td style="text-align:center"><code>\2649</code></td></tr><tr><td style="text-align:center">♊</td><td style="text-align:center"><code>&amp;#9802</code></td><td style="text-align:center"><code>\u264A</code></td><td style="text-align:center"><code>\264A</code></td><td style="text-align:center">♋</td><td style="text-align:center"><code>&amp;#9803</code></td><td style="text-align:center"><code>\u264B</code></td><td style="text-align:center"><code>\264B</code></td></tr><tr><td style="text-align:center">♌</td><td style="text-align:center"><code>&amp;#9804</code></td><td style="text-align:center"><code>\u264C</code></td><td style="text-align:center"><code>\264C</code></td><td style="text-align:center">♍</td><td style="text-align:center"><code>&amp;#9805</code></td><td style="text-align:center"><code>\u264D</code></td><td style="text-align:center"><code>\264D</code></td></tr><tr><td style="text-align:center">♎</td><td style="text-align:center"><code>&amp;#9806</code></td><td style="text-align:center"><code>\u264E</code></td><td style="text-align:center"><code>\264E</code></td><td style="text-align:center">♏</td><td style="text-align:center"><code>&amp;#9807</code></td><td style="text-align:center"><code>\u264F</code></td><td style="text-align:center"><code>\264F</code></td></tr><tr><td style="text-align:center">♐</td><td style="text-align:center"><code>&amp;#9808</code></td><td style="text-align:center"><code>\u2650</code></td><td style="text-align:center"><code>\2650</code></td><td style="text-align:center">♑</td><td style="text-align:center"><code>&amp;#9809</code></td><td style="text-align:center"><code>\u2651</code></td><td style="text-align:center"><code>\2651</code></td></tr><tr><td style="text-align:center">♒</td><td style="text-align:center"><code>&amp;#9810</code></td><td style="text-align:center"><code>\u2652</code></td><td style="text-align:center"><code>\2652</code></td><td style="text-align:center">♓</td><td style="text-align:center"><code>&amp;#9811</code></td><td style="text-align:center"><code>\u2653</code></td><td style="text-align:center"><code>\2653</code></td></tr></tbody></table></div><h3 id="国际象棋类"><a href="#国际象棋类" class="headerlink" title="国际象棋类"></a>国际象棋类</h3><div class="table-container"><table><thead><tr><th style="text-align:center">符号</th><th style="text-align:center">HTML</th><th style="text-align:center">JS</th><th style="text-align:center">CSS</th><th style="text-align:center">符号</th><th style="text-align:center">HTML</th><th style="text-align:center">JS</th><th style="text-align:center">CSS</th></tr></thead><tbody><tr><td style="text-align:center">♚</td><td style="text-align:center"><code>&amp;#9818</code></td><td style="text-align:center"><code>\u265A</code></td><td style="text-align:center"><code>\265A</code></td><td style="text-align:center">♛</td><td style="text-align:center"><code>&amp;#9819</code></td><td style="text-align:center"><code>\u265B</code></td><td style="text-align:center"><code>\265B</code></td></tr><tr><td style="text-align:center">♜</td><td style="text-align:center"><code>&amp;#9820</code></td><td style="text-align:center"><code>\u265C</code></td><td style="text-align:center"><code>\265C</code></td><td style="text-align:center">♝</td><td style="text-align:center"><code>&amp;#9821</code></td><td style="text-align:center"><code>\u265D</code></td><td style="text-align:center"><code>\265D</code></td></tr><tr><td style="text-align:center">♞</td><td style="text-align:center"><code>&amp;#9822</code></td><td style="text-align:center"><code>\u265E</code></td><td style="text-align:center"><code>\265E</code></td><td style="text-align:center">♟</td><td style="text-align:center"><code>&amp;#9823</code></td><td style="text-align:center"><code>\u265F</code></td><td style="text-align:center"><code>\265F</code></td></tr><tr><td style="text-align:center">♔</td><td style="text-align:center"><code>&amp;#9812</code></td><td style="text-align:center"><code>\u2654</code></td><td style="text-align:center"><code>\2654</code></td><td style="text-align:center">♕</td><td style="text-align:center"><code>&amp;#9813</code></td><td style="text-align:center"><code>\u2655</code></td><td style="text-align:center"><code>\2655</code></td></tr><tr><td style="text-align:center">♖</td><td style="text-align:center"><code>&amp;#9814</code></td><td style="text-align:center"><code>\u2656</code></td><td style="text-align:center"><code>\2656</code></td><td style="text-align:center">♗</td><td style="text-align:center"><code>&amp;#9815</code></td><td style="text-align:center"><code>\u2657</code></td><td style="text-align:center"><code>\2657</code></td></tr><tr><td style="text-align:center">♘</td><td style="text-align:center"><code>&amp;#9816</code></td><td style="text-align:center"><code>\u2658</code></td><td style="text-align:center"><code>\2658</code></td><td style="text-align:center">♙</td><td style="text-align:center"><code>&amp;#9817</code></td><td style="text-align:center"><code>\u2659</code></td><td style="text-align:center"><code>\2659</code></td></tr></tbody></table></div><h3 id="扑克牌类"><a href="#扑克牌类" class="headerlink" title="扑克牌类"></a>扑克牌类</h3><div class="table-container"><table><thead><tr><th style="text-align:center">符号</th><th style="text-align:center">HTML</th><th style="text-align:center">JS</th><th style="text-align:center">CSS</th><th style="text-align:center">符号</th><th style="text-align:center">HTML</th><th style="text-align:center">JS</th><th style="text-align:center">CSS</th></tr></thead><tbody><tr><td style="text-align:center">♠</td><td style="text-align:center"><code>&amp;#9824</code></td><td style="text-align:center"><code>\u2660</code></td><td style="text-align:center"><code>\2660</code></td><td style="text-align:center">♣</td><td style="text-align:center"><code>&amp;#9827</code></td><td style="text-align:center"><code>\u2663</code></td><td style="text-align:center"><code>\2663</code></td></tr><tr><td style="text-align:center">♥</td><td style="text-align:center"><code>&amp;#9829</code></td><td style="text-align:center"><code>\u2665</code></td><td style="text-align:center"><code>\2665</code></td><td style="text-align:center">♦</td><td style="text-align:center"><code>&amp;#9830</code></td><td style="text-align:center"><code>\u2666</code></td><td style="text-align:center"><code>\2666</code></td></tr><tr><td style="text-align:center">♤</td><td style="text-align:center"><code>&amp;#9828</code></td><td style="text-align:center"><code>\u2664</code></td><td style="text-align:center"><code>\2664</code></td><td style="text-align:center">♧</td><td style="text-align:center"><code>&amp;#9831</code></td><td style="text-align:center"><code>\u2667</code></td><td style="text-align:center"><code>\2667</code></td></tr><tr><td style="text-align:center">♡</td><td style="text-align:center"><code>&amp;#9825</code></td><td style="text-align:center"><code>\u2661</code></td><td style="text-align:center"><code>\2661</code></td><td style="text-align:center">♢</td><td style="text-align:center"><code>&amp;#9826</code></td><td style="text-align:center"><code>\u2662</code></td><td style="text-align:center"><code>\2662</code></td></tr></tbody></table></div><h3 id="希腊字母"><a href="#希腊字母" class="headerlink" title="希腊字母"></a>希腊字母</h3><div class="table-container"><table><thead><tr><th style="text-align:center">符号</th><th style="text-align:center">HTML</th><th style="text-align:center">JS</th><th style="text-align:center">CSS</th><th style="text-align:center">符号</th><th style="text-align:center">HTML</th><th style="text-align:center">JS</th><th style="text-align:center">CSS</th></tr></thead><tbody><tr><td style="text-align:center">Α</td><td style="text-align:center"><code>&amp;#913</code></td><td style="text-align:center"><code>\u0391</code></td><td style="text-align:center"><code>\0391</code></td><td style="text-align:center">Β</td><td style="text-align:center"><code>&amp;#914</code></td><td style="text-align:center"><code>\u0392</code></td><td style="text-align:center"><code>\0392</code></td></tr><tr><td style="text-align:center">Γ</td><td style="text-align:center"><code>&amp;#915</code></td><td style="text-align:center"><code>\u0393</code></td><td style="text-align:center"><code>\0393</code></td><td style="text-align:center">Δ</td><td style="text-align:center"><code>&amp;#916</code></td><td style="text-align:center"><code>\u0394</code></td><td style="text-align:center"><code>\0394</code></td></tr><tr><td style="text-align:center">Ε</td><td style="text-align:center"><code>&amp;#917</code></td><td style="text-align:center"><code>\u0395</code></td><td style="text-align:center"><code>\0395</code></td><td style="text-align:center">Ζ</td><td style="text-align:center"><code>&amp;#918</code></td><td style="text-align:center"><code>\u0396</code></td><td style="text-align:center"><code>\0396</code></td></tr><tr><td style="text-align:center">Η</td><td style="text-align:center"><code>&amp;#919</code></td><td style="text-align:center"><code>\u0397</code></td><td style="text-align:center"><code>\0397</code></td><td style="text-align:center">Θ</td><td style="text-align:center"><code>&amp;#920</code></td><td style="text-align:center"><code>\u0398</code></td><td style="text-align:center"><code>\0398</code></td></tr><tr><td style="text-align:center">Ι</td><td style="text-align:center"><code>&amp;#921</code></td><td style="text-align:center"><code>\u0399</code></td><td style="text-align:center"><code>\0399</code></td><td style="text-align:center">Κ</td><td style="text-align:center"><code>&amp;#922</code></td><td style="text-align:center"><code>\u039A</code></td><td style="text-align:center"><code>\039A</code></td></tr><tr><td style="text-align:center">Λ</td><td style="text-align:center"><code>&amp;#923</code></td><td style="text-align:center"><code>\u039B</code></td><td style="text-align:center"><code>\039B</code></td><td style="text-align:center">Μ</td><td style="text-align:center"><code>&amp;#924</code></td><td style="text-align:center"><code>\u039C</code></td><td style="text-align:center"><code>\039C</code></td></tr><tr><td style="text-align:center">Ν</td><td style="text-align:center"><code>&amp;#925</code></td><td style="text-align:center"><code>\u039D</code></td><td style="text-align:center"><code>\039D</code></td><td style="text-align:center">Ξ</td><td style="text-align:center"><code>&amp;#926</code></td><td style="text-align:center"><code>\u039E</code></td><td style="text-align:center"><code>\039E</code></td></tr><tr><td style="text-align:center">Ο</td><td style="text-align:center"><code>&amp;#927</code></td><td style="text-align:center"><code>\u039F</code></td><td style="text-align:center"><code>\039F</code></td><td style="text-align:center">Π</td><td style="text-align:center"><code>&amp;#928</code></td><td style="text-align:center"><code>\u03A0</code></td><td style="text-align:center"><code>\03A0</code></td></tr><tr><td style="text-align:center">Ρ</td><td style="text-align:center"><code>&amp;#929</code></td><td style="text-align:center"><code>\u03A1</code></td><td style="text-align:center"><code>\03A1</code></td><td style="text-align:center">Σ</td><td style="text-align:center"><code>&amp;#931</code></td><td style="text-align:center"><code>\u03A3</code></td><td style="text-align:center"><code>\03A3</code></td></tr><tr><td style="text-align:center">Τ</td><td style="text-align:center"><code>&amp;#932</code></td><td style="text-align:center"><code>\u03A4</code></td><td style="text-align:center"><code>\03A4</code></td><td style="text-align:center">Υ</td><td style="text-align:center"><code>&amp;#933</code></td><td style="text-align:center"><code>\u03A5</code></td><td style="text-align:center"><code>\03A5</code></td></tr><tr><td style="text-align:center">Φ</td><td style="text-align:center"><code>&amp;#934</code></td><td style="text-align:center"><code>\u03A6</code></td><td style="text-align:center"><code>\03A6</code></td><td style="text-align:center">Χ</td><td style="text-align:center"><code>&amp;#935</code></td><td style="text-align:center"><code>\u03A7</code></td><td style="text-align:center"><code>\03A7</code></td></tr><tr><td style="text-align:center">Ψ</td><td style="text-align:center"><code>&amp;#936</code></td><td style="text-align:center"><code>\u03A8</code></td><td style="text-align:center"><code>\03A8</code></td><td style="text-align:center">Ω</td><td style="text-align:center"><code>&amp;#937</code></td><td style="text-align:center"><code>\u03A9</code></td><td style="text-align:center"><code>\03A9</code></td></tr><tr><td style="text-align:center">α</td><td style="text-align:center"><code>&amp;alpha</code></td><td style="text-align:center"><code>&amp;#945</code></td><td style="text-align:center"><code>\u03B1</code></td><td style="text-align:center">β</td><td style="text-align:center"><code>&amp;beta</code></td><td style="text-align:center"><code>&amp;#946</code></td><td style="text-align:center"><code>\u03B2</code></td></tr><tr><td style="text-align:center">γ</td><td style="text-align:center"><code>&amp;gamma</code></td><td style="text-align:center"><code>&amp;#947</code></td><td style="text-align:center"><code>\u03B3</code></td><td style="text-align:center">δ</td><td style="text-align:center"><code>&amp;delta</code></td><td style="text-align:center"><code>&amp;#948</code></td><td style="text-align:center"><code>\u03B4</code></td></tr><tr><td style="text-align:center">ε</td><td style="text-align:center"><code>&amp;epsilon</code></td><td style="text-align:center"><code>&amp;#949</code></td><td style="text-align:center"><code>\u03B5</code></td><td style="text-align:center">ζ</td><td style="text-align:center"><code>&amp;zeta</code></td><td style="text-align:center"><code>&amp;#950</code></td><td style="text-align:center"><code>\u03B6</code></td></tr><tr><td style="text-align:center">η</td><td style="text-align:center"><code>&amp;eta</code></td><td style="text-align:center"><code>&amp;#951</code></td><td style="text-align:center"><code>\u03B7</code></td><td style="text-align:center">θ</td><td style="text-align:center"><code>&amp;theta</code></td><td style="text-align:center"><code>&amp;#952</code></td><td style="text-align:center"><code>\u03B8</code></td></tr><tr><td style="text-align:center">ι</td><td style="text-align:center"><code>&amp;iota</code></td><td style="text-align:center"><code>&amp;#953</code></td><td style="text-align:center"><code>\u03B9</code></td><td style="text-align:center">κ</td><td style="text-align:center"><code>&amp;kappa</code></td><td style="text-align:center"><code>&amp;#954</code></td><td style="text-align:center"><code>\u03BA</code></td></tr><tr><td style="text-align:center">λ</td><td style="text-align:center"><code>&amp;lambda</code></td><td style="text-align:center"><code>&amp;#923</code></td><td style="text-align:center"><code>\u039B</code></td><td style="text-align:center">μ</td><td style="text-align:center"><code>&amp;mu</code></td><td style="text-align:center"><code>&amp;#956</code></td><td style="text-align:center"><code>\u03BC</code></td></tr><tr><td style="text-align:center">ν</td><td style="text-align:center"><code>&amp;nu</code></td><td style="text-align:center"><code>&amp;#925</code></td><td style="text-align:center"><code>\u039D</code></td><td style="text-align:center">ξ</td><td style="text-align:center"><code>&amp;xi</code></td><td style="text-align:center"><code>&amp;#958</code></td><td style="text-align:center"><code>\u03BE</code></td></tr><tr><td style="text-align:center">ο</td><td style="text-align:center"><code>&amp;omicron</code></td><td style="text-align:center"><code>&amp;#959</code></td><td style="text-align:center"><code>\u03BF</code></td><td style="text-align:center">π</td><td style="text-align:center"><code>&amp;pi</code></td><td style="text-align:center"><code>&amp;#960</code></td><td style="text-align:center"><code>\u03C0</code></td></tr><tr><td style="text-align:center">ρ</td><td style="text-align:center"><code>&amp;rho</code></td><td style="text-align:center"><code>&amp;#961</code></td><td style="text-align:center"><code>\u03C1</code></td><td style="text-align:center">ς</td><td style="text-align:center"><code>&amp;sigmaf</code></td><td style="text-align:center"><code>&amp;#962</code></td><td style="text-align:center"><code>\u03C2</code></td></tr><tr><td style="text-align:center">σ</td><td style="text-align:center"><code>&amp;sigma</code></td><td style="text-align:center"><code>&amp;#963</code></td><td style="text-align:center"><code>\u03C3</code></td><td style="text-align:center">τ</td><td style="text-align:center"><code>&amp;tau</code></td><td style="text-align:center"><code>&amp;#964</code></td><td style="text-align:center"><code>\u03C4</code></td></tr><tr><td style="text-align:center">υ</td><td style="text-align:center"><code>&amp;upsilon</code></td><td style="text-align:center"><code>&amp;#965</code></td><td style="text-align:center"><code>\u03C5</code></td><td style="text-align:center">φ</td><td style="text-align:center"><code>&amp;phi</code></td><td style="text-align:center"><code>&amp;#966</code></td><td style="text-align:center"><code>\u03C6</code></td></tr><tr><td style="text-align:center">χ</td><td style="text-align:center"><code>&amp;chi</code></td><td style="text-align:center"><code>&amp;#967</code></td><td style="text-align:center"><code>\u03C7</code></td><td style="text-align:center">ψ</td><td style="text-align:center"><code>&amp;psi</code></td><td style="text-align:center"><code>&amp;#968</code></td><td style="text-align:center"><code>\u03C8</code></td></tr><tr><td style="text-align:center">ω</td><td style="text-align:center"><code>&amp;omega</code></td><td style="text-align:center"><code>&amp;#969</code></td><td style="text-align:center"><code>\u03C9</code></td><td style="text-align:center">ϑ</td><td style="text-align:center"><code>&amp;thetasym</code></td><td style="text-align:center"><code>&amp;#977</code></td><td style="text-align:center"><code>\u03D1</code></td></tr><tr><td style="text-align:center">ϒ</td><td style="text-align:center"><code>&amp;upsih</code></td><td style="text-align:center"><code>&amp;#978</code></td><td style="text-align:center"><code>\u03D2</code></td><td style="text-align:center">ϖ</td><td style="text-align:center"><code>&amp;piv</code></td><td style="text-align:center"><code>&amp;#982</code></td><td style="text-align:center"><code>\u03D6</code></td></tr></tbody></table></div><h3 id="十字类"><a href="#十字类" class="headerlink" title="十字类"></a>十字类</h3><div class="table-container"><table><thead><tr><th style="text-align:center">符号</th><th style="text-align:center">HTML</th><th style="text-align:center">JS</th><th style="text-align:center">CSS</th><th style="text-align:center">符号</th><th style="text-align:center">HTML</th><th style="text-align:center">JS</th><th style="text-align:center">CSS</th></tr></thead><tbody><tr><td style="text-align:center">☨</td><td style="text-align:center"><code>&amp;#9768</code></td><td style="text-align:center"><code>\u2628</code></td><td style="text-align:center"><code>\2628</code></td><td style="text-align:center">☩</td><td style="text-align:center"><code>&amp;#9769</code></td><td style="text-align:center"><code>\u2629</code></td><td style="text-align:center"><code>\2629</code></td></tr><tr><td style="text-align:center">✝</td><td style="text-align:center"><code>&amp;#10013</code></td><td style="text-align:center"><code>\u271D</code></td><td style="text-align:center"><code>\271D</code></td><td style="text-align:center">✞</td><td style="text-align:center"><code>&amp;#10014</code></td><td style="text-align:center"><code>\u271E</code></td><td style="text-align:center"><code>\271E</code></td></tr><tr><td style="text-align:center">✟</td><td style="text-align:center"><code>&amp;#10015</code></td><td style="text-align:center"><code>\u271F</code></td><td style="text-align:center"><code>\271F</code></td><td style="text-align:center">✠</td><td style="text-align:center"><code>&amp;#10016</code></td><td style="text-align:center"><code>\u2720</code></td><td style="text-align:center"><code>\2720</code></td></tr><tr><td style="text-align:center">✚</td><td style="text-align:center"><code>&amp;#10010</code></td><td style="text-align:center"><code>\u271A</code></td><td style="text-align:center"><code>\271A</code></td><td style="text-align:center">†</td><td style="text-align:center"><code>&amp;#8224</code></td><td style="text-align:center"><code>\u2020</code></td><td style="text-align:center"><code>\2020</code></td></tr><tr><td style="text-align:center">✢</td><td style="text-align:center"><code>&amp;#10018</code></td><td style="text-align:center"><code>\u2722</code></td><td style="text-align:center"><code>\2722</code></td><td style="text-align:center">✤</td><td style="text-align:center"><code>&amp;#10020</code></td><td style="text-align:center"><code>\u2724</code></td><td style="text-align:center"><code>\2724</code></td></tr><tr><td style="text-align:center">✣</td><td style="text-align:center"><code>&amp;#10019</code></td><td style="text-align:center"><code>\u2723</code></td><td style="text-align:center"><code>\2723</code></td><td style="text-align:center">✥</td><td style="text-align:center"><code>&amp;#10021</code></td><td style="text-align:center"><code>\u2725</code></td><td style="text-align:center"><code>\2725</code></td></tr></tbody></table></div><h3 id="法律符号"><a href="#法律符号" class="headerlink" title="法律符号"></a>法律符号</h3><div class="table-container"><table><thead><tr><th style="text-align:center">符号</th><th style="text-align:center">HTML</th><th style="text-align:center">JS</th><th style="text-align:center">CSS</th><th style="text-align:center">符号</th><th style="text-align:center">HTML</th><th style="text-align:center">JS</th><th style="text-align:center">CSS</th></tr></thead><tbody><tr><td style="text-align:center">®</td><td style="text-align:center"><code>&amp;#174</code></td><td style="text-align:center"><code>\u00AE</code></td><td style="text-align:center"><code>\00AE</code></td><td style="text-align:center">©</td><td style="text-align:center"><code>&amp;#169</code></td><td style="text-align:center"><code>\u00A9</code></td><td style="text-align:center"><code>\00A9</code></td></tr><tr><td style="text-align:center">℗</td><td style="text-align:center"><code>&amp;#8471</code></td><td style="text-align:center"><code>\u2117</code></td><td style="text-align:center"><code>\2117</code></td><td style="text-align:center">™</td><td style="text-align:center"><code>&amp;#153</code></td><td style="text-align:center"><code>\u0099</code></td><td style="text-align:center"><code>\0099</code></td></tr><tr><td style="text-align:center">℠</td><td style="text-align:center"><code>&amp;#8480</code></td><td style="text-align:center"><code>\u2120</code></td><td style="text-align:center"><code>\2120</code></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td></tr></tbody></table></div><h3 id="标点和符号"><a href="#标点和符号" class="headerlink" title="@标点和符号"></a>@标点和符号</h3><div class="table-container"><table><thead><tr><th style="text-align:center">符号</th><th style="text-align:center">HTML</th><th style="text-align:center">JS</th><th style="text-align:center">CSS</th><th style="text-align:center">符号</th><th style="text-align:center">HTML</th><th style="text-align:center">JS</th><th style="text-align:center">CSS</th></tr></thead><tbody><tr><td style="text-align:center">«</td><td style="text-align:center"><code>&amp;#171</code></td><td style="text-align:center"><code>\u00AB</code></td><td style="text-align:center"><code>\00AB</code></td><td style="text-align:center">»</td><td style="text-align:center"><code>&amp;#187</code></td><td style="text-align:center"><code>\u00BB</code></td><td style="text-align:center"><code>\00BB</code></td></tr><tr><td style="text-align:center">‹</td><td style="text-align:center"><code>&amp;#139</code></td><td style="text-align:center"><code>\u008B</code></td><td style="text-align:center"><code>\008B</code></td><td style="text-align:center">›</td><td style="text-align:center"><code>&amp;#155</code></td><td style="text-align:center"><code>\u009B</code></td><td style="text-align:center"><code>\009B</code></td></tr><tr><td style="text-align:center">“</td><td style="text-align:center"><code>&amp;#8220</code></td><td style="text-align:center"><code>\u201C</code></td><td style="text-align:center"><code>\201C</code></td><td style="text-align:center">”</td><td style="text-align:center"><code>&amp;#8221</code></td><td style="text-align:center"><code>\u201D</code></td><td style="text-align:center"><code>\201D</code></td></tr><tr><td style="text-align:center">‘</td><td style="text-align:center"><code>&amp;#8216</code></td><td style="text-align:center"><code>\u2018</code></td><td style="text-align:center"><code>\2018</code></td><td style="text-align:center">’</td><td style="text-align:center"><code>&amp;#8217</code></td><td style="text-align:center"><code>\u2019</code></td><td style="text-align:center"><code>\2019</code></td></tr><tr><td style="text-align:center">•</td><td style="text-align:center"><code>&amp;#8226</code></td><td style="text-align:center"><code>\u2022</code></td><td style="text-align:center"><code>\2022</code></td><td style="text-align:center">◦</td><td style="text-align:center"><code>&amp;#9702</code></td><td style="text-align:center"><code>\u25E6</code></td><td style="text-align:center"><code>\25E6</code></td></tr><tr><td style="text-align:center">¡</td><td style="text-align:center"><code>&amp;#161</code></td><td style="text-align:center"><code>\u00A1</code></td><td style="text-align:center"><code>\00A1</code></td><td style="text-align:center">¿</td><td style="text-align:center"><code>&amp;#191</code></td><td style="text-align:center"><code>\u00BF</code></td><td style="text-align:center"><code>\00BF</code></td></tr><tr><td style="text-align:center">℅</td><td style="text-align:center"><code>&amp;#8453</code></td><td style="text-align:center"><code>\u2105</code></td><td style="text-align:center"><code>\2105</code></td><td style="text-align:center">№</td><td style="text-align:center"><code>&amp;#8470</code></td><td style="text-align:center"><code>\u2116</code></td><td style="text-align:center"><code>\2116</code></td></tr><tr><td style="text-align:center">&amp;</td><td style="text-align:center"><code>&amp;#38</code></td><td style="text-align:center"><code>\u0026</code></td><td style="text-align:center"><code>\0026</code></td><td style="text-align:center">@</td><td style="text-align:center"><code>&amp;#64</code></td><td style="text-align:center"><code>\u0040</code></td><td style="text-align:center"><code>\0040</code></td></tr><tr><td style="text-align:center">℞</td><td style="text-align:center"><code>&amp;#8478</code></td><td style="text-align:center"><code>\u211E</code></td><td style="text-align:center"><code>\211E</code></td><td style="text-align:center">℃</td><td style="text-align:center"><code>&amp;#8451</code></td><td style="text-align:center"><code>\u2103</code></td><td style="text-align:center"><code>\2103</code></td></tr><tr><td style="text-align:center">℉</td><td style="text-align:center"><code>&amp;#8457</code></td><td style="text-align:center"><code>\u2109</code></td><td style="text-align:center"><code>\2109</code></td><td style="text-align:center">°</td><td style="text-align:center"><code>&amp;#176</code></td><td style="text-align:center"><code>\u00B0</code></td><td style="text-align:center"><code>\00B0</code></td></tr><tr><td style="text-align:center">\</td><td style="text-align:center"></td><td style="text-align:center"><code>&amp;#124</code></td><td style="text-align:center"><code>\u007C</code></td><td style="text-align:center"><code>\007C</code></td><td style="text-align:center">¦</td><td style="text-align:center"><code>&amp;#166</code></td><td style="text-align:center"><code>\u00A6</code></td><td><code>\00A6</code></td></tr><tr><td style="text-align:center">–</td><td style="text-align:center"><code>&amp;#8211</code></td><td style="text-align:center"><code>\u2013</code></td><td style="text-align:center"><code>\2013</code></td><td style="text-align:center">—</td><td style="text-align:center"><code>&amp;#8212</code></td><td style="text-align:center"><code>\u2014</code></td><td style="text-align:center"><code>\2014</code></td></tr><tr><td style="text-align:center">…</td><td style="text-align:center"><code>&amp;#8230</code></td><td style="text-align:center"><code>\u2026</code></td><td style="text-align:center"><code>\2026</code></td><td style="text-align:center">¶</td><td style="text-align:center"><code>&amp;#182</code></td><td style="text-align:center"><code>\u00B6</code></td><td style="text-align:center"><code>\00B6</code></td></tr><tr><td style="text-align:center">∼</td><td style="text-align:center"><code>&amp;#8764</code></td><td style="text-align:center"><code>\u223C</code></td><td style="text-align:center"><code>\223C</code></td><td style="text-align:center">≠</td><td style="text-align:center"><code>&amp;#8800</code></td><td style="text-align:center"><code>\u2260</code></td><td style="text-align:center"><code>\2260</code></td></tr></tbody></table></div><h3 id="其他符号"><a href="#其他符号" class="headerlink" title="其他符号"></a>其他符号</h3><div class="table-container"><table><thead><tr><th style="text-align:center">符号</th><th style="text-align:center">命名</th><th style="text-align:center">编码</th><th style="text-align:center">符号</th><th style="text-align:center">命名</th><th style="text-align:center">编码</th><th style="text-align:center">符号</th><th style="text-align:center">命名</th><th style="text-align:center">编码</th></tr></thead><tbody><tr><td style="text-align:center">Α</td><td style="text-align:center"><code>&amp;Alpha</code></td><td style="text-align:center"><code>&amp;#913</code></td><td style="text-align:center">Β</td><td style="text-align:center"><code>&amp;Beta</code></td><td style="text-align:center"><code>&amp;#914</code></td><td style="text-align:center">Γ</td><td style="text-align:center"><code>&amp;Gamma</code></td><td style="text-align:center"><code>&amp;#915</code></td></tr><tr><td style="text-align:center">Δ</td><td style="text-align:center"><code>&amp;Delta</code></td><td style="text-align:center"><code>&amp;#916</code></td><td style="text-align:center">Ε</td><td style="text-align:center"><code>&amp;Epsilon</code></td><td style="text-align:center"><code>&amp;#917</code></td><td style="text-align:center">Ζ</td><td style="text-align:center"><code>&amp;Zeta</code></td><td style="text-align:center"><code>&amp;#918</code></td></tr><tr><td style="text-align:center">Η</td><td style="text-align:center"><code>&amp;Eta</code></td><td style="text-align:center"><code>&amp;#919</code></td><td style="text-align:center">Θ</td><td style="text-align:center"><code>&amp;Theta</code></td><td style="text-align:center"><code>&amp;#920</code></td><td style="text-align:center">Ι</td><td style="text-align:center"><code>&amp;Iota</code></td><td style="text-align:center"><code>&amp;#921</code></td></tr><tr><td style="text-align:center">Κ</td><td style="text-align:center"><code>&amp;Kappa</code></td><td style="text-align:center"><code>&amp;#922</code></td><td style="text-align:center">Λ</td><td style="text-align:center"><code>&amp;Lambda</code></td><td style="text-align:center"><code>&amp;#923</code></td><td style="text-align:center">Μ</td><td style="text-align:center"><code>&amp;Mu</code></td><td style="text-align:center"><code>&amp;#924</code></td></tr><tr><td style="text-align:center">Ν</td><td style="text-align:center"><code>&amp;Nu</code></td><td style="text-align:center"><code>&amp;#925</code></td><td style="text-align:center">Ξ</td><td style="text-align:center"><code>&amp;Xi</code></td><td style="text-align:center"><code>&amp;#926</code></td><td style="text-align:center">Ο</td><td style="text-align:center"><code>&amp;Omicron</code></td><td style="text-align:center"><code>&amp;#927</code></td></tr><tr><td style="text-align:center">Π</td><td style="text-align:center"><code>&amp;Pi</code></td><td style="text-align:center"><code>&amp;#928</code></td><td style="text-align:center">Ρ</td><td style="text-align:center"><code>&amp;Rho</code></td><td style="text-align:center"><code>&amp;#929</code></td><td style="text-align:center">Σ</td><td style="text-align:center"><code>&amp;Sigma</code></td><td style="text-align:center"><code>&amp;#931</code></td></tr><tr><td style="text-align:center">Τ</td><td style="text-align:center"><code>&amp;Tau</code></td><td style="text-align:center"><code>&amp;#932</code></td><td style="text-align:center">Υ</td><td style="text-align:center"><code>&amp;Upsilon</code></td><td style="text-align:center"><code>&amp;#933</code></td><td style="text-align:center">Φ</td><td style="text-align:center"><code>&amp;Phi</code></td><td style="text-align:center"><code>&amp;#934</code></td></tr><tr><td style="text-align:center">Χ</td><td style="text-align:center"><code>&amp;Chi</code></td><td style="text-align:center"><code>&amp;#935</code></td><td style="text-align:center">Ψ</td><td style="text-align:center"><code>&amp;Psi</code></td><td style="text-align:center"><code>&amp;#936</code></td><td style="text-align:center">Ω</td><td style="text-align:center"><code>&amp;Omega</code></td><td style="text-align:center"><code>&amp;#937</code></td></tr><tr><td style="text-align:center">α</td><td style="text-align:center"><code>&amp;alpha</code></td><td style="text-align:center"><code>&amp;#945</code></td><td style="text-align:center">β</td><td style="text-align:center"><code>&amp;beta</code></td><td style="text-align:center"><code>&amp;#946</code></td><td style="text-align:center">γ</td><td style="text-align:center"><code>&amp;gamma</code></td><td style="text-align:center"><code>&amp;#947</code></td></tr><tr><td style="text-align:center">δ</td><td style="text-align:center"><code>&amp;delta</code></td><td style="text-align:center"><code>&amp;#948</code></td><td style="text-align:center">ε</td><td style="text-align:center"><code>&amp;epsilon</code></td><td style="text-align:center"><code>&amp;#949</code></td><td style="text-align:center">ζ</td><td style="text-align:center"><code>&amp;zeta</code></td><td style="text-align:center"><code>&amp;#950</code></td></tr><tr><td style="text-align:center">η</td><td style="text-align:center"><code>&amp;eta</code></td><td style="text-align:center"><code>&amp;#951</code></td><td style="text-align:center">θ</td><td style="text-align:center"><code>&amp;theta</code></td><td style="text-align:center"><code>&amp;#952</code></td><td style="text-align:center">ι</td><td style="text-align:center"><code>&amp;iota</code></td><td style="text-align:center"><code>&amp;#953</code></td></tr><tr><td style="text-align:center">κ</td><td style="text-align:center"><code>&amp;kappa</code></td><td style="text-align:center"><code>&amp;#954</code></td><td style="text-align:center">λ</td><td style="text-align:center"><code>&amp;lambda</code></td><td style="text-align:center"><code>&amp;#955</code></td><td style="text-align:center">μ</td><td style="text-align:center"><code>&amp;mu</code></td><td style="text-align:center"><code>&amp;#956</code></td></tr><tr><td style="text-align:center">ν</td><td style="text-align:center"><code>&amp;nu</code></td><td style="text-align:center"><code>&amp;#957</code></td><td style="text-align:center">ξ</td><td style="text-align:center"><code>&amp;xi</code></td><td style="text-align:center"><code>&amp;#958</code></td><td style="text-align:center">ο</td><td style="text-align:center"><code>&amp;omicron</code></td><td style="text-align:center"><code>&amp;#959</code></td></tr><tr><td style="text-align:center">π</td><td style="text-align:center"><code>&amp;pi</code></td><td style="text-align:center"><code>&amp;#960</code></td><td style="text-align:center">ρ</td><td style="text-align:center"><code>&amp;rho</code></td><td style="text-align:center"><code>&amp;#961</code></td><td style="text-align:center">ς</td><td style="text-align:center"><code>&amp;sigmaf</code></td><td style="text-align:center"><code>&amp;#962</code></td></tr><tr><td style="text-align:center">σ</td><td style="text-align:center"><code>&amp;sigma</code></td><td style="text-align:center"><code>&amp;#963</code></td><td style="text-align:center">τ</td><td style="text-align:center"><code>&amp;tau</code></td><td style="text-align:center"><code>&amp;#964</code></td><td style="text-align:center">υ</td><td style="text-align:center"><code>&amp;upsilon</code></td><td style="text-align:center"><code>&amp;#965</code></td></tr><tr><td style="text-align:center">φ</td><td style="text-align:center"><code>&amp;phi</code></td><td style="text-align:center"><code>&amp;#966</code></td><td style="text-align:center">χ</td><td style="text-align:center"><code>&amp;chi</code></td><td style="text-align:center"><code>&amp;#967</code></td><td style="text-align:center">ψ</td><td style="text-align:center"><code>&amp;psi</code></td><td style="text-align:center"><code>&amp;#968</code></td></tr><tr><td style="text-align:center">ω</td><td style="text-align:center"><code>&amp;omega</code></td><td style="text-align:center"><code>&amp;#969</code></td><td style="text-align:center">ϑ</td><td style="text-align:center"><code>&amp;thetasym</code></td><td style="text-align:center"><code>&amp;#977</code></td><td style="text-align:center">ϒ</td><td style="text-align:center"><code>&amp;upsih</code></td><td style="text-align:center"><code>&amp;#978</code></td></tr><tr><td style="text-align:center">ϖ</td><td style="text-align:center"><code>&amp;piv</code></td><td style="text-align:center"><code>&amp;#982</code></td><td style="text-align:center">•</td><td style="text-align:center"><code>&amp;bull</code></td><td style="text-align:center"><code>&amp;#8226</code></td><td style="text-align:center">…</td><td style="text-align:center"><code>&amp;hellip</code></td><td style="text-align:center"><code>&amp;#8230</code></td></tr><tr><td style="text-align:center">′</td><td style="text-align:center"><code>&amp;prime</code></td><td style="text-align:center"><code>&amp;#8242</code></td><td style="text-align:center">″</td><td style="text-align:center"><code>&amp;Prime</code></td><td style="text-align:center"><code>&amp;#8243</code></td><td style="text-align:center">‾</td><td style="text-align:center"><code>&amp;oline</code></td><td style="text-align:center"><code>&amp;#8254</code></td></tr><tr><td style="text-align:center">⁄</td><td style="text-align:center"><code>&amp;frasl</code></td><td style="text-align:center"><code>&amp;#8260</code></td><td style="text-align:center">℘</td><td style="text-align:center"><code>&amp;weierp</code></td><td style="text-align:center"><code>&amp;#8472</code></td><td style="text-align:center">ℑ</td><td style="text-align:center"><code>&amp;image</code></td><td style="text-align:center"><code>&amp;#8465</code></td></tr><tr><td style="text-align:center">ℜ</td><td style="text-align:center"><code>&amp;real</code></td><td style="text-align:center"><code>&amp;#8476</code></td><td style="text-align:center">™</td><td style="text-align:center"><code>&amp;trade</code></td><td style="text-align:center"><code>&amp;#8482</code></td><td style="text-align:center">ℵ</td><td style="text-align:center"><code>&amp;alefsym</code></td><td style="text-align:center"><code>&amp;#8501</code></td></tr><tr><td style="text-align:center">←</td><td style="text-align:center"><code>&amp;larr</code></td><td style="text-align:center"><code>&amp;#8592</code></td><td style="text-align:center">↑</td><td style="text-align:center"><code>&amp;uarr</code></td><td style="text-align:center"><code>&amp;#8593</code></td><td style="text-align:center">→</td><td style="text-align:center"><code>&amp;rarr</code></td><td style="text-align:center"><code>&amp;#8594</code></td></tr><tr><td style="text-align:center">↓</td><td style="text-align:center"><code>&amp;darr</code></td><td style="text-align:center"><code>&amp;#8595</code></td><td style="text-align:center">↔</td><td style="text-align:center"><code>&amp;harr</code></td><td style="text-align:center"><code>&amp;#8596</code></td><td style="text-align:center">↵</td><td style="text-align:center"><code>&amp;crarr</code></td><td style="text-align:center"><code>&amp;#8629</code></td></tr><tr><td style="text-align:center">⇐</td><td style="text-align:center"><code>&amp;lArr</code></td><td style="text-align:center"><code>&amp;#8656</code></td><td style="text-align:center">⇑</td><td style="text-align:center"><code>&amp;uArr</code></td><td style="text-align:center"><code>&amp;#8657</code></td><td style="text-align:center">⇒</td><td style="text-align:center"><code>&amp;rArr</code></td><td style="text-align:center"><code>&amp;#8658</code></td></tr><tr><td style="text-align:center">⇓</td><td style="text-align:center"><code>&amp;dArr</code></td><td style="text-align:center"><code>&amp;#8659</code></td><td style="text-align:center">⇔</td><td style="text-align:center"><code>&amp;hArr</code></td><td style="text-align:center"><code>&amp;#8660</code></td><td style="text-align:center">∀</td><td style="text-align:center"><code>&amp;forall</code></td><td style="text-align:center"><code>&amp;#8704</code></td></tr><tr><td style="text-align:center">∂</td><td style="text-align:center"><code>&amp;part</code></td><td style="text-align:center"><code>&amp;#8706</code></td><td style="text-align:center">∃</td><td style="text-align:center"><code>&amp;exist</code></td><td style="text-align:center"><code>&amp;#8707</code></td><td style="text-align:center">∅</td><td style="text-align:center"><code>&amp;empty</code></td><td style="text-align:center"><code>&amp;#8709</code></td></tr><tr><td style="text-align:center">∇</td><td style="text-align:center"><code>&amp;nabla</code></td><td style="text-align:center"><code>&amp;#8711</code></td><td style="text-align:center">∈</td><td style="text-align:center"><code>&amp;isin</code></td><td style="text-align:center"><code>&amp;#8712</code></td><td style="text-align:center">∉</td><td style="text-align:center"><code>&amp;notin</code></td><td style="text-align:center"><code>&amp;#8713</code></td></tr><tr><td style="text-align:center">∋</td><td style="text-align:center"><code>&amp;ni</code></td><td style="text-align:center"><code>&amp;#8715</code></td><td style="text-align:center">∏</td><td style="text-align:center"><code>&amp;prod</code></td><td style="text-align:center"><code>&amp;#8719</code></td><td style="text-align:center">∑</td><td style="text-align:center"><code>&amp;sum</code></td><td style="text-align:center"><code>&amp;#8722</code></td></tr><tr><td style="text-align:center">−</td><td style="text-align:center"><code>&amp;minus</code></td><td style="text-align:center"><code>&amp;#8722</code></td><td style="text-align:center">∗</td><td style="text-align:center"><code>&amp;lowast</code></td><td style="text-align:center"><code>&amp;#8727</code></td><td style="text-align:center">√</td><td style="text-align:center"><code>&amp;radic</code></td><td style="text-align:center"><code>&amp;#8730</code></td></tr><tr><td style="text-align:center">∝</td><td style="text-align:center"><code>&amp;prop</code></td><td style="text-align:center"><code>&amp;#8733</code></td><td style="text-align:center">∞</td><td style="text-align:center"><code>&amp;infin</code></td><td style="text-align:center"><code>&amp;#8734</code></td><td style="text-align:center">∠</td><td style="text-align:center"><code>&amp;ang</code></td><td style="text-align:center"><code>&amp;#8736</code></td></tr><tr><td style="text-align:center">∧</td><td style="text-align:center"><code>&amp;and</code></td><td style="text-align:center"><code>&amp;#8869</code></td><td style="text-align:center">∨</td><td style="text-align:center"><code>&amp;or</code></td><td style="text-align:center"><code>&amp;#8870</code></td><td style="text-align:center">∩</td><td style="text-align:center"><code>&amp;cap</code></td><td style="text-align:center"><code>&amp;#8745</code></td></tr><tr><td style="text-align:center">∪</td><td style="text-align:center"><code>&amp;cup</code></td><td style="text-align:center"><code>&amp;#8746</code></td><td style="text-align:center">∫</td><td style="text-align:center"><code>&amp;int</code></td><td style="text-align:center"><code>&amp;#8747</code></td><td style="text-align:center">∴</td><td style="text-align:center"><code>&amp;there4</code></td><td style="text-align:center"><code>&amp;#8756</code></td></tr><tr><td style="text-align:center">∼</td><td style="text-align:center"><code>&amp;sim</code></td><td style="text-align:center"><code>&amp;#8764</code></td><td style="text-align:center">≅</td><td style="text-align:center"><code>&amp;cong</code></td><td style="text-align:center"><code>&amp;#8773</code></td><td style="text-align:center">≈</td><td style="text-align:center"><code>&amp;asymp</code></td><td style="text-align:center"><code>&amp;#8773</code></td></tr><tr><td style="text-align:center">≠</td><td style="text-align:center"><code>&amp;ne</code></td><td style="text-align:center"><code>&amp;#8800</code></td><td style="text-align:center">≡</td><td style="text-align:center"><code>&amp;equiv</code></td><td style="text-align:center"><code>&amp;#8801</code></td><td style="text-align:center">≤</td><td style="text-align:center"><code>&amp;le</code></td><td style="text-align:center"><code>&amp;#8804</code></td></tr><tr><td style="text-align:center">≥</td><td style="text-align:center"><code>&amp;ge</code></td><td style="text-align:center"><code>&amp;#8805</code></td><td style="text-align:center">⊂</td><td style="text-align:center"><code>&amp;sub</code></td><td style="text-align:center"><code>&amp;#8834</code></td><td style="text-align:center">⊃</td><td style="text-align:center"><code>&amp;sup</code></td><td style="text-align:center"><code>&amp;#8835</code></td></tr><tr><td style="text-align:center">⊄</td><td style="text-align:center"><code>&amp;nsub</code></td><td style="text-align:center"><code>&amp;#8836</code></td><td style="text-align:center">⊆</td><td style="text-align:center"><code>&amp;sube</code></td><td style="text-align:center"><code>&amp;#8838</code></td><td style="text-align:center">⊇</td><td style="text-align:center"><code>&amp;supe</code></td><td style="text-align:center"><code>&amp;#8839</code></td></tr><tr><td style="text-align:center">⊕</td><td style="text-align:center"><code>&amp;oplus</code></td><td style="text-align:center"><code>&amp;#8853</code></td><td style="text-align:center">⊗</td><td style="text-align:center"><code>&amp;otimes</code></td><td style="text-align:center"><code>&amp;#8855</code></td><td style="text-align:center">⊥</td><td style="text-align:center"><code>&amp;perp</code></td><td style="text-align:center"><code>&amp;#8869</code></td></tr><tr><td style="text-align:center">⋅</td><td style="text-align:center"><code>&amp;sdot</code></td><td style="text-align:center"><code>&amp;#8901</code></td><td style="text-align:center">⌈</td><td style="text-align:center"><code>&amp;lceil</code></td><td style="text-align:center"><code>&amp;#8968</code></td><td style="text-align:center">⌉</td><td style="text-align:center"><code>&amp;rceil</code></td><td style="text-align:center"><code>&amp;#8969</code></td></tr><tr><td style="text-align:center">⌊</td><td style="text-align:center"><code>&amp;lfloor</code></td><td style="text-align:center"><code>&amp;#8970</code></td><td style="text-align:center">⌋</td><td style="text-align:center"><code>&amp;rfloor</code></td><td style="text-align:center"><code>&amp;#8971</code></td><td style="text-align:center">◊</td><td style="text-align:center"><code>&amp;loz</code></td><td style="text-align:center"><code>&amp;#9674</code></td></tr><tr><td style="text-align:center">♠</td><td style="text-align:center"><code>&amp;spades</code></td><td style="text-align:center"><code>&amp;#9824</code></td><td style="text-align:center">♣</td><td style="text-align:center"><code>&amp;clubs</code></td><td style="text-align:center"><code>&amp;#9827</code></td><td style="text-align:center">♥</td><td style="text-align:center"><code>&amp;hearts</code></td><td style="text-align:center"><code>&amp;#9829</code></td></tr><tr><td style="text-align:center">♦</td><td style="text-align:center"><code>&amp;diams</code></td><td style="text-align:center"><code>&amp;#9830</code></td><td style="text-align:center"></td><td style="text-align:center"><code>&amp;nbsp</code></td><td style="text-align:center"><code>&amp;#160</code></td><td style="text-align:center">¡</td><td style="text-align:center"><code>&amp;iexcl</code></td><td style="text-align:center"><code>&amp;#161</code></td></tr><tr><td style="text-align:center">¢</td><td style="text-align:center"><code>&amp;cent</code></td><td style="text-align:center"><code>&amp;#162</code></td><td style="text-align:center">£</td><td style="text-align:center"><code>&amp;pound</code></td><td style="text-align:center"><code>&amp;#163</code></td><td style="text-align:center">¤</td><td style="text-align:center"><code>&amp;curren</code></td><td style="text-align:center"><code>&amp;#164</code></td></tr><tr><td style="text-align:center">¥</td><td style="text-align:center"><code>&amp;yen</code></td><td style="text-align:center"><code>&amp;#165</code></td><td style="text-align:center">¦</td><td style="text-align:center"><code>&amp;brvbar</code></td><td style="text-align:center"><code>&amp;#166</code></td><td style="text-align:center">§</td><td style="text-align:center"><code>&amp;sect</code></td><td style="text-align:center"><code>&amp;#167</code></td></tr><tr><td style="text-align:center">¨</td><td style="text-align:center"><code>&amp;uml</code></td><td style="text-align:center"><code>&amp;#168</code></td><td style="text-align:center">©</td><td style="text-align:center"><code>&amp;copy</code></td><td style="text-align:center"><code>&amp;#169</code></td><td style="text-align:center">ª</td><td style="text-align:center"><code>&amp;ordf</code></td><td style="text-align:center"><code>&amp;#170</code></td></tr><tr><td style="text-align:center">«</td><td style="text-align:center"><code>&amp;laquo</code></td><td style="text-align:center"><code>&amp;#171</code></td><td style="text-align:center">¬</td><td style="text-align:center"><code>&amp;not</code></td><td style="text-align:center"><code>&amp;#172</code></td><td style="text-align:center">space</td><td style="text-align:center"><code>&amp;shy</code></td><td style="text-align:center"><code>&amp;#173</code></td></tr><tr><td style="text-align:center">®</td><td style="text-align:center"><code>&amp;reg</code></td><td style="text-align:center"><code>&amp;#174</code></td><td style="text-align:center">¯</td><td style="text-align:center"><code>&amp;macr</code></td><td style="text-align:center"><code>&amp;#175</code></td><td style="text-align:center">°</td><td style="text-align:center"><code>&amp;deg</code></td><td style="text-align:center"><code>&amp;#176</code></td></tr><tr><td style="text-align:center">±</td><td style="text-align:center"><code>&amp;plusmn</code></td><td style="text-align:center"><code>&amp;#177</code></td><td style="text-align:center">²</td><td style="text-align:center"><code>&amp;sup2</code></td><td style="text-align:center"><code>&amp;#178</code></td><td style="text-align:center">³</td><td style="text-align:center"><code>&amp;sup3</code></td><td style="text-align:center"><code>&amp;#179</code></td></tr><tr><td style="text-align:center">´</td><td style="text-align:center"><code>&amp;acute</code></td><td style="text-align:center"><code>&amp;#180</code></td><td style="text-align:center">µ</td><td style="text-align:center"><code>&amp;micro</code></td><td style="text-align:center"><code>&amp;#181</code></td><td style="text-align:center">“</td><td style="text-align:center"><code>&amp;quot</code></td><td style="text-align:center"><code>&amp;#34</code></td></tr><tr><td style="text-align:center">&lt;</td><td style="text-align:center"><code>&amp;lt</code></td><td style="text-align:center"><code>&amp;#60</code></td><td style="text-align:center">&gt;</td><td style="text-align:center"><code>&amp;gt</code></td><td style="text-align:center"><code>&amp;#62</code></td><td style="text-align:center">‘</td><td style="text-align:center"></td><td style="text-align:center"><code>&amp;#39</code></td></tr></tbody></table></div>]]></content>
      
      
      <categories>
          
          <category> computer science </category>
          
      </categories>
      
      
        <tags>
            
            <tag> html </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Shut Down Windows</title>
      <link href="/2019/10/19/Shut-Down-Windows/"/>
      <url>/2019/10/19/Shut-Down-Windows/</url>
      
        <content type="html"><![CDATA[<p>现在的生活离不开电脑，很多时候我们都需要电脑定时关机，笔者也不例外，对于懂 DOS 命令的人来说直接使用 <code>shutdown</code> 命令就可以解决这个问题，但是每次输入这个命令有点烦，所以笔者为了方便写了一个简易的自动关机的程序，现分享出来，内容比较简单，其实就是用了 DOS 命令。</p><p>界面没有进行美化，有点丑，如果你觉得不好看的话可以自己写一个好看的界面，有什么问题欢迎到评论区留言。</p><h2 id="代码展示"><a href="#代码展示" class="headerlink" title="代码展示"></a>代码展示</h2><p>主要代码如下<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt; </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;windows.h&gt; </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">print</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"  ------- 定时关机程序 -------\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"  +  1   定时关闭计算机      +\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"  +  2   立即关闭计算机      +\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"  +  3   注销计算机          +\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"  +  4   取消关机计划        +\n"</span>); </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"  +  0   退出系统            +\n"</span>); </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"  ----------------------------\n"</span>); </span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Set terminal properties</span></span><br><span class="line">system(<span class="string">"color f3"</span>);</span><br><span class="line">system(<span class="string">"定时关机程序"</span>);</span><br><span class="line">system(<span class="string">"mode con cols=32 lines=24"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// display system time</span></span><br><span class="line"><span class="keyword">time_t</span> tm = time(<span class="number">0</span>); </span><br><span class="line"><span class="keyword">char</span> temp[<span class="number">64</span>]; </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>); </span><br><span class="line">strftime(temp,<span class="keyword">sizeof</span>(temp),<span class="string">" %Y/%m/%d %X %A \n"</span>,localtime(&amp;tm)); </span><br><span class="line"><span class="built_in">puts</span>(temp); </span><br><span class="line"></span><br><span class="line"><span class="comment">// shutdown</span></span><br><span class="line"><span class="keyword">char</span> cmd[<span class="number">30</span>]=<span class="string">"shutdown -s -t "</span>;</span><br><span class="line"><span class="keyword">char</span> t[<span class="number">4</span>]=<span class="string">"0"</span>;</span><br><span class="line">print();</span><br><span class="line"><span class="keyword">int</span> c,num; </span><br><span class="line"><span class="keyword">float</span> tmp;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">" 请选择功能类型："</span>); </span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;c);</span><br><span class="line"><span class="keyword">switch</span>(c)&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">" 您想在多少小时后自动关机："</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%f"</span>,&amp;tmp);</span><br><span class="line">num=tmp*<span class="number">60</span>*<span class="number">60</span>;</span><br><span class="line">itoa(num,t,<span class="number">10</span>);</span><br><span class="line">system(<span class="built_in">strcat</span>(cmd,t));</span><br><span class="line">tm=tm+num; </span><br><span class="line"><span class="comment">// Operation result promptness</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>); </span><br><span class="line">strftime(temp,<span class="keyword">sizeof</span>(temp),<span class="string">" 您的电脑将在 %X 关机 \n"</span>,localtime(&amp;tm)); </span><br><span class="line"><span class="built_in">puts</span>(temp); </span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:system(<span class="string">"shutdown -p"</span>);<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:system(<span class="string">"shutdown -l"</span>);<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:system(<span class="string">"shutdown -a"</span>);<span class="keyword">break</span>; </span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:<span class="built_in">printf</span>(<span class="string">"Error!\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line">system(<span class="string">"pause"</span>);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="下载链接"><a href="#下载链接" class="headerlink" title="下载链接"></a>下载链接</h2><p>双击 <em>shutdown.ext</em>，运行如下图，选择你需要的功能，按照提示输入 ，然后 enter 就行<br><img src="shutdown.png" alt="shutdown"><br>如果想下载编译之后的程序，请点击 <strong><a href="shutdown.zip">shutdown.exe</a></strong> 下载，得到 <strong>shutdown.zip</strong> 文件，解压之后双击 <strong>shutdown.exe</strong> 即可运行。</p><h2 id="Shutdown命令"><a href="#Shutdown命令" class="headerlink" title="Shutdown命令"></a>Shutdown命令</h2><p>命令：<code>Shutdown</code></p><p>作用：允许您关闭或重新启动本地或远程计算机。如果没有使用参数，<code>shutdown</code> 将注销当前用户。</p><p>语法：<code>shutdown [{-l|-s|-r|-a}] [-f] [-m [\\ComputerName]] [-t xx] [-c &quot;message&quot;] [-d[u][p]:xx:yy]</code></p><p>参数：</p><ul><li><p><code>-l</code><br>注销当前用户，这是默认设置。-m ComputerName 优先。</p></li><li><p><code>-s</code><br>关闭本地计算机。</p></li><li><p><code>-r</code><br>关闭之后重新启动。</p></li><li><p><code>-a</code><br>中止关闭。除了 -l 和 ComputerName 外，系统将忽略其它参数。在超时期间，您只可以使用 -a。</p></li><li><p><code>-f</code><br>强制运行要关闭的应用程序。</p></li><li><p><code>-m [\\ComputerName]</code><br>指定要关闭的计算机。</p></li><li><p><code>-t xx</code><br>将用于系统关闭的定时器设置为 xx 秒。默认值是 20 秒。</p></li><li><p><code>-c &quot;message&quot;</code><br>指定将在“系统关闭”窗口中的“消息”区域显示的消息。最多可以使用 127 个字符。引号中必须包含消息。</p></li><li><p><code>-d [u][p]:xx:yy</code><br>列出系统关闭的原因代码。下表将列出不同的值。</p></li><li><p><code>/?</code><br>在命令提示符显示帮助。</p></li></ul><p>其中：<code>u</code>为指定用户代码；<code>p</code>为指定已计划的关闭代码；<code>xx</code>为指定主要原因代码 (0-255)；<code>yy</code>为指定次要原因代码 (0-65536)。</p><blockquote><p>一旦指定了主要和次要原因代码，您必须首先为计划使用某种特定原因的每个计算机定义那些原因代码。如果目标机器上没有定义原因代码，则事件查看器无法记录正确的原因文本。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> application </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shutdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mathjax Tutorial</title>
      <link href="/2019/10/14/Mathjax-Tutorial/"/>
      <url>/2019/10/14/Mathjax-Tutorial/</url>
      
        <content type="html"><![CDATA[<p>MathJax™ uses CSS with web fonts or SVG, instead of bitmap images or Flash, so equations scale with surrounding text at all zoom levels.</p><p>MathJax is highly modular on input and output. Use MathML, TeX, and ASCIImath as input and produce HTML+CSS, SVG, or MathML as output.</p><p>MathJax works with screenreaders &amp; provides expression zoom and interactive exploration. You also can copy equations into Office, LaTeX, wikis, and other software.</p>]]></content>
      
      
      <categories>
          
          <category> computer science </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> mathjax </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo Configuration</title>
      <link href="/2019/10/14/Hexo-Configuration/"/>
      <url>/2019/10/14/Hexo-Configuration/</url>
      
        <content type="html"><![CDATA[<p>Incredible generating speed powered by Node.js. Hundreds of files take only seconds to build.</p><p>All features of GitHub Flavored Markdown are supported, including most Octopress plugins.</p><p>You only need one command to deploy your site to GitHub Pages, Heroku or other platforms.</p><p>Features powerful APIs for limitless extensibility. Various plugins are available to support most template engines (EJS, Pug, Nunjucks, and many others). Easily integrate with existing NPM packages (Babel, PostCSS, Less/Sass, etc).</p><h2 id="Mathjax"><a href="#Mathjax" class="headerlink" title="Mathjax"></a>Mathjax</h2><p>hexo 默认的渲染器是 marked，并不支持 mathjax。kramed 是在 marked 基础上修改的，支持了 mathjax。你的 hexo 工程目录下的 node_modules 中可以找到对应的渲染器文件夹。同时在你的工程目录下用以下命令安装 kramed。另外补充一个 Next 配置中推荐的渲染器 hexo-renderer-pandoc，功能很强大不仅可以渲染 markdown，还支持 textile、 reStructedText 等许多其他格式</p><p>卸载 marked<br><code>npm uninstall hexo-renderer-marked --save</code></p><p>安装 kramed<br><code>npm install hexo-renderer-kramed --save</code></p><p>如果你安装了 hexo-math 包，卸载再安装 hexo-renderer-mathjax 包<br><code>npm uninstall hexo-math --save</code></p><p>安装 mathjax<br><code>npm install hexo-renderer-mathjax --save</code></p><p>更新 mathjax 的 CDN 链接，打开 <code>node_modules/hexo-renderer-mathjax/mathjax.html</code>, 修改 <code>&lt;scripts&gt;</code> 标签<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.6/MathJax.js?config=TeX-MML-AM_CHTML"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h2 id="Valine"><a href="#Valine" class="headerlink" title="Valine"></a>Valine</h2><p>Valine 诞生于2017年8月7日，是一款基于LeanCloud的快速、简洁且高效的无后端评论系统。理论上支持但不限于静态博客，目前已有Hexo、Jekyll、Typecho、Hugo、Ghost 等博客程序在使用Valine。</p><p>valine 基于 LeanCloud，使用的话需要通过支付宝实名认证，还要上传 面部照片，需要的信息太多，所以笔者没有注册，故 valine 的使用方法这里就不多介绍了，需要使用的话点击 <a href="https://valine.js.org" target="_blank" rel="noopener">valine</a> 访问 valine 官网按照文档使用。</p><h2 id="Gitment"><a href="#Gitment" class="headerlink" title="Gitment"></a>Gitment</h2><p>访问 <a href="https://github.com/settings/applications/new" target="_blank" rel="noopener">New OAuth App</a> 注册新的 OAuth 应用程序<br>获得 <code>Client ID</code> 和 <code>Client Secret</code></p><p>修改主题模版<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"blog_comments"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"https://imsun.github.io/gitment/style/default.css"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://imsun.github.io/gitment/dist/gitment.browser.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript"><span class="keyword">const</span> gitment = <span class="keyword">new</span> Gitment(&#123;</span></span><br><span class="line"><span class="actionscript">    id: <span class="string">'&lt;%= page.date %&gt;'</span>, <span class="comment">// optional</span></span></span><br><span class="line"><span class="actionscript">    owner: <span class="string">'dusign'</span>,</span></span><br><span class="line"><span class="actionscript">    repo: <span class="string">'comments'</span>,</span></span><br><span class="line">    oauth: &#123;</span><br><span class="line"><span class="actionscript">      client_id: <span class="string">'14d5194dbf45604a7488'</span>,</span></span><br><span class="line"><span class="actionscript">      client_secret: <span class="string">'b85cb293d90c4ad7aec36fc4fb6aac7e4922b3cc'</span>,</span></span><br><span class="line">    &#125;,</span><br><span class="line"><span class="actionscript">    <span class="comment">// ...</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// For more available options, check out the documentation below</span></span></span><br><span class="line">  &#125;)</span><br><span class="line">  </span><br><span class="line"><span class="actionscript">  gitment.render(<span class="string">'blog_comments'</span>)</span></span><br><span class="line"><span class="actionscript">  <span class="comment">// or</span></span></span><br><span class="line"><span class="actionscript">  <span class="comment">// gitment.render(document.getElementById('comments'))</span></span></span><br><span class="line"><span class="actionscript">  <span class="comment">// or</span></span></span><br><span class="line"><span class="actionscript">  <span class="comment">// document.body.appendChild(gitment.render())</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>配置需要评论的页面，博客页面为 <code>post.ejs</code>, 需要评论的地方加<br><code>&lt;%- partial(&#39;_partial/comment&#39;) %&gt;</code></p><p>连接服务器上的 js 和 css 不太安全，有时候如果别人的服务器出错会导致你的页面出错，所以最好的办法是将 css 和 js 文件下载下来，本地引入，以 mac 系统为例，使用 wget 下载<br><code>wget https://imsun.github.io/gitment/style/default.css</code><br><code>wget https://imsun.github.io/gitment/dist/gitment.browser.js</code><br>下载之后放在 <code>Blog/themes/source/css</code> 和 <code>Blog/themes/source/js</code> 文件夹中，并改名为<code>gitment.css</code> 和 <code>gitment.js</code></p><p>改名避免和本地文件冲突，本地引入代码如下<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"/css/gitment.css"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"/js/gitment.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>登录报错 [object XMLHttpRequestProgressEvent], 改用如下引入<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/gh/theme-next/theme-next-gitment@1/gitment.browser.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"https://cdn.jsdelivr.net/gh/theme-next/theme-next-gitment@1/default.css"</span>/&gt;</span></span><br></pre></td></tr></table></figure><br>然后就可以正确使用了</p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>The Usage of Git</title>
      <link href="/2019/10/12/The-Usage-of-Git/"/>
      <url>/2019/10/12/The-Usage-of-Git/</url>
      
        <content type="html"><![CDATA[<p>Git is easy to learn and has a tiny footprint with lightning fast performance. It outclasses SCM tools like Subversion, CVS, Perforce, and ClearCase with features like cheap local branching, convenient staging areas, and multiple workflows.</p><h2 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h2><p>直接进入 <a href="https://git-scm.com" target="_blank" rel="noopener">git官网</a> 下载相应的版本进行安装，安装比较简单，这里就不详述了</p><p>macos 也可以使用 <code>brew</code> 安装：<code>brew install git</code>，<code>brew</code> 的安装使用方法见 <a href="http://www.dusign.net/2019/10/02/MySQL-Tutorial/">MySQL Tutorial</a></p><p>linux 安装命令 <code>yum</code>/<code>dnf</code>(redhat/centos)、<code>apt-get</code>(ubuntu)、<code>pacman</code>(arch/manjaro)等</p><h2 id="configure"><a href="#configure" class="headerlink" title="configure"></a>configure</h2><p>git 安装完成之后还要进行配置之后才能使用，我们需要设置自己的名称以及邮箱，这是我们仓库的唯一表示，使用如下</p><ul><li>配置名称<br><code>git config --global user.name &quot;NAME&quot;</code></li><li>配置邮箱<br><code>git config --global user.email &quot;EMAIL&quot;</code></li><li>查看配置信息<br><code>git config --list</code></li></ul><h2 id="git原理"><a href="#git原理" class="headerlink" title="git原理"></a>git原理</h2><p>下面介绍一下 git 的工作原理</p><p><img src="git.png" alt="git"></p><h2 id="usage"><a href="#usage" class="headerlink" title="usage"></a>usage</h2><p>git 使用非常方便，平时工作中使用 git 管理自己的项目可以节省自己大量的时间，同时也可以通过 git 团队协作</p><ul><li><p>创建 Repository<br>在仓库目录下执行命令 <code>git init</code> / <code>git init DIR</code></p></li><li><p>添加内容到 Stage<br>执行命令 <code>git  add FILE</code> / <code>git add DIR</code>(目录) / <code>git add .</code>(当前目录下所有文件) / <code>git add -p</code>(所有变化确认）</p></li><li><p>从 Stage 删除内容<br><code>git rm FILE</code>（删除工作区以及暂存区） / <code>git rm --cached FILE</code>(停止追踪，但文件会保留在工作区)</p></li><li><p>文件改名<br><code>git mv FILE_OLD_NAME FILE_NEW_NAME</code> 文件改名并放入暂存区</p></li><li><p>提交文件到 Repository<br>执行命令 <code>git commit</code> / <code>git commit FILE -m MESSAGE</code></p></li><li><p>使用下面命令查看状态<br><code>git status</code></p></li><li><p>查看文件变动(Stage &lt;-&gt; Repository)<br><code>git diff FILE</code></p></li><li><p>查看修改日志(提交日志)<br><code>git log</code> / <code>git log -pretty=oneline</code></p></li><li><p>回退到上一个版本<br><code>git reset --hard HEAD^</code></p></li><li><p>回退到上上一个版本<br><code>git reset --hard HEAD^^</code></p></li><li><p>回退到前 N 个版本<br><code>git reset --hard HEAD~N</code></p></li><li><p>回退到某一个版本，版本号为 NUM<br><code>git reset --hard NUM</code></p></li><li><p>查看版本号对应的操作<br><code>git reflog</code></p></li><li><p>撤销修改（丢弃工作区的修改）<br><code>git checkout --FILE</code></p></li><li><p>创建分支<br><code>git checkout FILE</code></p></li></ul><blockquote><p>工作区：就是你执行 <code>git init</code> 的目录，<code>.git</code> 隐藏目录版本库除外，或者以后需要再新建的目录文件等等都属于工作区范畴<br>&nbsp;<br>版本库(Repository)：工作区有一个隐藏目录 <code>.git</code>, 这个不属于工作区，这是版本库。其中版本库里面存了很多东西，其中最重要的就是 stage(暂存区)，还有 git 为我们自动创建了第一个分支 master,以及指向 master 的一个指针 <code>HEAD</code><br>&nbsp;<br>我们前面说过使用 git 提交文件到版本库有两步：<br>&nbsp;<br>第一步：是使用 <code>git add</code> 把文件添加进去，实际上就是把文件添加到暂存区<br>&nbsp;<br>第二步：使用 <code>git commit</code> 提交更改，实际上就是把暂存区的所有内容提交到当前分支上</p></blockquote><h2 id="远程-Repository"><a href="#远程-Repository" class="headerlink" title="远程 Repository"></a>远程 Repository</h2><p>使用 git 远程团队协作非常方便，github 是目前最大的远程 git 仓库，同时也是最大的开源社区，每天都有许多开发者在 github 上进行团队开发</p><ul><li><p>创建 SSH Key<br>本地 git 仓库和 github 仓库之间是通过 ssh 加密的，所需需要设置 ssh<br><code>ssh-keygen -t rsa -C &quot;EMAIL&quot;</code> 其中 <code>EMAIL</code> 是 github 账号，最后在用户主目录下 <code>.ssh</code> 文件夹中有 <code>id_rsa</code>、 <code>id_rsa.pub</code> 说明创建成功，其中 <code>id_rsa</code> 是私钥， <code>id_rsa.pub</code> 公钥</p></li><li><p>添加 SSH Keys 到 GitHub<br>登录 gitHub，打开 <code>settings</code> 中的 <code>SSH Keys</code>，然后点击 <code>Add SSH Key</code>，将 <code>id_rsa.pub</code> 中的内容复制进去之后点击 <code>Add Key</code></p></li><li><p>关联本地仓库<br>按照 github 仓库提示，在本地克隆仓库或者把本地仓库推送到 github</p></li><li><p>推送到远程<br><code>git push</code> / <code>git push -u</code> 推送本地 master 分支到远程仓库<br><code>git push origin master</code> 把本地 master 分支的最新修改推送到 github 上</p></li><li><p>克隆远程仓库到本地<br><code>git clone GITHUB_ADDRESS</code></p></li><li><p>创建分支<br><code>git branch BRANCH_NAME</code> 创建分支<br><code>git checkout BRANCH_NAME</code> 切换到分支<br><code>git checkout -b BRANCH_NAME</code> 创建并切换到分支<br>master 是主分支，HEAD 指向当前分支</p></li><li><p>查看分支<br><code>git branch</code> 列出所有分支，当前分支前面会添加一个星号</p></li><li><p>合并分支<br><code>git merge BRANCH_NAME</code> 把分支合并到主分支 master</p></li><li><p>删除分支<br><code>git branch -d BRANCH_NAME</code></p></li><li><p>非 Fast forward 模式合并<br><code>git merge --no-ff -m “” BRANCH_NAME</code></p></li></ul><blockquote><p>通常合并分支时，git 一般使用 ”Fast forward” 模式，在这种模式下，删除分支后，会丢掉分支信息，现在我们来使用带参数 <code>–no-ff</code> 来禁用 ”Fast forward” 模式</p></blockquote><h2 id="BUG-分支"><a href="#BUG-分支" class="headerlink" title="BUG 分支"></a>BUG 分支</h2><p>在开发项目的过程中，有时候需要临时修复 bug，为此 git 提供了非常方便的 bug 分支功能，具体使用方法如下</p><h2 id="多人协作"><a href="#多人协作" class="headerlink" title="多人协作"></a>多人协作</h2><p>从远程克隆仓库时，git 自动把本地的 master 分支和远程的 master 分支对应起来，并且远程仓库名称是 origin</p><ul><li><p>查看远程仓库信息<br><code>git remote</code></p></li><li><p>查看远程仓库详细信息<br><code>git remote -v</code></p></li><li><p>推送本地仓库到远程<br><code>git push LOCAL_REPOSITORY REMOTE_REPOSITORY</code></p></li><li><p>把远程仓库分支克隆到本地<br><code>git checkout -b LOCALBRAND_NAME REPOSITORY/BRAND_NAME</code></p></li><li><p>推送自己的修改到远程仓库<br><code>git push origin BRANCH_NAME</code><br>如果推送失败，则因为远程分支比你的本地更新早，需要先用 <code>git pull</code> 试图合并</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> computer science </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Usage of Vim</title>
      <link href="/2019/10/09/Vim-Commands-and-Shortcuts/"/>
      <url>/2019/10/09/Vim-Commands-and-Shortcuts/</url>
      
        <content type="html"><![CDATA[<p>Vim is a well-known powerful and highly customizable text editor, which is loved by many developers. But the use of vim is still a bit difficult, there are many shortcuts and commands to remember. Next, I will introduce the use of vim.</p><h2 id="Vim命令"><a href="#Vim命令" class="headerlink" title="Vim命令"></a>Vim命令</h2><p>Vim 有插入模式（insert）、正常模式（normal）、可视化模式（visual）以及命令行模式，四种模式之间的转换方法如下<br><img src="pattern.png" alt="pattern"></p><h3 id="一般模式"><a href="#一般模式" class="headerlink" title="一般模式"></a>一般模式</h3><p>刚打开 vim 就是一般模式，左下角有 <code>NORMAL</code>,一般模式可以查看文件，修改文件，具体操作方法如下</p><h4 id="光标移动"><a href="#光标移动" class="headerlink" title="光标移动"></a>光标移动</h4><p><code>h</code> 或 <code>←</code> —&gt; 光标左移一个字符<br><code>j</code> 或 <code>↓</code> —&gt; 光标下移一个字符<br><code>k</code> 或 <code>↑</code> —&gt; 光标上移一个字符<br><code>l</code> 或 <code>→</code> —&gt; 光标右移一个字符</p><blockquote><p>加上相应的数字之后可以移动多行，如 <code>30j</code> 是下移 30 行</p></blockquote><p><code>ctrl + f</code> —&gt; 屏幕下移一页<br><code>ctrl + b</code> —&gt; 屏幕上移一页<br><code>ctrl + d</code> —&gt; 屏幕下移半页<br><code>ctrl + u</code> —&gt; 屏幕上移半页</p><p><code>+</code> —&gt; 光标移动到非空格符的下一行<br><code>-</code> —&gt; 光标移动到非空格符的上一行</p><p><code>n + space</code> —&gt; 光标会向右移动这一行的 n 个字符</p><p><code>0</code> 或 <code>home</code> —&gt; （数字 0）移动到这一行的最前面字符处<br><code>$</code> 或 <code>end</code> —&gt; 移动到这一行的最后面字符处 </p><p><code>H</code> —&gt; 光标移动到这个屏幕的最上方那一行的第一个字符<br><code>M</code> —&gt; 光标移动到这个屏幕的中央那一行的第一个字符<br><code>L</code> —&gt; 光标移动到这个屏幕的最下方那一行的第一个字符<br><code>G</code> —&gt; 移动到这个档案的最后一行<br><code>nG</code> —&gt; n 为数字。移动到这个档案的第 n 行。例如 20G 则会移动到这个档案的第 20 行(可配合 :set nu)<br><code>gg</code> —&gt; 移动到这个档案的第一行<br><code>n + enter</code> —&gt; n 为数字。光标向下移动 n 行</p><h4 id="搜索替换"><a href="#搜索替换" class="headerlink" title="搜索替换"></a>搜索替换</h4><p><code>/word</code> —&gt; 向下搜索字符串<br><code>?word</code> —&gt; 向上搜索字符串</p><p><code>n</code> —&gt; 重复前一个动作，经常与搜索命令一起用，为重复搜索<br><code>N</code> —&gt; 反向进行前一个动作，经常与搜索命令一起用，为反向重复搜索</p><p><code>:n1,n2s/word1/word2/g</code> —&gt; n1 与 n2 为数字。在第 n1 与 n2 行之间寻找 word1 这个字符串，并将该字符串取代为 word2<br><code>:1,$s/word1/word2/g</code> 或 <code>:%s/word1/word2/g</code> —&gt; 从第一行到最后一行寻找 word1 字符串，并将该字符串取代为 word2<br><code>:1,$s/word1/word2/gc</code> 或 <code>:%s/word1/word2/gc</code> —&gt; 从第一行到最后一行寻找 word1 字符串，并将该字符串取代为 word2 ！且在取代前显示提示字符给用户确认 (confirm) 是否需要取代</p><h4 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h4><p><code>x</code>,<code>X</code> —&gt; 在一行字当中，<code>x</code> 为向后删除一个字符 (相当于 <code>[del]</code>)， <code>X</code> 为向前删除一个字符(相当于 <code>[backspace]</code>)<br><code>nx</code> —&gt; n 为数字，连续向后删除 n 个字符<br><code>dd</code> —&gt; 删除游标所在的那一整行<br><code>ndd</code> —&gt; n 为数字。删除光标所在的向下 n 行<br><code>d1G</code> —&gt; 删除光标所在到第 1 行的所有数据<br><code>dG</code> —&gt; 删除光标所在到最后一行的所有数据<br><code>d$</code> —&gt; 删除游标所在处，到该行的最后一个字符<br><code>d0</code> —&gt; 那个是数字的 0 ，删除游标所在处，到该行的最前面一个字符<br><code>y</code> —&gt; 复制<br><code>yy</code> —&gt; 复制游标所在的那一行<br><code>nyy</code> —&gt; n 为数字。复制光标所在的向下 n 行<br><code>y1G</code> —&gt; 复制游标所在行到第一行的所有数据<br><code>yG</code> —&gt; 复制游标所在行到最后一行的所有数据<br><code>y0</code> —&gt; 复制光标所在的那个字符到该行行首的所有数据<br><code>y$</code> —&gt; 复制光标所在的那个字符到该行行尾的所有数据<br><code>p</code>,<code>P</code> —&gt; <code>p</code> 为将已复制的数据在光标下一行贴上，<code>P</code> 则为贴在游标上一行<br><code>c</code> —&gt; 重复删除多个数据，例如向下删除 10 行为 <code>10cj</code><br><code>u</code> —&gt; 复原前一个动作，相当于word的 <code>undo</code><br><code>ctrl + r</code> —&gt; 重做上一个动作，相当于word的 <code>redo</code><br><code>.</code> —&gt; 重复前一个动作<br><code>:%d</code> —&gt; 清空文档（%表示所有行）</p><h3 id="编辑模式"><a href="#编辑模式" class="headerlink" title="编辑模式"></a>编辑模式</h3><p><code>i</code>,<code>I</code> —&gt; 进入输入模式，<code>i</code> 从目前光标所在处输入， <code>I</code> 在目前所在行的第一个非空格符处开始输入<br><code>a</code>,<code>A</code> —&gt; 进入输入模式，<code>a</code> 从目前光标所在的下一个字符处开始输入， <code>A</code> 从光标所在行的最后一个字符处开始输入<br><code>o</code>,<code>O</code> —&gt; 进入输入模式，<code>o</code> 在目前光标所在的下一行处输入新的一行， <code>O</code> 在目前光标所在处的上一行输入新的一行<br><code>r</code>,<code>R</code> —&gt; 进入取代模式，<code>r</code> 只会取代光标所在的那一个字符一次，<code>R</code> 会一直取代光标所在的文字，直到按下 ESC 为止</p><h3 id="命令行模式"><a href="#命令行模式" class="headerlink" title="命令行模式"></a>命令行模式</h3><p>在命令行模式中可以输入会被解释成并执行的文本</p><h4 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h4><p><code>:w</code> —&gt; 保存文件<br><code>:q</code> —&gt; 退出vim<br><code>:wq</code> —&gt; 保存并退出vim<br><code>ZZ</code> —&gt; 保存后退出<br><code>ZQ</code> —&gt; 不保存退出，Q表示放弃<br><code>:w [filename]</code> —&gt; 将编辑的数据储存成另一个档案（相当于另存为）<br><code>:r [filename]</code> —&gt; 在编辑的数据中，读入另一个档案的数据。亦即将 <code>[filename]</code> 这个档案内容加到游标所在行后面<br><code>:! command</code> —&gt; 暂时离开 <code>vim</code> 到指令行模式下执行 <code>command</code> 的显示结果<br><code>:n</code> —&gt; n为数字，跳转到第 n 行<br><code>:n</code> —&gt; 打开新文件<br><code>:edit /path/to/file</code> —&gt; 在vim中打开文件<br><code>:saveas file</code> —&gt; 将文件另存为file，但不退出<br><code>:pwd</code> —&gt; 显示当前路径<br><code>:e.</code> —&gt; 打开当前目录</p><blockquote><p><code>!</code> 表示强制，可以和 <code>:w</code>、<code>:q</code> 等一起使用，为强制执行</p></blockquote><h4 id="窗口操作"><a href="#窗口操作" class="headerlink" title="窗口操作"></a>窗口操作</h4><p><code>:tabo</code> —&gt; 关闭所有窗口<br><code>:vsp</code>,<code>:sp</code> —&gt; 垂直/水平分割视窗<br><code>:diffs</code> —&gt; 分割视窗并比较档案<br><code>C-w p</code> —&gt; 跳转至前一个分割视窗<br><code>C-w w</code> —&gt; 在窗口间循环切换<br><code>C-w h</code> —&gt; 切换到左边的窗口<br><code>C-w j</code> —&gt; 切换到下边的窗口<br><code>C-w k</code> —&gt; 切换到上边的窗口<br><code>C-w l</code> —&gt; 切换到右边的窗口<br><code>C-w +</code> —&gt; 纵向扩大窗口<br><code>C-w -</code> —&gt; 纵向缩小窗口<br><code>:close</code> —&gt; 关闭当前窗口，但不能关闭最后一个</p><h2 id="插件命令"><a href="#插件命令" class="headerlink" title="插件命令"></a>插件命令</h2><h3 id="NERDCommenter"><a href="#NERDCommenter" class="headerlink" title="NERDCommenter"></a>NERDCommenter</h3><p><code>&lt;leader&gt;cc</code> —&gt; 加注释<br><code>&lt;leader&gt;cu</code> —&gt; 解开注释<br><code>&lt;leader&gt;c&lt;space&gt;</code> —&gt; 加上解开注释智能判断<br><code>&lt;leader&gt;cs</code> —&gt; 以“性感”的方式注释<br><code>&lt;leader&gt;cA</code> —&gt; 行尾添加注释并进入Insert模式<br><code>n&lt;leader&gt;cc</code> —&gt; 以下n行添加注释<br><code>n&lt;leader&gt;cu</code> —&gt; 以下n行取消注释<br><code>n&lt;leader&gt;cm</code> —&gt; 为光标以下n行添加块注释</p><h3 id="Doxygen"><a href="#Doxygen" class="headerlink" title="Doxygen"></a>Doxygen</h3><p><code>:DoxLic</code> —&gt; 生成License<br><code>:DoxAuthor</code> —&gt; 插入文档注释，会提示输入版本号<br><code>:Dox</code> —&gt; // 插入注释<br><code>:DoxBlock</code> —&gt; // 插入一个注释块</p><h3 id="NERDTree"><a href="#NERDTree" class="headerlink" title="NERDTree"></a>NERDTree</h3><p><code>:NERDTree</code> —&gt; 显示 NERDTree 即左边边目录栏</p><h3 id="Tagbar"><a href="#Tagbar" class="headerlink" title="Tagbar"></a>Tagbar</h3><p><code>:TagBarToggle</code> —&gt; 显示 Tagbar 即右边函数栏</p>]]></content>
      
      
      <categories>
          
          <category> text editor </category>
          
      </categories>
      
      
        <tags>
            
            <tag> text editor </tag>
            
            <tag> vim </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Picture Processing Class</title>
      <link href="/2019/10/07/Picture-Processing-Class/"/>
      <url>/2019/10/07/Picture-Processing-Class/</url>
      
        <content type="html"><![CDATA[<p>Although php is not as popular as before, it is still the most used language for website development. At the same time, image processing is very important for a website. Next, I share a class of image processing written in php.<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * file: image.class.php</span></span><br><span class="line"><span class="comment"> * 图像处理类，可以完成对各种类型的图像进行缩放、加图片水印和剪裁的操作。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Image</span> </span>&#123;</span><br><span class="line">  <span class="comment">/* 图片保存的路径 */</span></span><br><span class="line">  <span class="keyword">private</span> $path;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 实例图像对象时传递图像的一个路径，默认值是当前目录</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span>  string $path  可以指定处理图片的路径</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($path=<span class="string">"./"</span>)</span></span>&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;path = rtrim($path,<span class="string">"/"</span>).<span class="string">"/"</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 对指定的图像进行缩放</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span>  string $name  是需要处理的图片名称</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span>  int $width   缩放后的宽度</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span>  int $height   缩放后的高度</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span>  string $qz   是新图片的前缀</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@return</span> mixed      是缩放后的图片名称,失败返回false;</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">thumb</span><span class="params">($name, $width, $height,$qz=<span class="string">"th_"</span>)</span></span>&#123;</span><br><span class="line">    <span class="comment">/* 获取图片宽度、高度、及类型信息 */</span></span><br><span class="line">    $imgInfo = <span class="keyword">$this</span>-&gt;getInfo($name);</span><br><span class="line">    <span class="comment">/* 获取背景图片的资源 */</span></span><br><span class="line">    $srcImg = <span class="keyword">$this</span>-&gt;getImg($name, $imgInfo);</span><br><span class="line">    <span class="comment">/* 获取新图片尺寸 */</span></span><br><span class="line">    $size = <span class="keyword">$this</span>-&gt;getNewSize($name,$width, $height,$imgInfo);</span><br><span class="line">    <span class="comment">/* 获取新的图片资源 */</span></span><br><span class="line">    $newImg = <span class="keyword">$this</span>-&gt;kidOfImage($srcImg, $size,$imgInfo);</span><br><span class="line">    <span class="comment">/* 通过本类的私有方法，保存缩略图并返回新缩略图的名称，以"th_"为前缀 */</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;createNewImage($newImg, $qz.$name,$imgInfo);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 为图片添加水印</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span>  string $groundName 背景图片，即需要加水印的图片，暂只支持GIF,JPG,PNG格式</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span>  string $waterName 图片水印，即作为水印的图片，暂只支持GIF,JPG,PNG格式</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span>  int $waterPos    水印位置，有10种状态，0为随机位置；</span></span><br><span class="line"><span class="comment">   *                1为顶端居左，2为顶端居中，3为顶端居右；</span></span><br><span class="line"><span class="comment">   *                4为中部居左，5为中部居中，6为中部居右；</span></span><br><span class="line"><span class="comment">   *                7为底端居左，8为底端居中，9为底端居右；</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span>  string $qz     加水印后的图片的文件名在原文件名前面加上这个前缀</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@return</span>  mixed        是生成水印后的图片名称,失败返回false</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">waterMark</span><span class="params">($groundName, $waterName, $waterPos=<span class="number">0</span>, $qz=<span class="string">"wa_"</span>)</span></span>&#123;</span><br><span class="line">    <span class="comment">/*获取水印图片是当前路径，还是指定了路径*/</span></span><br><span class="line">    $curpath = rtrim(<span class="keyword">$this</span>-&gt;path,<span class="string">"/"</span>).<span class="string">"/"</span>;</span><br><span class="line">    $dir = dirname($waterName);</span><br><span class="line">    <span class="keyword">if</span>($dir == <span class="string">"."</span>)&#123;</span><br><span class="line">      $wpath = $curpath;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      $wpath = $dir.<span class="string">"/"</span>;</span><br><span class="line">      $waterName = basename($waterName);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*水印图片和背景图片必须都要存在*/</span></span><br><span class="line">    <span class="keyword">if</span>(file_exists($curpath.$groundName) &amp;&amp; file_exists($wpath.$waterName))&#123;</span><br><span class="line">      $groundInfo = <span class="keyword">$this</span>-&gt;getInfo($groundName);        <span class="comment">//获取背景信息</span></span><br><span class="line">      $waterInfo = <span class="keyword">$this</span>-&gt;getInfo($waterName, $dir);      <span class="comment">//获取水印图片信息</span></span><br><span class="line">      <span class="comment">/*如果背景比水印图片还小，就会被水印全部盖住*/</span></span><br><span class="line">      <span class="keyword">if</span>(!$pos = <span class="keyword">$this</span>-&gt;position($groundInfo, $waterInfo, $waterPos))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'水印不应该比背景图片小！'</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      $groundImg = <span class="keyword">$this</span>-&gt;getImg($groundName, $groundInfo);  <span class="comment">//获取背景图像资源</span></span><br><span class="line">      $waterImg = <span class="keyword">$this</span>-&gt;getImg($waterName, $waterInfo, $dir); <span class="comment">//获取水印图片资源</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">/* 调用私有方法将水印图像按指定位置复制到背景图片中 */</span></span><br><span class="line">      $groundImg = <span class="keyword">$this</span>-&gt;copyImage($groundImg, $waterImg, $pos, $waterInfo);</span><br><span class="line">      <span class="comment">/* 通过本类的私有方法，保存加水图片并返回新图片的名称，默认以"wa_"为前缀 */</span></span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;createNewImage($groundImg, $qz.$groundName, $groundInfo);</span><br><span class="line"></span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">'图片或水印图片不存在！'</span>;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 在一个大的背景图片中剪裁出指定区域的图片</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span>  string $name  需要剪切的背景图片</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span>  int $x     剪切图片左边开始的位置</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span>  int $y     剪切图片顶部开始的位置</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span>  int $width   图片剪裁的宽度</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span>  int $height   图片剪裁的高度</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span>  string $qz   新图片的名称前缀</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@return</span>  mixed      裁剪后的图片名称,失败返回false;</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">cut</span><span class="params">($name, $x, $y, $width, $height, $qz=<span class="string">"cu_"</span>)</span></span>&#123;</span><br><span class="line">    $imgInfo=<span class="keyword">$this</span>-&gt;getInfo($name);         <span class="comment">//获取图片信息</span></span><br><span class="line">    <span class="comment">/* 裁剪的位置不能超出背景图片范围 */</span></span><br><span class="line">    <span class="keyword">if</span>( (($x+$width) &gt; $imgInfo[<span class="string">'width'</span>]) || (($y+$height) &gt; $imgInfo[<span class="string">'height'</span>]))&#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">"裁剪的位置超出了背景图片范围!"</span>;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $back = <span class="keyword">$this</span>-&gt;getImg($name, $imgInfo);     <span class="comment">//获取图片资源</span></span><br><span class="line">    <span class="comment">/* 创建一个可以保存裁剪后图片的资源 */</span></span><br><span class="line">    $cutimg = imagecreatetruecolor($width, $height);</span><br><span class="line">    <span class="comment">/* 使用imagecopyresampled()函数对图片进行裁剪 */</span></span><br><span class="line">    imagecopyresampled($cutimg, $back, <span class="number">0</span>, <span class="number">0</span>, $x, $y, $width, $height, $width, $height);</span><br><span class="line">    imagedestroy($back);</span><br><span class="line">    <span class="comment">/* 通过本类的私有方法，保存剪切图并返回新图片的名称，默认以"cu_"为前缀 */</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;createNewImage($cutimg, $qz.$name,$imgInfo);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* 内部使用的私有方法，用来确定水印图片的位置 */</span></span><br><span class="line">  <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">position</span><span class="params">($groundInfo, $waterInfo, $waterPos)</span></span>&#123;</span><br><span class="line">    <span class="comment">/* 需要加水印的图片的长度或宽度比水印还小，无法生成水印 */</span></span><br><span class="line">    <span class="keyword">if</span>( ($groundInfo[<span class="string">"width"</span>]&lt;$waterInfo[<span class="string">"width"</span>]) || ($groundInfo[<span class="string">"height"</span>]&lt;$waterInfo[<span class="string">"height"</span>]) ) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">switch</span>($waterPos) &#123;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">1</span>:     <span class="comment">//1为顶端居左</span></span><br><span class="line">        $posX = <span class="number">0</span>;</span><br><span class="line">        $posY = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">2</span>:     <span class="comment">//2为顶端居中</span></span><br><span class="line">        $posX = ($groundInfo[<span class="string">"width"</span>] - $waterInfo[<span class="string">"width"</span>]) / <span class="number">2</span>;</span><br><span class="line">        $posY = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">3</span>:     <span class="comment">//3为顶端居右</span></span><br><span class="line">        $posX = $groundInfo[<span class="string">"width"</span>] - $waterInfo[<span class="string">"width"</span>];</span><br><span class="line">        $posY = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">4</span>:     <span class="comment">//4为中部居左</span></span><br><span class="line">        $posX = <span class="number">0</span>;</span><br><span class="line">        $posY = ($groundInfo[<span class="string">"height"</span>] - $waterInfo[<span class="string">"height"</span>]) / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">5</span>:     <span class="comment">//5为中部居中</span></span><br><span class="line">        $posX = ($groundInfo[<span class="string">"width"</span>] - $waterInfo[<span class="string">"width"</span>]) / <span class="number">2</span>;</span><br><span class="line">        $posY = ($groundInfo[<span class="string">"height"</span>] - $waterInfo[<span class="string">"height"</span>]) / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">6</span>:     <span class="comment">//6为中部居右</span></span><br><span class="line">        $posX = $groundInfo[<span class="string">"width"</span>] - $waterInfo[<span class="string">"width"</span>];</span><br><span class="line">        $posY = ($groundInfo[<span class="string">"height"</span>] - $waterInfo[<span class="string">"height"</span>]) / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">7</span>:     <span class="comment">//7为底端居左</span></span><br><span class="line">        $posX = <span class="number">0</span>;</span><br><span class="line">        $posY = $groundInfo[<span class="string">"height"</span>] - $waterInfo[<span class="string">"height"</span>];</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">8</span>:     <span class="comment">//8为底端居中</span></span><br><span class="line">        $posX = ($groundInfo[<span class="string">"width"</span>] - $waterInfo[<span class="string">"width"</span>]) / <span class="number">2</span>;</span><br><span class="line">        $posY = $groundInfo[<span class="string">"height"</span>] - $waterInfo[<span class="string">"height"</span>];</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">9</span>:     <span class="comment">//9为底端居右</span></span><br><span class="line">        $posX = $groundInfo[<span class="string">"width"</span>] - $waterInfo[<span class="string">"width"</span>];</span><br><span class="line">        $posY = $groundInfo[<span class="string">"height"</span>] - $waterInfo[<span class="string">"height"</span>];</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">      <span class="keyword">default</span>:    <span class="comment">//随机</span></span><br><span class="line">        $posX = rand(<span class="number">0</span>,($groundInfo[<span class="string">"width"</span>] - $waterInfo[<span class="string">"width"</span>]));</span><br><span class="line">        $posY = rand(<span class="number">0</span>,($groundInfo[<span class="string">"height"</span>] - $waterInfo[<span class="string">"height"</span>]));</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">array</span>(<span class="string">"posX"</span>=&gt;$posX, <span class="string">"posY"</span>=&gt;$posY);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* 内部使用的私有方法，用于获取图片的属性信息（宽度、高度和类型） */</span></span><br><span class="line">  <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">getInfo</span><span class="params">($name, $path=<span class="string">"."</span>)</span> </span>&#123;</span><br><span class="line">    $spath = $path==<span class="string">"."</span> ? rtrim(<span class="keyword">$this</span>-&gt;path,<span class="string">"/"</span>).<span class="string">"/"</span> : $path.<span class="string">'/'</span>;</span><br><span class="line"></span><br><span class="line">    $data = getimagesize($spath.$name);</span><br><span class="line">    $imgInfo[<span class="string">"width"</span>]  = $data[<span class="number">0</span>];</span><br><span class="line">    $imgInfo[<span class="string">"height"</span>] = $data[<span class="number">1</span>];</span><br><span class="line">    $imgInfo[<span class="string">"type"</span>]  = $data[<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> $imgInfo;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/*内部使用的私有方法， 用于创建支持各种图片格式（jpg,gif,png三种）资源 */</span></span><br><span class="line">  <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">getImg</span><span class="params">($name, $imgInfo, $path=<span class="string">'.'</span>)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    $spath = $path==<span class="string">"."</span> ? rtrim(<span class="keyword">$this</span>-&gt;path,<span class="string">"/"</span>).<span class="string">"/"</span> : $path.<span class="string">'/'</span>;</span><br><span class="line">    $srcPic = $spath.$name;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">switch</span> ($imgInfo[<span class="string">"type"</span>]) &#123;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">1</span>:         <span class="comment">//gif</span></span><br><span class="line">        $img = imagecreatefromgif($srcPic);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">2</span>:         <span class="comment">//jpg</span></span><br><span class="line">        $img = imagecreatefromjpeg($srcPic);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">3</span>:         <span class="comment">//png</span></span><br><span class="line">        $img = imagecreatefrompng($srcPic);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> $img;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* 内部使用的私有方法，返回等比例缩放的图片宽度和高度，如果原图比缩放后的还小保持不变 */</span></span><br><span class="line">  <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">getNewSize</span><span class="params">($name, $width, $height, $imgInfo)</span></span>&#123;</span><br><span class="line">    $size[<span class="string">"width"</span>] = $imgInfo[<span class="string">"width"</span>];     <span class="comment">//原图片的宽度</span></span><br><span class="line">    $size[<span class="string">"height"</span>] = $imgInfo[<span class="string">"height"</span>];    <span class="comment">//原图片的高度</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>($width &lt; $imgInfo[<span class="string">"width"</span>])&#123;</span><br><span class="line">      $size[<span class="string">"width"</span>]=$width;          <span class="comment">//缩放的宽度如果比原图小才重新设置宽度</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>($height &lt; $imgInfo[<span class="string">"height"</span>])&#123;</span><br><span class="line">      $size[<span class="string">"height"</span>] = $height;        <span class="comment">//缩放的高度如果比原图小才重新设置高度</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/* 等比例缩放的算法 */</span></span><br><span class="line">    <span class="keyword">if</span>($imgInfo[<span class="string">"width"</span>]*$size[<span class="string">"width"</span>] &gt; $imgInfo[<span class="string">"height"</span>] * $size[<span class="string">"height"</span>])&#123;</span><br><span class="line">      $size[<span class="string">"height"</span>] = round($imgInfo[<span class="string">"height"</span>]*$size[<span class="string">"width"</span>]/$imgInfo[<span class="string">"width"</span>]);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      $size[<span class="string">"width"</span>] = round($imgInfo[<span class="string">"width"</span>]*$size[<span class="string">"height"</span>]/$imgInfo[<span class="string">"height"</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> $size;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* 内部使用的私有方法，用于保存图像，并保留原有图片格式 */</span></span><br><span class="line">  <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">createNewImage</span><span class="params">($newImg, $newName, $imgInfo)</span></span>&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;path = rtrim(<span class="keyword">$this</span>-&gt;path,<span class="string">"/"</span>).<span class="string">"/"</span>;</span><br><span class="line">    <span class="keyword">switch</span> ($imgInfo[<span class="string">"type"</span>]) &#123;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">1</span>:       <span class="comment">//gif</span></span><br><span class="line">        $result = imageGIF($newImg, <span class="keyword">$this</span>-&gt;path.$newName);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">2</span>:       <span class="comment">//jpg</span></span><br><span class="line">        $result = imageJPEG($newImg,<span class="keyword">$this</span>-&gt;path.$newName);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">3</span>:       <span class="comment">//png</span></span><br><span class="line">        $result = imagePng($newImg, <span class="keyword">$this</span>-&gt;path.$newName);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    imagedestroy($newImg);</span><br><span class="line">    <span class="keyword">return</span> $newName;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* 内部使用的私有方法，用于加水印时复制图像 */</span></span><br><span class="line">  <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">copyImage</span><span class="params">($groundImg, $waterImg, $pos, $waterInfo)</span></span>&#123;</span><br><span class="line">    imagecopy($groundImg, $waterImg, $pos[<span class="string">"posX"</span>], $pos[<span class="string">"posY"</span>], <span class="number">0</span>, <span class="number">0</span>, $waterInfo[<span class="string">"width"</span>],$waterInfo[<span class="string">"height"</span>]);</span><br><span class="line">    imagedestroy($waterImg);</span><br><span class="line">    <span class="keyword">return</span> $groundImg;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* 内部使用的私有方法，处理带有透明度的图片保持原样 */</span></span><br><span class="line">  <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">kidOfImage</span><span class="params">($srcImg, $size, $imgInfo)</span></span>&#123;</span><br><span class="line">    $newImg = imagecreatetruecolor($size[<span class="string">"width"</span>], $size[<span class="string">"height"</span>]);</span><br><span class="line">    $otsc = imagecolortransparent($srcImg);</span><br><span class="line">    <span class="keyword">if</span>( $otsc &gt;= <span class="number">0</span> &amp;&amp; $otsc &lt; imagecolorstotal($srcImg)) &#123;</span><br><span class="line">      $transparentcolor = imagecolorsforindex( $srcImg, $otsc );</span><br><span class="line">      $newtransparentcolor = imagecolorallocate(</span><br><span class="line">      $newImg,</span><br><span class="line">      $transparentcolor[<span class="string">'red'</span>],</span><br><span class="line">      $transparentcolor[<span class="string">'green'</span>],</span><br><span class="line">      $transparentcolor[<span class="string">'blue'</span>]</span><br><span class="line">      );</span><br><span class="line">      imagefill( $newImg, <span class="number">0</span>, <span class="number">0</span>, $newtransparentcolor );</span><br><span class="line">      imagecolortransparent( $newImg, $newtransparentcolor );</span><br><span class="line">    &#125;</span><br><span class="line">    imagecopyresized( $newImg, $srcImg, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, $size[<span class="string">"width"</span>], $size[<span class="string">"height"</span>], $imgInfo[<span class="string">"width"</span>], $imgInfo[<span class="string">"height"</span>] );</span><br><span class="line">    imagedestroy($srcImg);</span><br><span class="line">    <span class="keyword">return</span> $newImg;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
            <tag> picture processing </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>EPE8 Introduction</title>
      <link href="/2019/10/06/EPE8-Introduction/"/>
      <url>/2019/10/06/EPE8-Introduction/</url>
      
        <content type="html"><![CDATA[<p>Standard code style in project development is not only baneficial for others to read, but also for later code maintenance and code refactoring. So standard code style is very import for developing large projects. Next, I will briefly introduce the python code style guide EPE8, hoping to help you.</p><h3 id="缩进"><a href="#缩进" class="headerlink" title="缩进"></a>缩进</h3><p>使用 4 个空格进行代码缩进，绝对禁止制表符和空格的混用<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Aligned with opening delimiter.</span></span><br><span class="line">foo = long_function_name(var_one, var_two,</span><br><span class="line">                         var_three, var_four)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Add 4 spaces (an extra level of indentation) to distinguish arguments from the rest.</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">long_function_name</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">        var_one, var_two, var_three,</span></span></span><br><span class="line"><span class="function"><span class="params">        var_four)</span>:</span></span><br><span class="line">    print(var_one)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Hanging indents should add a level.</span></span><br><span class="line">foo = long_function_name(</span><br><span class="line">    var_one, var_two,</span><br><span class="line">    var_three, var_four)</span><br></pre></td></tr></table></figure></p><h3 id="字符数"><a href="#字符数" class="headerlink" title="字符数"></a>字符数</h3><p>每行最多不要超过 79 字符<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> open(<span class="string">'/path/to/some/file/you/want/to/read'</span>) <span class="keyword">as</span> file_1, \</span><br><span class="line">     open(<span class="string">'/path/to/some/file/being/written'</span>, <span class="string">'w'</span>) <span class="keyword">as</span> file_2:</span><br><span class="line">    file_2.write(file_1.read())</span><br></pre></td></tr></table></figure></p><h3 id="换行"><a href="#换行" class="headerlink" title="换行"></a>换行</h3><p>如果需要换行的话在二元运算符前面换行，如<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">income = (gross_wages</span><br><span class="line">    + taxable_interest</span><br><span class="line">    + (dividends - qualified_dividends)</span><br><span class="line">    - ira_deduction</span><br><span class="line">    - student_loan_interest)</span><br></pre></td></tr></table></figure></p><h3 id="空行"><a href="#空行" class="headerlink" title="空行"></a>空行</h3><p>顶级函数和类定义之间使用2个空行，类内部各个方法之间使用1个空行。</p><p>为了让有关联的函数成组，可以在各函数组之间有节制地添加空格来区分各个逻辑部分。相互关联的一组单行函数之间可以省略空格</p><h3 id="编码"><a href="#编码" class="headerlink" title="编码"></a>编码</h3><p>程序编码使用 UTF-8</p><h3 id="导入"><a href="#导入" class="headerlink" title="导入"></a>导入</h3><p>导入语句通常单独成行<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> sys</span><br></pre></td></tr></table></figure><br>不能写成<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os, sys</span><br></pre></td></tr></table></figure><br>但是像下面这样写是可以的<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> subprocess <span class="keyword">import</span> Popen, PIPE</span><br></pre></td></tr></table></figure></p><p>导入语句应按照以下顺序进行分组</p><ul><li>标准库的导入</li><li>相关第三方库的导入</li><li>本地应用程序/库——特定库的导入<br>每组导入之间加一个空行，通常建议所有的导入都使用绝对路径</li></ul><p><code>__all__</code> , <code>__author__</code> , <code>__version__</code> 等这样的模块级“呆名“（也就是名字里有两个前缀下划线和两个后缀下划线），应该放在文档字符串的后面，以及除 <code>from __future__</code> 之外的import表达式前面</p><h3 id="空格"><a href="#空格" class="headerlink" title="空格"></a>空格</h3><ul><li>紧靠小括号、中括号或大括号内部禁止使用空格<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Yes: spam(ham[<span class="number">1</span>], &#123;eggs: <span class="number">2</span>&#125;)</span><br><span class="line">No:  spam( ham[ <span class="number">1</span> ], &#123; eggs: <span class="number">2</span> &#125; )</span><br></pre></td></tr></table></figure></li><li>紧挨着逗号、分号或冒号之前禁止使用空格<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Yes: <span class="keyword">if</span> x == <span class="number">4</span>: <span class="keyword">print</span> x, y; x, y = y, x</span><br><span class="line">No:  <span class="keyword">if</span> x == <span class="number">4</span> : <span class="keyword">print</span> x , y ; x , y = y , x</span><br></pre></td></tr></table></figure></li><li>紧挨着函数参数列表的左括号之前禁止使用空格<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Yes: spam(<span class="number">1</span>)</span><br><span class="line">No:  spam (<span class="number">1</span>)</span><br></pre></td></tr></table></figure></li><li>紧挨着索引或切片操作的左括号之前禁止使用空格<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Yes: dct[<span class="string">'key'</span>] = lst[index]</span><br><span class="line">No:  dct [<span class="string">'key'</span>] = lst [index]</span><br></pre></td></tr></table></figure></li><li>没必要为了与另一条语句对齐而在运算符两边使用多个空格<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Yes: x = <span class="number">1</span></span><br><span class="line">     y = <span class="number">2</span></span><br><span class="line">     long_variable = <span class="number">3</span></span><br><span class="line"></span><br><span class="line">No:  x             = <span class="number">1</span></span><br><span class="line">     y             = <span class="number">2</span></span><br><span class="line">     long_variable = <span class="number">3</span></span><br></pre></td></tr></table></figure></li><li>始终在以下二元操作符两侧各放1个空格：赋值(<code>=</code>)、增量赋值(<code>+=</code>,<code>-=</code>)、比较(<code>==</code>,<code>&lt;</code>,<code>in</code>,<code>not</code>,<code>is</code>,<code>is not</code>等)、布尔(<code>and</code>,<code>or</code>,<code>not</code>)</li><li>在数学运算符两侧添加空格</li><li>用于指定关键字参数或默认参数值时，请勿在 <code>=</code> 两侧使用空格<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Yes: <span class="function"><span class="keyword">def</span> <span class="title">complex</span><span class="params">(real, imag=<span class="number">0.0</span>)</span>:</span></span><br><span class="line">         <span class="keyword">return</span> magic(r=real, i=imag)</span><br><span class="line"></span><br><span class="line">No:  <span class="function"><span class="keyword">def</span> <span class="title">complex</span><span class="params">(real, imag = <span class="number">0.0</span>)</span>:</span></span><br><span class="line">         <span class="keyword">return</span> magic(r = real, i = imag)</span><br></pre></td></tr></table></figure></li><li>通常不鼓励在同一行放置多条语句</li><li>避免在行尾使用空格</li></ul><h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><ul><li><p>注释一定要和代码一致，更改代码之前先更改注释，这是一个好习惯。注释结束应该有一个 <code>。</code>，且首字母大写。</p></li><li><p>块注释通常适用于跟随它们的某些（或全部）代码，并缩进到与代码相同的级别。块注释的每一行开头使用一个#和一个空格（除非块注释内部缩进文本）。 </p></li><li><p>块注释内部的段落通常只有一个#的空行分隔。</p></li><li><p>有节制的使用行内注释，因为这会分散注意力</p></li></ul><h3 id="命名"><a href="#命名" class="headerlink" title="命名"></a>命名</h3><ul><li><p>模块应该用简短全小写的名字，如果为了提升可读性，下划线也是可以用的。Python包名也应该使用简短全小写的名字，但不建议用下划线。</p></li><li><p>类名一般使用首字母大写的约定。 </p></li><li><p>注意，对于内置的变量命名有一个单独的约定：大部分内置变量是单个单词（或者两个单词连接在一起），首字母大写的命名法只用于异常名或者内部的常量。</p></li><li><p>函数名应该小写，如果想提高可读性可以用下划线分隔。 </p></li><li><p>始终要将 self 作为实例方法的的第一个参数，始终要将 cls 作为类静态方法的第一个参数。 </p></li><li><p>如果函数的参数名和已有的关键词冲突，在最后加单一下划线比缩写或随意拼写更好。因此 class_ 比 clss 更好。</p></li><li><p>使用下划线分隔小写单词以提高可读性，建议使用这样的函数命名规则</p></li><li><p>常量通常定义在模块级，通过下划线分隔的全大写字母命名。例如： MAX_OVERFLOW 和 TOTAL。</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> epe8 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL Tutorial</title>
      <link href="/2019/10/02/MySQL-Tutorial/"/>
      <url>/2019/10/02/MySQL-Tutorial/</url>
      
        <content type="html"><![CDATA[<p>MySQL is a relational database management system developed by MySQL AB of Sweden and currently owned by Oracle. MySQL is one of the most popular relational database management systems. MySQL is one of the best RDBMS (Relational Database Management System) applications for WEB applications.</p><p>MariaDB is a branch of the MySQL source code, which is used in the same way as Mysql, and mariadb outperforms mysql in some respects.</p><p>Next, explain how to use mariab.</p><h2 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h2><p>MySQL/MariaDB 的安装比较简单，下面主要介绍以下 Mac/Linux 上的安装方法，以及基础设置。</p><h3 id="MAC"><a href="#MAC" class="headerlink" title="MAC"></a>MAC</h3><ol><li>安装 Homebrew<br>brew 是 Mac 下的一个包管理工具<br><code>/usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;</code></li><li>检查 Homebrew<br><code>brew doctor</code></li><li>更新 Homebrew<br><code>brew update</code></li><li>确认 MariaDB 版本<br><code>brew info mariadb</code></li><li>安装 MariaDB<br><code>brew install mariadb</code></li><li>运行 MariaDB 的安装程序<br><code>unset TMPDIR</code><br><code>cd /usr/local/opt/mariadb/bin/</code><br><code>mysql_install_db</code></li><li>运行 MariaDB<br>后台启动<br><code>brew services start mariaDB</code><br>前台启动<br><code>mysql.server start</code></li><li>安全的完成安装,重设root用户的密码、移除匿名用户、移除默认的test数据等<br><code>mysql_secure_installation</code></li><li>添加环境变量<br><code>vi ~/.bash_profile</code><br><code>export PATH=$PATH:/usr/local/opt/mariadb/bin:/usr/local/sbin/</code><br>运行生效<br><code>source ~/.bash_profile</code></li><li>修改 root 密码<br>直接运行 <code>mysql</code>,然后输入<code>alter user &#39;root&#39;@&#39;localhost&#39; identified by &#39;new_password&#39;;</code>修改</li><li>登录之后修改 root 密码<br><code>set password for root@localhost=password(&#39;new_password&#39;);</code><br>或者<br><code>update user set password=password(&#39;888&#39;) where user=&#39;root&#39;;</code></li><li>创建用户<br><code>create user &#39;USERNAME&#39;@&#39;HOST&#39; identified by &#39;PASSWORD&#39;;</code></li><li>删除用户<br><code>drop user &#39;USERNAME&#39;@&#39;HOST&#39;;</code></li><li>用户授权<br><code>grant privilege(PRIVILEGE1,PRIVILEGE2) on DATABASE.TABLE to ‘USERNAME&#39;@&#39;HOST&#39; [identified by &#39;PASSWORD&#39;];</code><br>授予所有权限<br><code>grant all on *.* to &#39;USERNAME&#39;@&#39;HOST&#39;;</code><br>刷新权限<br><code>flush privileges;</code><br>查看用户获得的授权<br><code>show grants for &#39;USERNAME&#39;@&#39;HOST&#39;;</code></li><li>显示表结构<br><code>desc TABLE_NAME</code></li></ol><h3 id="RedHat"><a href="#RedHat" class="headerlink" title="RedHat"></a>RedHat</h3><ol><li>安装<br><code>sudo yum install mariadb-server</code></li><li>开启 mariadb 服务<br><code>systemctl start mariadb</code></li><li>设置 mariadb 服务为开机自启<br><code>systemctl enable mariadb</code></li><li>数据库配置<br><code>mysql_secure_installation</code></li><li>设置 MariaDB 字符集为 utf-8<br>编辑 <code>/etc/my.cnf</code>, 输入<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">init_connect='<span class="keyword">SET</span> collation_connection = utf8_unicode_ci<span class="string">'</span></span><br><span class="line"><span class="string">init_connect='</span><span class="keyword">SET</span> <span class="keyword">NAMES</span> utf8<span class="string">'</span></span><br><span class="line"><span class="string">character-set-server=utf8</span></span><br><span class="line"><span class="string">collation-server=utf8_unicode_ci</span></span><br><span class="line"><span class="string">skip-character-set-client-handshake</span></span><br></pre></td></tr></table></figure>编辑 <code>/etc/my.cnf.d/client.cnf</code>, 在 <code>[client]</code> 下面输入<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">default-character-<span class="keyword">set</span>=utf8</span><br></pre></td></tr></table></figure>编辑 <code>/etc/my.cnf.d/mysql-clients.cnf</code>, 在 <code>[mysql]</code> 下面输入<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">default-character-<span class="keyword">set</span>=utf8</span><br></pre></td></tr></table></figure>重启 MariaDB 服务<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart mariadb</span><br></pre></td></tr></table></figure>其他的数据库操作方法与 MAC 一致，数据库的使用方法见下面。</li></ol><h2 id="远程连接"><a href="#远程连接" class="headerlink" title="远程连接"></a>远程连接</h2><p>数据库有许多远程连接的软件，如 navicat 等，下面主要介绍命令行中连接数据库的方法<br><code>mysql -u USER_NAME -h ADDRESS -P PORT -p PASSWORD -D DATABASE_NAME</code><br>端口一般为 <code>3306</code></p><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p>MySQL 用连接软件连接或者使用 mysqladmin 管理的话，可以直接在 用户界面中操作，下面主要介绍在命令行中的使用方法</p><ol><li>创建数据库 <code>create</code><br><code>create database DATABASE_NAME</code></li><li>删除数据库 <code>drop</code><br><code>drop database DATABASE_NAME</code></li><li>选择数据库 <code>use</code><br><code>use DATABASE_NAME</code></li><li><p>MySQL 数据类型</p><ul><li><p>数值类型</p><p>| 类型 | 大小 | 用途 |<br>|:—-:|:—-:|:—-:|<br>|<code>tinyint</code>|<font color=#868686 size=2><em>1</em> 字节</font>|<font color=#868686 size=2>整数</font>|<br>|<code>smallint</code>|<font color=#868686 size=2><em>2</em> 字节</font>|<font color=#868686 size=2>整数</font>|<br>|<code>mediumint</code>|<font color=#868686 size=2><em>3</em> 字节</font>|<font color=#868686 size=2>整数</font>|<br>|<code>int</code>|<font color=#868686 size=2><em>4</em> 字节</font>|<font color=#868686 size=2>整数</font>|<br>|<code>bigint</code>|<font color=#868686 size=2><em>8</em> 字节</font>|<font color=#868686 size=2>整数</font>|<br>|<code>float</code>|<font color=#868686 size=2><em>4</em> 字节</font>|<font color=#868686 size=2>单精度浮点数</font>|<br>|<code>double</code>|<font color=#868686 size=2><em>8</em> 字节</font>|<font color=#868686 size=2>双精度浮点数</font>|</p></li><li><p>日期和时间类型</p><p>| 类型 | 大小 | 格式 | 用途 |<br>|:—-:|:—-:|:—-:|:—-:|<br>|<code>date</code>|<font color=#868686 size=2><em>3</em> 字节</font>|<font color=#868686 size=2>YYYY-MM-DD</font>|<font color=#868686 size=2>日期值</font>|<br>|<code>time</code>|<font color=#868686 size=2><em>3</em> 字节</font>|<font color=#868686 size=2>HH:MM:SS</font>|<font color=#868686 size=2>时间值或持续时间</font>|<br>|<code>year</code>|<font color=#868686 size=2><em>1</em> 字节</font>|<font color=#868686 size=2>YYYY</font>|<font color=#868686 size=2>年份值</font>|<br>|<code>datetime</code>|<font color=#868686 size=2><em>8</em> 字节</font>|<font color=#868686 size=2>YYYY-MM-DD HH:MM:SS</font>|<font color=#868686 size=2>混合日期和时间值</font>|<br>|<code>timestamp</code>|<font color=#868686 size=2><em>4</em> 字节</font>|<font color=#868686 size=2>YYYYMMDDHHMMSS</font>|<font color=#868686 size=2>混合日期和时间的时间戳</font>|</p></li><li><p>字符串类型</p><p>| 类型 | 大小 | 用途 |<br>|:—-:|:—-:|:—-:|<br>|<code>char</code>|<font color=#868686 size=2><em>255</em> 字节</font>|<font color=#868686 size=2>定长字符串</font>|<br>|<code>varchar</code>|<font color=#868686 size=2><em>65535</em> 字节</font>|<font color=#868686 size=2>变长字符串</font>|<br>|<code>tinytext</code>|<font color=#868686 size=2><em>255</em> 字节</font>|<font color=#868686 size=2>短文本字符串</font>|<br>|<code>text</code>|<font color=#868686 size=2><em>65535</em> 字节</font>|<font color=#868686 size=2>长文本数据</font>|<br>|<code>mediumtext</code>|<font color=#868686 size=2><em>16777215</em> 字节</font>|<font color=#868686 size=2>中等长度文本数据</font>|<br>|<code>longtext</code>|<font color=#868686 size=2><em>4294967295</em> 字节</font>|<font color=#868686 size=2>极大文本数据</font>|</p></li></ul></li><li>创建数据表 <code>create</code><br><code>create table TABLE_NAME (COLUMN_NAME1 TYPE1,COLUMN_NAME2 TYPE2);</code><br>具体使用如下<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> <span class="keyword">if</span> <span class="keyword">not</span> <span class="keyword">exists</span> <span class="string">`TABLE_NAME`</span>(</span><br><span class="line">   <span class="string">`runoob_id`</span> <span class="built_in">int</span> <span class="keyword">unsigned</span> auto_increment,</span><br><span class="line">   <span class="string">`runoob_title`</span> <span class="built_in">varchar</span>(<span class="number">100</span>) <span class="keyword">not</span> <span class="literal">null</span>,</span><br><span class="line">   <span class="string">`runoob_author`</span> <span class="built_in">varchar</span>(<span class="number">40</span>) <span class="keyword">not</span> <span class="literal">null</span>,</span><br><span class="line">   <span class="string">`submission_date`</span> <span class="built_in">date</span>,</span><br><span class="line">   primary <span class="keyword">key</span> ( <span class="string">`runoob_id`</span> )</span><br><span class="line">)<span class="keyword">engine</span>=<span class="keyword">InnoDB</span> <span class="keyword">default</span> <span class="keyword">charset</span>=utf8;</span><br></pre></td></tr></table></figure></li></ol><ul><li>如果字段设为 not null，则在操作数据库时如果输入的该字段为 null 就会报错。</li><li>auto_increment 定义为自增属性，一般用于主键，数值会自动 +1</li><li>primary key 关键字用于定义主键，主键可以定义多列，中间用逗号分割</li><li>engine 设置存储引擎，charset 设置编码</li></ul><ol><li>删除数据表 <code>drop</code><br><code>drop table TABLE_NAME</code></li><li>插入数据 <code>insert</code><br><code>insert into TABLE_NAME (COLUMN_NAME1, COLUMN_NAME2, COLUMN_NAME3) values (VALUE1, VALUE2, VALUE3);</code><br>数据为字符串，必须使用 <code>‘ ’</code> 或 <code>&quot; &quot;</code></li><li>数据查询 <code>select</code><br><code>select COLUMN_NAME1,COLUMN_NAME2 from TABLE_NAME where CONDITION limit N offset M;</code><br><code>limit</code> 设置返回的记录数<br><code>offset</code> 指定 <code>select</code> 语句开始查询的数据偏移量，默认为 0<br><code>where</code> 子句可以使用 <code>and</code> 或者 <code>or</code> 指定一个或多个条件，<code>where</code> 也可以用于 <code>delete</code> 或 <code>update</code></li><li>数据更新 <code>update</code><br><code>update TABLE_NAME set COLUMN_NAME1=VALUE1,COLUMN_NAME2=VALUE2 where CONDITION;</code></li><li>删除数据 <code>delete</code><br><code>delete from TABLE_NAME [where CONDITION];</code></li><li>模糊匹配 <code>like</code><br><code>like</code> 后面是条件，条件可以使用正则，<code>like</code> 通常与 <code>%</code> 一起使用，<code>%</code> 表示任意字符，类似于正则表达式中的 <code>*</code>, 如果没有 <code>%</code>, <code>like</code> 相当于 <code>=</code><br><code>select COLUMN1,COLUMN2 from TABLE_NAME where COLUMN like CONDITION1 [and[or]] CONDITION2=VALUE;</code></li><li>union 操作符<br><code>SELECT_STATEMENT1 union [ all | distinct ] SELECT_STATEMENT2;</code><br><code>distinct</code> 可选，删除结果集中重复的数据，<code>union</code> 操作符默认已经删除了重复数据，所以 <code>distinct</code> 对结果没有什么影响<br><code>all</code> 可选，返回所有结果，包含重复数据</li><li>结果排序 <code>order by</code><br><code>select COLUMN1,COLUMN2 from TABLE_NAME1 TABLE_NAME2 order by COLUMN1 [ asc | desc ],COLUMN2 [ asc | desc ];</code><br><code>asc</code> 设置查询结果是升序，默认结果<br><code>desc</code> 设置查询结果是降序</li><li>结果分组 <code>group by</code>、<code>with rollup</code><br><code>select COLUMN_NAME, from TABLE_NAME where CONDITION group by COLUMN_NAME;</code><br><code>group by</code> 对结果进行分组<br><code>with rollup</code> 对结果字段进行相同的统计<br>以上两个语句都可以使用 <code>count</code>、<code>sum</code>、<code>avg</code>等<br><code>coalesce</code> 用来设置字段的取代名称，如果一个字段为 null ，则用 <code>coalesce</code> 中设置的值代替<br><code>select coalesce(COLUMN_NAME,SPARE_COLUMN,SPARE_NAME);</code> 如果 <code>COLUMN_NAME</code> 字段的值为 null，则用 <code>SPARE_COLUMN</code> 字段的值代替，如果两个都为 null，则用 <code>SPARE_NAME</code> 代替。<code>SPARE_COLUMN</code> 和 <code>SPARE_NAME</code> 可以使用多个，从前往后依次检查，直到不为 null 为止</li><li>连接查询 <code>join</code><br><code>inner join</code> 内连接或等值连接，获取两个表中字段匹配关系的记录<br><code>left join</code> 左连接，获取左表所有的记录，即使右表没有对应匹配的记录<br><code>right join</code> 右连接，获取右表所有的记录，即使左表没有对应匹配的记录<br><code>full outer join</code> 完全外连接，完整连接所有表中的数据<br>以上三种连接中空字段全部用 null 填充<br><code>select COLUMN1,COLUMN2,COLUMN3 from TABLE1 inner join TABLE2 on CONDITION;</code></li><li>null 值处理<br>MySQL 中的 null 值处理方法有两个，分别为 <code>is null</code> 和 <code>is not null</code><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> TABLE_NAME <span class="keyword">where</span> <span class="keyword">COLUMN</span> <span class="keyword">is</span> <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> TABLE_NAME <span class="keyword">where</span> <span class="keyword">COLUMN</span> <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">null</span>;</span><br></pre></td></tr></table></figure></li><li>正则表达式 <code>regexp</code></li></ol><div class="table-container"><table><thead><tr><th style="text-align:center">模式</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:center"><code>^</code></td><td style="text-align:left"><font color=#868686 size=2>匹配输入字符串的开始位置。如果设置了 RegExp 对象的 Multiline 属性，^ 也匹配 ‘\n’ 或 ‘\r’ 之后的位置。</font></td></tr><tr><td style="text-align:center"><code>$</code></td><td style="text-align:left"><font color=#868686 size=2>匹配输入字符串的结束位置。如果设置了RegExp 对象的 Multiline 属性，$ 也匹配 ‘\n’ 或 ‘\r’ 之前的位置。</font></td></tr><tr><td style="text-align:center"><code>.</code></td><td style="text-align:left"><font color=#868686  size=2>匹配除 “\n” 之外的任何单个字符。要匹配包括 ‘\n’ 在内的任何字符，请使用象 ‘[.\n]’ 的模式。</font></td></tr><tr><td style="text-align:center"><code>[...]</code></td><td style="text-align:left"><font color=#868686  size=2>字符集合。匹配所包含的任意一个字符。例如， ‘[abc]’ 可以匹配 “plain” 中的 ‘a’。</font></td></tr><tr><td style="text-align:center"><code>[^...]</code></td><td style="text-align:left"><font color=#868686  size=2>负值字符集合。匹配未包含的任意字符。例如， ‘<sup><a href="#fn_abc" id="reffn_abc">abc</a></sup>‘ 可以匹配 “plain” 中的’p’。</font></td></tr><tr><td style="text-align:center">`p1</td><td style="text-align:left">p2</td><td>p3`</td><td><font color=#868686  size=2>匹配 p1 或 p2 或 p3。例如，’z</td><td>food’ 能匹配 “z” 或 “food”。’(z</td><td>f)ood’ 则匹配 “zood” 或 “food”。&lt;/font&gt;</td></tr><tr><td style="text-align:center"><code>*</code></td><td style="text-align:left"><font color=#868686  size=2>匹配前面的子表达式零次或多次。例如，zo<em> 能匹配 “z” 以及 “zoo”。</em> 等价于{0,}。</font></td></tr><tr><td style="text-align:center"><code>+</code></td><td style="text-align:left"><font color=#868686  size=2>匹配前面的子表达式一次或多次。例如，’zo+’ 能匹配 “zo” 以及 “zoo”，但不能匹配 “z”。+ 等价于 {1,}。</font></td></tr><tr><td style="text-align:center"><code>{n}</code></td><td style="text-align:left"><font color=#868686  size=2>n 是一个非负整数。匹配确定的 n 次。例如，’o{2}’ 不能匹配 “Bob” 中的 ‘o’，但是能匹配 “food” 中的两个 o。</font></td></tr><tr><td style="text-align:center"><code>{n,m}</code></td><td style="text-align:left"><font color=#868686  size=2>m 和 n 均为非负整数，其中 n&lt;=m。最少匹配 n 次且最多匹配 m 次。</font></td></tr></tbody></table></div><ol><li>修改表名或字段 <code>alter</code><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> TABLE_NAME <span class="keyword">drop</span> <span class="keyword">COLUMN</span>;                                         <span class="comment"># 删除 TABLE_NAME 中的 COLUMN 字段</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> TABLE_NAME <span class="keyword">add</span> <span class="keyword">COLUMN</span> <span class="keyword">TYPE</span> [ <span class="keyword">first</span> [<span class="keyword">COLUMN</span>] | <span class="keyword">after</span> [<span class="keyword">COLUMN</span>] ]; <span class="comment"># 添加字段</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> TABLE_NAME <span class="keyword">modify</span> <span class="keyword">COLUMN</span> NEW_TYPE;                              <span class="comment"># 修改字段类型</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> TABLE_NAME <span class="keyword">change</span> OLD_COLUMN NEW_COLUMN NEW_TYPE;               <span class="comment"># 修改字段为新字段</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> TABLE_NAME <span class="keyword">modify</span> <span class="keyword">COLUMN</span> <span class="built_in">INT</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="number">100</span>;              <span class="comment"># 修改字段</span></span><br></pre></td></tr></table></figure></li><li>临时表 <code>temporary table</code><br>MySQL 临时表在我们需要保存一些临时数据时是非常有用的。临时表只在当前连接可见，当关闭连接时，MySQL会自动删除表并释放所有空间。</li></ol><p>创建方法与普通表的创建基本类似，只是把 <code>table</code> 修改为 <code>temporary table</code></p><ol><li>防止 SQL 注入<br>所谓SQL注入，就是通过把SQL命令插入到Web表单递交或输入域名或页面请求的查询字符串，最终达到欺骗服务器执行恶意的SQL命令。</li></ol><p>在程序设计中永远不要信任用户的输入，我们必须认定用户输入的数据都是不安全的，我们都需要对用户输入的数据进行过滤处理。</p><ol><li>导出数据表<br>导出到文件 <code>into outfile</code><br><code>select * from TABLE_NAME into outfile &#39;FILE_PATH&#39;</code><br>导出作为原始数据到指定目录 <code>mysqldump</code><br><code>mysqldump -u roop -p --no-create-info --tab=PATH runoob TABLE_NAME</code><br>导出表为 SQL 格式数据到指定文件 <code>mysqldump</code><br><code>mysqldump -u root -p runoob TABLE_NAME &gt; FILE</code><br>导出整个数据库到指定文件<br><code>mysqldump -u root -p runoob &gt; FILE</code><br>备份所有数据<br><code>mysqldump -u root -p --all-databases &gt; FILE</code><br>导入备份数据到 MySQL<br><code>mysql -u root -p DATABASE_NAME &lt; FILE</code><br>使用管道直接将数据导入到远程的服务器上，<br><code>mysqldump -u root -p DATABASE_NAME | mysql -h OTHER_HOST_ADDRESS DATABASE_NAME</code></li><li>导入数据表<br>mysql 命令导入<br><code>mysql -u USER -p PASSWORD &lt; file</code><br>source 命令导入,需要先登录到数据库<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> DATABASE_NAME;</span><br><span class="line"><span class="keyword">use</span> DATABASE_NAME;</span><br><span class="line"><span class="keyword">set</span> <span class="keyword">names</span> utf8;</span><br><span class="line">source FILE</span><br></pre></td></tr></table></figure></li><li>函数<br>MySQL 有很多内置的函数，这里就不一一介绍了。</li></ol>]]></content>
      
      
      <categories>
          
          <category> database </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
            <tag> database </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Django Project Development</title>
      <link href="/2019/09/30/Django-Project-Development/"/>
      <url>/2019/09/30/Django-Project-Development/</url>
      
        <content type="html"><![CDATA[<p>Django is an open source Web application framework written by Python. The framework model of MTV, namely model M, view V and template T, is adopted. It was originally developed to manage some news content oriented websites of the publishing group, that is, CMS (content management system) software. It was issued under BSD license in July 2005.</p><h2 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h2><ol><li>Install python<br>截止目前 <a href="https://www.python.org/downloads/" target="_blank" rel="noopener">python</a> 的最新版本为 <code>python3.7.4</code> ，django 需要的 python 版本如下</li></ol><div class="table-container"><table><thead><tr><th style="text-align:center">Django版本</th><th style="text-align:center">Python版本</th></tr></thead><tbody><tr><td style="text-align:center"><font color=#868686 size=2>1.11</font></td><td style="text-align:center"><font color=#868686 size=2>2.7,3.4,3.5,3.6,3.7</font></td></tr><tr><td style="text-align:center"><font color=#868686 size=2>2.0</font></td><td style="text-align:center"><font color=#868686 size=2>3.4,3.5,3.6,3.7</font></td></tr><tr><td style="text-align:center"><font color=#868686 size=2>2.1, 2.2</font></td><td style="text-align:center"><font color=#868686 size=2>3.5,3.6,3.7</font></td></tr></tbody></table></div><p>python 安装方法比较简单，安装之后记得配置环境变量，这里就不做介绍了。</p><ol><li><p>安装 <code>virtualenv</code></p></li><li><p>Install django<br>创建并激活一个虚拟环境然后执行下面的命令或直接在系统中执行下面的命令<br><code>pip3 install Django</code><br>然后在 python3 环境中执行下面代码，如果输出 django 版本，说明 django 安装成功</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> django</span><br><span class="line">print(django.get_version())</span><br></pre></td></tr></table></figure></li></ol><h2 id="Create-Project"><a href="#Create-Project" class="headerlink" title="Create Project"></a>Create Project</h2><p>运行下面命令创建项目<br><code>django-admin startproject PROJECT_NAME</code><br>创建之后的目录与作用如下<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">PROJECT_NAME/        <span class="comment"># 根目录，项目的容器</span></span><br><span class="line">    manage.py        <span class="comment"># 管理 django 项目的命令行工具</span></span><br><span class="line">    PROJECT_NAME/    <span class="comment"># 项目目录。它是一个纯 python 包，名字是引用内部东西时需要用的 python 包名，如（PROJECT_NAME.urls）</span></span><br><span class="line">        __init__.py  <span class="comment"># 空文件。告诉 python 这个目录是一个 python 包</span></span><br><span class="line">        settings.py  <span class="comment"># django 项目的配置文件</span></span><br><span class="line">        urls.py      <span class="comment"># django 项目的 URL 声明，像网站的“目录”</span></span><br><span class="line">        wsgi.py      <span class="comment"># 作为项目运行在 wsgi 兼容的 web 服务器的入口</span></span><br></pre></td></tr></table></figure><br>用于开发的简易服务器使用以下命令开启<br><code>python3 manage.py runserver</code><br><code>runserver</code> 命令会将服务器设置为监听本机内部 ip 的 8000 端口，想更换端口的话使用下面的命令<br><code>python3 manage.py runserver PORT</code></p><h2 id="Create-APP"><a href="#Create-APP" class="headerlink" title="Create APP"></a>Create APP</h2><ol><li>运行以下命令创建应用<br><code>python3 manage.py startapp APP_NAME</code><br>创建之后的目录如下<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">APP_NAME/</span><br><span class="line">    __init__.py</span><br><span class="line">    admin.py</span><br><span class="line">    apps.py</span><br><span class="line">    migrations/</span><br><span class="line">        __init__.py</span><br><span class="line">    models.py</span><br><span class="line">    tests.py</span><br><span class="line">    <span class="comment"># 这个文件是后期创建的，这个是 URL 映射的文件，创建完之后需要在 PROJECT_NAME/urls.py 中加入 include()</span></span><br><span class="line">    urls.py</span><br><span class="line">    views.py</span><br></pre></td></tr></table></figure></li><li>将应用安装到项目里<br>在 <code>PROJECT_NAME/settings.py</code> 中的 <code>INSTALLED_APPS</code> 中添加 <code>APP_NAME.apps.APP_NAMEConfig</code>—-<code>APP_NAMEConfig</code> 的 <code>APP_NAME</code> 首字母大写。因为 <code>APP_NAMEConfig</code> 类写在文件 <code>APP_NAME/apps.py</code> 中，所以它的点式路径是 <code>APP_NAME.apps.APP_NAMEConfig</code></li></ol><h2 id="View"><a href="#View" class="headerlink" title="View"></a>View</h2><p>添加视图，修改文件 <code>PROJECT_NAME/APP_NAME/views.py</code> 如下<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponse</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">(request)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> HttpResponse(<span class="string">"Hello, world. This is an APP."</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">VIEW_NAME</span><span class="params">(request,PARAMETER)</span>:</span></span><br><span class="line">    response = <span class="string">"This is a simple view"</span></span><br><span class="line">    <span class="keyword">return</span> HttpResponse(response % PARAMETER)</span><br><span class="line"></span><br><span class="line">...</span><br></pre></td></tr></table></figure></p><p>设置路由，修改文件 <code>PROJECT_NAME/urls.py</code> 如下<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path</span><br><span class="line"><span class="keyword">from</span> . <span class="keyword">import</span> views</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">''</span>, views.index, name=<span class="string">'index'</span>),</span><br><span class="line">    path(<span class="string">'ROUTER_NAME'</span>, views.VIEW_NAME, name=<span class="string">'VIEW_NAME'</span>)</span><br><span class="line">    <span class="comment"># 使用尖括号捕获URL 并且以参数的形式发送给视图函数</span></span><br><span class="line">    path(<span class="string">'&lt;ROUTER_NAME:PARAMETER&gt;'</span>, views.VIEW_NAME, name=<span class="string">'VIEW_NAME'</span>) </span><br><span class="line">    ...</span><br><span class="line">]</span><br></pre></td></tr></table></figure></p><p>修改 <code>PROJECT_NAME/urls.py</code> 的内容如下<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> include, path</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">'admin/'</span>, admin.site.urls),</span><br><span class="line">    path(<span class="string">'APP_NAME/'</span>, include(<span class="string">'APP_NAME.urls'</span>)),</span><br><span class="line">    ...</span><br><span class="line">]</span><br></pre></td></tr></table></figure></p><p><code>path()</code> 函数总共有四个参数，分别是<code>route</code>、<code>view</code>、<code>kwargs</code>、<code>name</code>，前两个是必须参数，后两个是可选参数，参数意义如下</p><ul><li><code>route</code> 这是一个匹配 URL 的准则，当 django 响应一个请求时，会从 urlpatterns 的第一项开始，按顺序依次匹配列表中的项，直到找到匹配的项</li><li><code>view</code> 当 django 找到一个匹配的准则，会调用这个特定的视图函数，并传入一个 HttpRequest 对象作为第一个参数，被“捕获”的参数以关键字参数的形式传入</li><li><code>kwargs</code> 任意个关键字参数可以作为一个字典传递给目标视图函数</li><li><code>name</code> 为你的 URL 取名能使你在 django 的任意地方唯一地引用它，尤其是在模板中。这个有用的特性允许你只改一个文件就能全局地修改某个 URL 模式</li></ul><h3 id="Django模版系统"><a href="#Django模版系统" class="headerlink" title="Django模版系统"></a>Django模版系统</h3><p>如果页面的设计写死在视图函数的代码里的，则修改页面的样子需要编辑 Python 代码，如果使用 Django 的模板系统，只要创建一个视图，就可以将页面的设计从代码中分离出来。具体使用方法如下</p><ol><li>在 PROJECT_NAME 目录里创建一个 <code>templates</code> 目录，django 将会在这个目录里查找模版文件</li></ol><blockquote><p>项目的 <code>TEMPLATES</code> 配置项描述了 Django 如何载入和渲染模板。默认的设置文件设置了 <code>DjangoTemplates</code> 后端，并将 <code>APP_DIRS</code> 设置成了 <code>True</code>。这一选项将会让 <code>DjangoTemplates</code> 在每个 <code>INSTALLED_APPS</code> 文件夹中寻找 “templates” 子目录。所以如果 <code>templates</code> 文件夹在 <code>APP_NAME</code> 目录中，就算没有修改 <code>DIRS</code> 设置，Django 也能正确找到 APP_NAME 的模板位置，但是如果目录在其它地方，就必须设置 <code>DIRS</code><br><code>TEMPLATES</code> 配置如下<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">TEMPLATES = [</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">'BACKEND'</span>: <span class="string">'django.template.backends.django.DjangoTemplates'</span>,</span><br><span class="line">        <span class="string">'DIRS'</span>: [os.path.join(BASE_DIR, <span class="string">'templates'</span>)],</span><br><span class="line">        <span class="string">'APP_DIRS'</span>: <span class="literal">True</span>,</span><br><span class="line">        <span class="string">'OPTIONS'</span>: &#123;</span><br><span class="line">            <span class="string">'context_processors'</span>: [</span><br><span class="line">                <span class="string">'django.template.context_processors.debug'</span>,</span><br><span class="line">                <span class="string">'django.template.context_processors.request'</span>,</span><br><span class="line">                <span class="string">'django.contrib.auth.context_processors.auth'</span>,</span><br><span class="line">                <span class="string">'django.contrib.messages.context_processors.messages'</span>,</span><br><span class="line">            ],</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">]</span><br></pre></td></tr></table></figure></p></blockquote><ol><li><p>在 <code>templates</code> 目录里创建一个 <code>APP_NAME</code> 目录，此时模版文件的路径就是 <code>APP_NAME/templates/APP_NAME/VIEW_NAME.html</code>，使用 <code>APP_NAME/VIEW_NAME.html</code> 就可以引用相应的模版了</p></li><li><p><code>APP_NAME/views.py</code> 文件的设置如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create your views here.</span></span><br><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponse</span><br><span class="line"><span class="keyword">from</span> django.template <span class="keyword">import</span> loader</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> app1.models <span class="keyword">import</span> User</span><br><span class="line"><span class="keyword">from</span> app1.models <span class="keyword">import</span> Job</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">(request)</span>:</span></span><br><span class="line">    latest_user_list = User.objects.order_by(<span class="string">'name'</span>)[:<span class="number">3</span>]</span><br><span class="line">    template = loader.get_template(<span class="string">'app1/index.html'</span>)</span><br><span class="line">    context = &#123;</span><br><span class="line">        <span class="string">'latest_user_list'</span> : latest_user_list,</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> HttpResponse(template.render(context,request))</span><br></pre></td></tr></table></figure></li><li><p><code>render()</code>函数<br><code>render()</code> 作用是载入模版，填充上下文，再返回由它生成的 <code>HttpResponse</code> 对象，使用此函数重写 <code>index()</code> 视图如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render</span><br><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponse</span><br><span class="line"><span class="keyword">from</span> app1.models <span class="keyword">import</span> User</span><br><span class="line"><span class="keyword">from</span> app1.models <span class="keyword">import</span> Job</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">(request)</span>:</span></span><br><span class="line">    latest_user_list = User.objects.order_by(<span class="string">'name'</span>)[:<span class="number">3</span>]</span><br><span class="line">    context = &#123;</span><br><span class="line">        <span class="string">'latest_user_list'</span> : latest_user_list,</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">'app1/index.html'</span>, context)</span><br></pre></td></tr></table></figure></li><li><p>抛出404<br>如果查询指定的内容不存在，则抛出一个 <code>Http404</code> 异常</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render</span><br><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponse, Http404</span><br><span class="line"><span class="keyword">from</span> app1.models <span class="keyword">import</span> User</span><br><span class="line"><span class="keyword">from</span> app1.models <span class="keyword">import</span> Job</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">(request, user_name)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        user_detail = User.objects.get(name=user_name)</span><br><span class="line">    <span class="keyword">except</span> User.DoesNotExist:</span><br><span class="line">        <span class="keyword">raise</span> Http404(<span class="string">"User does not exist !"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">'app1/index.html'</span>, &#123;<span class="string">'user'</span>: user_detail&#125;)</span><br></pre></td></tr></table></figure><p><code>get_object_or_404()</code>实现方法如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render, get_object_or_404</span><br><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponse, Http404</span><br><span class="line"><span class="keyword">from</span> app1.models <span class="keyword">import</span> User</span><br><span class="line"><span class="keyword">from</span> app1.models <span class="keyword">import</span> Job</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">(request, user_name)</span>:</span></span><br><span class="line">    user_detail = get_object_or_404(User, name=user_name)</span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">'app1/index.html'</span>, &#123;<span class="string">'user'</span>: user_detail&#125;)</span><br></pre></td></tr></table></figure></li></ol><h3 id="第三方模版系统"><a href="#第三方模版系统" class="headerlink" title="第三方模版系统"></a>第三方模版系统</h3><h2 id="Model"><a href="#Model" class="headerlink" title="Model"></a>Model</h2><ol><li><p>设置时区 <code>TIME_ZONE</code><br>默认为 <code>UTC</code> 是国际标准时间“格林尼治时间”，中国的时间有 <code>Asia/Shanghai</code>、<code>Asia/Chongqing</code><br><code>USE_TZ</code> 用于控制是否使用 UTC 时间（true and false），如果设置为 false，则使用本地时间<br><code>LANGUAGE_CODE</code> 默认为 <code>en-us</code> ，设置中文为 <code>zh-Hans</code></p></li><li><p>编辑 <code>PROJECT_NAME/settings.py</code><br><code>PROJECT_NAME/settings.py</code> 包含了 django 项目设置的 python 模块，配置文件使用 SQLite 作为默认数据库，使用其他数据库则需要安装相应的 python 数据库绑定，具体如下</p><ul><li><code>PostgreSQL</code> 需要安装 <code>psycopg2</code> 包</li><li><code>MySQL</code> 需要安装 <code>DB API driver</code>,如 <code>mysqlclient</code><br><code>mysqlclient</code> 安装方法如下<br><code>pip3 install mysqlclient</code></li><li><p><code>Oracle</code> 需要 <code>cx_Oracle</code> 的副本</p><p>安装完之后需要改变设置中 <code>DATABASES &#39;default&#39;</code> 项目中的一些键值</p></li><li><code>ENGINE</code> 可选值有 <code>django.db.backends.sqlites</code>，<code>django.db.backends.postgresql</code>，<code>django.db.backends.mysql</code> 或 <code>django.db.backends.oracle</code></li><li><code>NAME</code> 数据库的名称。如果使用 SQLite，数据库将是电脑上的一个文件，此时 <code>NAME</code> 是此文件的绝对路径，包括文件名</li><li>如果使用的不是 SQLite ，则必须添加一些额外设置，比如 <code>USER</code>、<code>PASSWORD</code>、<code>HOST</code>，设置如下<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">DATABASES = &#123;</span><br><span class="line">    <span class="string">'default'</span>: &#123;</span><br><span class="line">        <span class="string">'ENGINE'</span>: <span class="string">'django.db.backends.mysql'</span>,</span><br><span class="line">        <span class="string">'NAME'</span>: <span class="string">'mydatabase'</span>,</span><br><span class="line">        <span class="string">'USER'</span>: <span class="string">'mydatabaseuser'</span>,</span><br><span class="line">        <span class="string">'PASSWORD'</span>: <span class="string">'mypassword'</span>,</span><br><span class="line">        <span class="string">'HOST'</span>: <span class="string">'127.0.0.1'</span>,</span><br><span class="line">        <span class="string">'PORT'</span>: <span class="string">'5432'</span>,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ol><blockquote><p>若要使用 django 的 <code>manage.py</code> <code>migrate</code> 命令为您的模型自动创建数据库表，则需要确保 django 有权在您正在使用的数据库中创建和更改表<br>如果你打算手动创建这些表，你可以只需授予 Django <code>select</code>、<code>insert</code>、<code>update</code> 和 <code>delete</code> 权限</p></blockquote><ol><li><p><code>INSTALLED_APPS</code> 设置包括了项目中启用的所有 django 应用，默认为</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">django.contrib.admin         <span class="comment"># 管理员站点</span></span><br><span class="line">django.contrib.auth          <span class="comment"># 认证授权系统</span></span><br><span class="line">django.contrib.contenttypes  <span class="comment"># 内容类型框架</span></span><br><span class="line">django.contrib.sessions      <span class="comment"># 会话框架</span></span><br><span class="line">django.contrib.messages      <span class="comment"># 消息框架</span></span><br><span class="line">django.contrib.staticfiles   <span class="comment"># 管理静态文件的框架</span></span><br></pre></td></tr></table></figure><p>这些应用被默认启用是为了给常规项目提供方便,默认开启的某些应用需要至少一个数据表，故在使用他们之前需要在数据库中创建一些表，命令如下<br><code>python3 manage.py migrate</code><br><code>migrate</code> 命令检查 <code>INSTALLED_APPS</code> 设置，为其中的每个应用创建需要的数据表</p></li><li><p>创建模型<br>编辑 <code>APP_NAME/models.py</code> ，如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MODEL_NAME</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    FIELD_NAME = models.TYPE(max_length=MAX_LENGTH | default = DEFAULT_VALUE)</span><br><span class="line">    ...</span><br></pre></td></tr></table></figure><p><code>TYPE</code> 中字符字段被表示为 <code>CharField</code>，日期时间字段被表示为 <code>DateTimeField</code>，<code>ForeignKey</code> 定义一个关系，将相应的对象关联到另一个对象，详细的字段类型见下表</p></li></ol><div class="table-container"><table><thead><tr><th style="text-align:center">名称</th><th style="text-align:center">类型</th><th style="text-align:center">大小</th><th style="text-align:center">备注</th></tr></thead><tbody><tr><td style="text-align:center"><code>AutoField</code></td><td style="text-align:center"><font color=#868686 size=2><code>int</code> auto increment</font></td><td style="text-align:center"><font color=#868686 size=2><code>int</code></font></td><td style="text-align:center"><font color=#868686 size=2>一般不用，主键一般会自动创建</font></td></tr><tr><td style="text-align:center"><code>IntegerField</code></td><td style="text-align:center"><font color=#868686 size=2><code>int</code> auto increment</font></td><td style="text-align:center"><font color=#868686 size=2><code>64-bit</code></font></td><td style="text-align:center"><font color=#868686 size=2>一般不用，主键一般会自动创建</font></td></tr><tr><td style="text-align:center"><code>BigIntegerField</code></td><td style="text-align:center"><font color=#868686 size=2><code>long int</code></font></td><td style="text-align:center"><font color=#868686 size=2><code>64-bit</code></font></td><td style="text-align:center"></td></tr><tr><td style="text-align:center"><code>BinaryField</code></td><td style="text-align:center"><font color=#868686 size=2><code>binary</code></font></td><td style="text-align:center"><font color=#868686 size=2><code>max_length</code></font></td><td style="text-align:center"></td></tr><tr><td style="text-align:center"><code>BooleanField</code></td><td style="text-align:center"><font color=#868686 size=2><code>bool</code></font></td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center"><code>CharField</code></td><td style="text-align:center"><font color=#868686 size=2><code>char</code></font></td><td style="text-align:center"><font color=#868686 size=2><code>max_length</code></font></td><td style="text-align:center"></td></tr><tr><td style="text-align:center"><code>DateField</code></td><td style="text-align:center"><font color=#868686 size=2><code>date</code></font></td><td style="text-align:center"><font color=#868686 size=2><code>auto_now</code> \</td><td style="text-align:center"><code>auto_now_add</code>&lt;/font&gt;</td><td></td></tr><tr><td style="text-align:center"><code>DateTimeField</code></td><td style="text-align:center"><font color=#868686 size=2>date&amp;time</font></td><td style="text-align:center"><font color=#868686 size=2><code>auto_now</code> \</td><td style="text-align:center"><code>auto_now_add</code>&lt;/font&gt;</td><td></td></tr><tr><td style="text-align:center"><code>DecimalField</code></td><td style="text-align:center"><font color=#868686 size=2>固定精度的十进制</font></td><td style="text-align:center"><font color=#868686 size=2><code>max_digits</code> \</td><td style="text-align:center"><code>decimal_places</code>&lt;/font&gt;</td><td></td></tr><tr><td style="text-align:center"><code>DurationField</code></td><td style="text-align:center"><font color=#868686 size=2>一段时间的字段类型</font></td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center"><code>EmailField</code></td><td style="text-align:center"><font color=#868686 size=2><code>email</code></font></td><td style="text-align:center"><font color=#868686 size=2><code>max_length</code></font></td><td style="text-align:center"></td></tr><tr><td style="text-align:center"><code>FileField</code></td><td style="text-align:center"><font color=#868686 size=2>文件上传类型</font></td><td style="text-align:center"><font color=#868686 size=2><code>upload_to</code> \</td><td style="text-align:center"><code>max_length</code>&lt;/font&gt;</td><td></td></tr><tr><td style="text-align:center"><code>FilePathField</code></td><td style="text-align:center"><font color=#868686 size=2>文件目录类型</font></td><td style="text-align:center"><font color=#868686 size=2><code>path</code> \</td><td style="text-align:center"><code>match</code> \</td><td><code>recursive</code> \</td><td><code>max_length</code>&lt;/font&gt;</td><td></td></tr><tr><td style="text-align:center"><code>ImageField</code></td><td style="text-align:center"><font color=#868686 size=2>图片类型</font></td><td style="text-align:center"><font color=#868686 size=2><code>upload_to</code> \</td><td style="text-align:center"><code>height_field</code> \</td><td><code>width_field</code> \</td><td><code>max_length</code>&lt;/font&gt;</td><td></td></tr><tr><td style="text-align:center"><code>IntegerField</code></td><td style="text-align:center"><font color=#868686 size=2><code>int</code></font></td><td style="text-align:center"><font color=#868686 size=2><code>-2147483648</code> - <code>2147483647</code></font></td><td style="text-align:center"></td></tr><tr><td style="text-align:center"><code>PositiveIntegerField</code></td><td style="text-align:center"><font color=#868686 size=2><code>int</code></font></td><td style="text-align:center"><font color=#868686 size=2><code>0</code> - <code>2147483647</code></font></td><td style="text-align:center"></td></tr><tr><td style="text-align:center"><code>PositiveSmallIntegerField</code></td><td style="text-align:center"><font color=#868686 size=2><code>int</code></font></td><td style="text-align:center"><font color=#868686 size=2><code>0</code> - <code>32767</code></font></td><td style="text-align:center"></td></tr><tr><td style="text-align:center"><code>SmallIntegerField</code></td><td style="text-align:center"><font color=#868686 size=2><code>int</code></font></td><td style="text-align:center"><font color=#868686 size=2><code>-32768</code> - <code>32767</code></font></td><td style="text-align:center"></td></tr><tr><td style="text-align:center"><code>TextField</code></td><td style="text-align:center"><font color=#868686 size=2><code>char</code></font></td><td style="text-align:center"><font color=#868686 size=2><code>max_length</code></font></td><td style="text-align:center"></td></tr><tr><td style="text-align:center"><code>TimeField</code></td><td style="text-align:center"><font color=#868686 size=2><code>time</code></font></td><td style="text-align:center"><font color=#868686 size=2><code>auto_now</code> \</td><td style="text-align:center"><code>auto_now_add</code>&lt;/font&gt;</td><td></td></tr><tr><td style="text-align:center"><code>URLField</code></td><td style="text-align:center"><font color=#868686 size=2><code>URL</code></font></td><td style="text-align:center"><font color=#868686 size=2><code>max_length</code></font></td><td style="text-align:center"></td></tr><tr><td style="text-align:center"><code>ForeignKey</code></td><td style="text-align:center"><font color=#868686 size=2>关联关系字段</font></td><td style="text-align:center"><font color=#868686 size=2><code>to</code> \</td><td style="text-align:center"><code>on_delete</code>&lt;/font&gt;</td></tr></tbody></table></div><ol><li><p>激活模型<br><code>python3 manage.py makemigrations APP_NAME</code><br>运行 <code>makemigrations</code> 命令，django 会检测你对模型文件的修改，并且把修改的部分存储为一次迁移，迁移是 django 对于模型定义（也就是你的数据库结构）的变化的储存形式，其实也只是一些你磁盘上的文件，它被储存在 <code>APP_NAME/migrations/0001_initial.py</code> 里。<br>使用 <code>sqlmigrate</code> 可以查看模型的迁移信息，它可以接收一个迁移的名称，用法如下<br><code>python3 manage.py sqlmigrate APP_NAME 0001</code> 其中 <code>0001</code> 是一个迁移的名称<br>之后如果定义了新模型的话，可以直接运行下面的命令创建<br><code>python3 manage.py migrate</code><br><code>migrate</code> 命令选中所有还没有执行过的迁移（django 通过在数据库中创建一个特殊的表 django_migrations 来跟踪执行过哪些迁移）并应用在数据库上(也就是将你对模型的更改同步到数据库结构上)。</p></li><li><p>改变模型</p><ol><li>编辑 <code>models.py</code> 文件，改变模型</li><li>运行 <code>python3 manage.py makemigrations</code> 为模型的改变生成迁移文件</li><li>运行 <code>python3 manage.py migrate</code> 来应用数据库迁移</li></ol></li></ol><h2 id="Django-API"><a href="#Django-API" class="headerlink" title="Django API"></a>Django API</h2><p>使用下面命令进入交互式 Python 命令行<br><code>python3 manage.py shell</code> 这个命令中 <code>manage.py</code> 会设置 <code>DJANGO_SETTINGS_MODULE</code> 环境变量，这个变量会让 django 根据 <code>PROJECT_NAME/settings.py</code> 文件来设置 python 包的导入路径</p><h3 id="Database"><a href="#Database" class="headerlink" title="Database"></a>Database</h3><p>数据库操作是项目必不可少的，以下介绍 django 的数据库操作的 API</p><ol><li>Insert <code>save()</code>、<code>create()</code><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 插入</span></span><br><span class="line">tmp = MODEL_NAME(FIELD_NAME=‘FIELD_VALUE’,...)</span><br><span class="line">tmp.save()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改</span></span><br><span class="line">MODEL_NAME.FIELD_NAME = <span class="string">'FIELD_VALUE'</span></span><br><span class="line">MODEL_NAME.save()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MODEL_NAME.objects.create(FIELD_NAME=<span class="string">"FIELD_VALUE"</span>,...)</span><br></pre></td></tr></table></figure></li><li>Select <code>objects</code><br>从数据库检索对象要通过模型类的 <code>manager</code> 构建一个 <code>querySet</code>。<br><code>querySet</code> 代表来自数据库中对象的一个集合。它可以有 0 个，1 个或者多个 <code>filters</code>. <code>filters</code>可以根据给定参数缩小查询结果量。在 SQL 的层面上， <code>queryset</code> 对应 <code>select</code> 语句，而过滤器对应类似 <code>where</code> 或 <code>limit</code> 的限制子句。可以通过模型的 <code>manager</code> 获取 <code>querySet</code>。每个模型至少有一个 <code>manager</code>，默认名称是 <code>objects</code>。用法如下<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 检索全部对象，返回值是一个 queryset，包含所有的 MODEL_NAME 对象</span></span><br><span class="line">ALL_MODEL = MODEL_NAME.objects.all()</span><br></pre></td></tr></table></figure>过滤器</li></ol><ul><li>all() —&gt; 查询所有</li><li>filter( **kwargs ) —&gt; 使用过滤器查询</li><li>exclude( **kwargs ) —&gt; 条件查询</li><li>get( **kwargs ) —&gt; 查询<blockquote><p><code>**kwargs</code> 为参数，参数的形式为 <code>FIELD_NAME__LOOKUPTYPE=VALUE</code> （有个双下划线）<br>其中 <code>__LOOKUPTYPE</code> 具体有</p></blockquote></li></ul><div class="table-container"><table><thead><tr><th style="text-align:center">参数</th><th style="text-align:center">作用</th></tr></thead><tbody><tr><td style="text-align:center"><code>__exact</code></td><td style="text-align:center"><font color=#868686 size=2>精确等于</font></td></tr><tr><td style="text-align:center"><code>__iexact</code></td><td style="text-align:center"><font color=#868686 size=2>精确等于，忽略大小写</font></td></tr><tr><td style="text-align:center"><code>__contains</code></td><td style="text-align:center"><font color=#868686 size=2>包含</font></td></tr><tr><td style="text-align:center"><code>__icontains</code></td><td style="text-align:center"><font color=#868686 size=2>包含，忽略大小写</font></td></tr><tr><td style="text-align:center"><code>__gt</code></td><td style="text-align:center"><font color=#868686 size=2>大于</font></td></tr><tr><td style="text-align:center"><code>__gte</code></td><td style="text-align:center"><font color=#868686 size=2>大于等于</font></td></tr><tr><td style="text-align:center"><code>__lt</code></td><td style="text-align:center"><font color=#868686 size=2>小于</font></td></tr><tr><td style="text-align:center"><code>__lte</code></td><td style="text-align:center"><font color=#868686 size=2>小于等于</font></td></tr><tr><td style="text-align:center"><code>__in</code></td><td style="text-align:center"><font color=#868686 size=2>存在于一个list范围内</font></td></tr><tr><td style="text-align:center"><code>__startswith</code></td><td style="text-align:center"><font color=#868686 size=2>以…开头</font></td></tr><tr><td style="text-align:center"><code>__istartswith</code></td><td style="text-align:center"><font color=#868686 size=2>以…开头，忽略大小写</font></td></tr><tr><td style="text-align:center"><code>__endswith</code></td><td style="text-align:center"><font color=#868686 size=2>以…结尾</font></td></tr><tr><td style="text-align:center"><code>__iendswith</code></td><td style="text-align:center"><font color=#868686 size=2>以…结尾，忽略大小写</font></td></tr><tr><td style="text-align:center"><code>__range</code></td><td style="text-align:center"><font color=#868686 size=2>在…范围内</font></td></tr><tr><td style="text-align:center"><code>__year</code></td><td style="text-align:center"><font color=#868686 size=2>日期字段的年份</font></td></tr><tr><td style="text-align:center"><code>__month</code></td><td style="text-align:center"><font color=#868686 size=2>日期字段的月份</font></td></tr><tr><td style="text-align:center"><code>__day</code></td><td style="text-align:center"><font color=#868686 size=2>日期字段的日</font></td></tr><tr><td style="text-align:center"><code>__isnull</code></td><td style="text-align:center"><font color=#868686 size=2>True/False</font></td></tr></tbody></table></div><p>在查询的过程中 <code>pk</code> 表示主键，如<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查询主键为 1 的数据</span></span><br><span class="line">MODEL_NAME.objects.get(pk=<span class="number">1</span>)</span><br></pre></td></tr></table></figure></p><ol><li><p>跨关系查询</p></li><li><p>Delete <code>delete()</code><br>删除方法被命名为 delete()。该方法立刻删除对象，并返回被删除的对象数量和一个包含了每个被删除对象类型的数量的字典,也能批量删除对象。所有 QuerySet 都有个 delete() 方法，它会删除 QuerySet 中的所有成员</p></li><li><p><code>update()</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MODEL_NAME.objects.filter().update(FIELD_NAME=<span class="string">'NEW_FIELD_VALUE'</span>)</span><br></pre></td></tr></table></figure></li></ol><h3 id="原生SQL查询"><a href="#原生SQL查询" class="headerlink" title="原生SQL查询"></a>原生SQL查询</h3><p>Django 允许你用两种方式执行原生 SQL 查询：你可以使用 <code>manager.raw()</code> 来执行原生查询并返回模型实例，或者完全不用模型层 直接执行自定义 SQL<br><code>manager.raw(raw_query,params=none,translations=none)</code><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MODEL_NAME.objects.raw(<span class="string">'SQL statement'</span>)</span><br></pre></td></tr></table></figure><br>除了上面的 <code>manager.raw()</code> 之外，如果想要功能更强大的查询，可以使用下面的方法绕过模型层，直接访问数据库<br>对象 <code>django.db.connection</code> 代表默认数据库连接。要使用这个数据库连接，调用 <code>connection.cursor()</code> 来获取一个指针对象。然后，调用 <code>cursor.execute(sql,[params])</code> 来执行该 SQL 和 <code>cursor.fetchone()</code> 或 <code>cursor.fetchaall()</code> 获取结果数据，使用方法如下<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> connection</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">custom_sql</span><span class="params">(self)</span>:</span></span><br><span class="line">    <span class="keyword">with</span> connection.cursor() <span class="keyword">as</span> cursor:</span><br><span class="line">        cursor.execute(<span class="string">"SQL insert statement"</span>, [self.baz])</span><br><span class="line">        cursor.execute(<span class="string">"SQL select statement"</span>, [self.baz])</span><br><span class="line">        row = cursor.fetchone()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> row</span><br></pre></td></tr></table></figure></p><blockquote><p>要避免 SQL 注入，你绝对不能在 SQL 字符串中用引号包裹 <code>%s</code> 占位符，若要在查询中包含文本的百分号，你需要在传入参数使用两个百分号</p></blockquote><h2 id="Django-管理页面"><a href="#Django-管理页面" class="headerlink" title="Django 管理页面"></a>Django 管理页面</h2><ol><li>创建管理账号<br><code>python3 manage.py createsuperuser</code><br>启动开发服务器之后通过 <code>http://127.0.0.1:8000/admin/</code> 就可以看到管理员登录界面</li><li>添加被管理的应用<br>如果想要一个应用被管理，只需要将应用加入 <code>APP_NAME/admin.py</code> 文件即可，具体如下<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> MODEL_NAME</span><br><span class="line"></span><br><span class="line">admin.site.register(MODEL_NAME)</span><br><span class="line">...</span><br></pre></td></tr></table></figure></li></ol><h2 id="配置Django运行环境"><a href="#配置Django运行环境" class="headerlink" title="配置Django运行环境"></a>配置Django运行环境</h2><p>如果要在生产站点上使用 django ，则需要搭建 Apache 或者 Nginx 服务器，具体搭建方法如下</p><h3 id="Apache-amp-mod-wsgi"><a href="#Apache-amp-mod-wsgi" class="headerlink" title="Apache&amp;mod_wsgi"></a>Apache&amp;mod_wsgi</h3><ol><li>Install Apache</li></ol><h3 id="Nginx-amp-uWSGI"><a href="#Nginx-amp-uWSGI" class="headerlink" title="Nginx&amp;uWSGI"></a>Nginx&amp;uWSGI</h3><ol><li>Install Nginx</li></ol>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> django </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue Project Development</title>
      <link href="/2019/09/30/Vue-Project-Development/"/>
      <url>/2019/09/30/Vue-Project-Development/</url>
      
        <content type="html"><![CDATA[<p>Vue is a progressive JavaScript framework for building user interfaces. Unlike other large frameworks, Vue is designed to be applied layer by layer from bottom to top. The core library of Vue only focuses on the view layer, which facilitates integration with third-party libraries or existing projects.</p><h2 id="Vue-CLI"><a href="#Vue-CLI" class="headerlink" title="Vue-CLI"></a>Vue-CLI</h2><ol><li>安装 @vue/cli<br><code>npm install -g @vue/cli</code><br>卸载 @vue/cli<br><code>npm uninstall -g @vue/cli</code><br>查看 vue 版本<br><code>vue --version</code><br>安装全局扩展(只适用于快速原型开发)<br><code>npm install -g @vue/cli-service-global</code><br>创建项目<br><code>vue create PROJECT_NAME</code><br>在项目中添加插件<br><code>vue add eslint</code><br>使用临时服务器运行<br><code>npm run serve</code><br>打包项目<br><code>npm run build</code> </li></ol>]]></content>
      
      
      <categories>
          
          <category> vue.js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Some Setting of Linux</title>
      <link href="/2019/09/29/Some-Setting-of-Linux/"/>
      <url>/2019/09/29/Some-Setting-of-Linux/</url>
      
        <content type="html"><![CDATA[<p>Linux is a set of free-to-use and free-to-spread Unix-like operationg system. It is a multi-user, multi-task, multi-threaded and multi-CPU operationg system based on POSIX and Unix. It can run major Unix tools, applications and network protocols. It supports 32-bit and 64-bit hardware. Linux inherits Unix’s network-centric design idea and is a stable multi-user network operationg system. Next, I’ll introduce some knowledge about Linux configuration.</p><h2 id="基础操作"><a href="#基础操作" class="headerlink" title="基础操作"></a>基础操作</h2><ol><li><p>窗口模式与命令行模式切换：<code>ctrl+alt+[F1-F6]</code> 或者 <code>init [0-6]</code> 或者 <code>startx</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">各个模式：</span><br><span class="line">0 -&gt; 关机</span><br><span class="line">1 -&gt; 字符界面单用户模式</span><br><span class="line">2 -&gt; 字符界面多用户模式，没有网络</span><br><span class="line">3 -&gt; 字符界面多用户模式</span><br><span class="line">4 -&gt; 没有在使用，用户可以自定义</span><br><span class="line">5 -&gt; 图形界面</span><br><span class="line">6 -&gt; 重新启动</span><br></pre></td></tr></table></figure></li><li><p>运行级别<br><code>runlevel</code> —&gt; 查看当前运行级别<br><code>systemctl get-default</code> —&gt; 查看开机默认运行级别<br><code>systemctl set-default multi-user.target</code> —&gt; 修改开机默认运行级别为 3<br><code>systemctl set-default graphical.target</code> —&gt; 修改开机默认运行级别 5</p></li><li><p>系统语言设置<br>修改系统语言 <code>/etc/locale.conf</code></p></li><li><p>网络设置<br>无线网络连接 <code>iw</code><br><code>iw dev</code> —&gt; 查看可用网卡<br><code>ip link set 网卡名 up</code> —&gt; 启用网卡<br><code>iw 网卡名 scan | grep SSID</code> —&gt; 查看所有可用的无线网络<br><code>wpa_supplicant -B -i 网卡名 -c &lt;(wpa_passphrase &quot;wifi名&quot; &quot;密码&quot;)</code> —&gt; 连接wifi<br>无线网络连接 <code>ip</code><br><code>ip addr</code> —&gt; 查看可用无线网卡<br><code>ip link set wlp3s0 up</code> —&gt; 打开无线网卡 wlp3s0<br><code>ip link show wlp3s0</code> —&gt; 查看网络 wlp3s0 网络接口的状态<br><code>wpa_supplicant -B -t wlp3s0 -c &lt;(wpa_passphrase &quot;wifi名称&quot; &quot;wifi密码&quot;)</code> —&gt; 网络连接<br><code>dhclient wlp3s0</code> —&gt; dhcp 自动分配 ip<br><code>ip addr show wlp3s0</code> —&gt; 查看分配的 ip 地址<br>无线网络连接 <code>nmcli</code><br><code>yum install NetworkManager*</code> —&gt; install nmcli<br><code>nmcli r wifi on</code> —&gt; start wifi<br><code>nmcli dev wifi</code> —&gt; scan available wifi<br><code>nmcli --ask dev wifi connect SSID</code> —&gt; connect network<br><code>nmtui</code> —&gt; graphical network connect</p></li><li><p>防火墙<br><code>firewall-cmd --query-port=8020/tcp</code> —&gt; 查询端口是否开启<br><code>firewall-cmd --add-port=8020/tcp --permanent</code> —&gt; 开启端口<br><code>systemctl start firewalld</code> —&gt; 启动 firewalld<br><code>systemctl status firewalld</code> —&gt; 查看 firewalld状态<br><code>systemctl disable firewalld</code> —&gt; 停止 firewalld<br><code>systemctl stop firewalld</code> —&gt; 禁用 firewalld，关闭防火墙</p></li><li><p>systemctl<br>systemctl是CentOS7的服务管理工具中主要的工具，它融合之前service和chkconfig的功能于一体<br><code>systemctl start firewalld.service</code> —&gt; 启动一个服务<br><code>systemctl stop firewalld.service</code> —&gt; 关闭一个服务<br><code>systemctl restart firewalld.service</code> —&gt; 重启一个服务<br><code>systemctl status firewalld.service</code> —&gt; 显示一个服务的状态<br><code>systemctl enable firewalld.service</code> —&gt; 在开机时启用一个服务<br><code>systemctl disable firewalld.service</code> —&gt; 在开机时禁用一个服务<br><code>systemctl is-enabled firewalld.service</code> —&gt; 查看服务是否开机启动<br><code>systemctl list-unit-files|grep enabled</code> —&gt; 查看已启动的服务列表<br><code>systemctl --failed</code> —&gt; 查看启动失败的服务列表</p></li><li><p>配置firewalld-cmd<br><code>firewall-cmd --version</code> —&gt; 查看版本<br><code>firewall-cmd --help</code> —&gt; 查看帮助<br><code>firewall-cmd --state</code> —&gt; 显示状态<br><code>firewall-cmd --zone=public --list-ports</code> —&gt; 查看所有打开的端口<br><code>firewall-cmd --reload</code> —&gt; ，重启防火墙，更新防火墙规则<br><code>firewall-cmd --get-active-zones</code> —&gt; 查看区域信息<br><code>firewall-cmd --get-zone-of-interface=eth0</code> —&gt; 查看指定接口所属区域<br><code>firewall-cmd --panic-on</code> —&gt; 拒绝所有包<br><code>firewall-cmd --panic-off</code> —&gt; 取消拒绝状态<br><code>firewall-cmd --query-panic</code> —&gt; 查看是否拒绝<br><code>firewall-cmd --zone=public --add-port=80/tcp --permanent</code> —&gt; 在public中永久开放80端口，<code>--permanent</code> 永久生效，没有此参数重启后失效）添加端口<br><code>firewall-cmd --reload</code> —&gt; 重新载入端口<br><code>firewall-cmd --zone=public --query-port=80/tcp</code> —&gt; 查看端口是否开启，<code>--zone</code> 为作用域，默认为 <code>public</code><br><code>firewall-cmd --zone=public --remove-port=80/tcp --permanent</code> —&gt; 删除端口<br><code>firewall-cmd --list-all-zones</code> —&gt; 查看所有的zone信息<br><code>firewall-cmd --get-default-zone</code> —&gt; 查看默认zone是哪一个<br><code>firewall-cmd --zone=internal --change-zone=p3p1</code> —&gt; 临时修改接口p3p1所属的zone为internal<br><code>firewall-cmd --add-service=http</code> —&gt; 暂时开放http<br><code>firewall-cmd --permanent --add-service=http</code> —&gt; 永久开放http<br><code>firewall-cmd --permanent --zone=public --remove-service=ssh</code> —&gt; 从public zone中移除服务<br><code>firewall-cmd --reload</code> —&gt; 重新加载配置</p></li><li><p>SElinux<br>Security Enhanced Linux (SELinux)是一个访问控制服务，基于安全策略加强对系统资源的访问控制。在系统安全的基础上，解决“May <subject> do <action> to <object>”的访问控制问题。</p></li></ol><p>SELinux是一个Linux内核的扩展模块，通过LSM(Linux Security Module)框架在链接时被加入到Linux内核中，SElinux虽然是一款用来提高系统安全性的软件，但也会和好多服务都冲突。</p><p>查看当前状态<br><code>getenforce</code></p><p>临时关闭<br><code>setenforce 0</code></p><p>永久关闭<br>修改 <code>/etc/selinux/config</code> 中的 <code>SELINUX=enforcing</code> 为 <code>SELINUX=disabled</code></p><ol><li><p>CentOS端口命令<br><code>netstat -lntp</code> —&gt; 查看监听(Listen)的端口<br><code>netstat -antp</code> —&gt; 查看所有建立的TCP连接<br>查看Linux系统主机名：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># hostname</span></span><br><span class="line">localhost.localdomain</span><br></pre></td></tr></table></figure><p>查看服务器IP地址：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ifconfig|grep 'inet addr:'|grep -v '127.0.0.1'|cut -d: -f2|awk '&#123; print $1&#125;'</span></span><br><span class="line">192.168.17.238</span><br><span class="line">192.168.1.9</span><br></pre></td></tr></table></figure><p>查看linux网关：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># route |grep default</span></span><br><span class="line">default 192.168.1.1 0.0.0.0 UG 0 0 0 em1</span><br></pre></td></tr></table></figure><p>查看linux打开服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># chkconfig --list|grep 启用 #查看开启的服务</span></span><br><span class="line">sshd 0:关闭 1:关闭 2:启用 3:启用 4:启用 5:启用 6:关闭</span><br><span class="line">httpd 0:关闭 1:关闭 2:关闭 3:启用 4:关闭 5:关闭 6:关闭</span><br></pre></td></tr></table></figure><p>查看服务器DNS配置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat /etc/resolv.conf</span></span><br><span class="line">nameserver 192.168.0.66</span><br><span class="line">nameserver 202.106.0.20</span><br></pre></td></tr></table></figure><p>其他网络信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># iptables -L #查看防火墙规则</span></span><br><span class="line"><span class="comment"># route -n #查看路由表</span></span><br><span class="line"><span class="comment"># netstat -s #查看网络统计信息</span></span><br></pre></td></tr></table></figure></li><li><p>.bashrc<br><code>PS1=&quot;[\u@\h \d \A \W]\$&quot;</code></p></li></ol><p><code>\[\e[F;Bm\] cotent \[\e[0m\]</code> —&gt; 颜色设置</p><p>下面是我的设置<br><code>PS1=&quot;[\[\e[37;41m\]\u@\h\[\e[0m\]\[\e[37;42m\]\d \A\[\e[0m\]\[\e[37;43m\]\W\[\e[0m\]\[\e[37;0m\]]\$\[\e[0m\]&quot;</code></p><h2 id="配置软件源"><a href="#配置软件源" class="headerlink" title="配置软件源"></a>配置软件源</h2><p>安装epel源 <code>rpm -ivh http://dl.fedoraproject.org/pub/epel/8/Everything/x86_64/Packages/e/epel-release-8-5.el8.noarch.rpm</code></p><h2 id="常用工具及用法"><a href="#常用工具及用法" class="headerlink" title="常用工具及用法"></a>常用工具及用法</h2><p>Linux中有好多非常有用的命令行工具，也有好多好玩的命令行工具，下面笔者介绍一些工具，可能一次性写的不全，后面会慢慢的补上去。</p><h3 id="cmatrix"><a href="#cmatrix" class="headerlink" title="cmatrix"></a>cmatrix</h3><ul><li>MAC 系统安装方法：<code>brew install cmatrix</code></li><li>RedHat 系Linux安装方法：<code>sudo yum install cmatrix</code></li><li>Ubuntu 系Linux安装方法：<code>sudo apt-get install cmatrix</code></li><li><p>Arch 系Linux安装方法：<code>sudo pacman -S cmatrix</code></p><p>  如果没有配置相应的软件园，没法用包管理工具直接安装的可以选择编译安装，安装方法如下：</p></li></ul><ol><li>访问 GitHub 项目地址 <code>https://github.com/abishekvashok/cmatrix</code> 在 releases 中下载 cmatrix-1.2.tar，也可以使用 <code>wget</code> 命令下载</li><li>解压 cmatrix-1.2.tar ，解压的时候会用到 <code>tar</code>，如果没有安装的话请使用命令安装，以 CentOS 为例 <code>sudo yum install tar</code>，解压命令为 <code>tar -xvf cmatrix-1.2.tar</code></li><li>‘cd cmatrix’</li><li>‘./configure’</li><li>‘make &amp;&amp; make install’，如果编译失败的话，使用 <code>yum install ncurses-devel</code> 安装 ncurses-devel 后再编译安装</li></ol><p>使用方法：直接用 <code>cmatrix</code> 命令就可以运行，还有一些可选项如下<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">-a：异步滚动</span><br><span class="line">-b：启用粗体字符</span><br><span class="line">-b：所有粗体字符（覆盖-b）</span><br><span class="line">-f：强制启用linux<span class="variable">$term</span>类型</span><br><span class="line">-l：Linux模式（使用矩阵控制台字体）</span><br><span class="line">-o：使用旧式滚动</span><br><span class="line">-h：打印使用和退出</span><br><span class="line">-n：无粗体字符（覆盖-b和-b，默认）</span><br><span class="line">-s：”屏幕保护程序“模式，在第一次按键时退出</span><br><span class="line">-x：窗口模式，如果您的 `xterm` 使用 `mtx.pcf`，则使用</span><br><span class="line">-v：打印版本信息并退出</span><br><span class="line">-u [0-10]（默认4）：屏幕更新延迟</span><br><span class="line">-C [颜色]：将此颜色用于矩阵（默认为绿色）</span><br></pre></td></tr></table></figure><br>运行效果如下<br><img src="CMATRIX.png" alt="CMATRIX"></p><h3 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h3><ol><li>python3.7 install<br>problem：<code>ModuleNotFoundError:No module named &#39;_ctypes&#39;</code><br>solution：<code>yum install libffi-devel -y</code></li></ol><h3 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h3><p>Git是一个开源的分布式版本控制系统，可以有效、高速地处理从很小到非常大的项目版本管理。Git 是 Linus Torvalds 为了帮助管理 Linux 内核开发而开发的一个开放源码的版本控制软件。下面简单介绍一下Git。</p><p>Git的工作流程是：<em>Working Directory —&gt; Stage(Index) —&gt; Repository(HEAD)</em><br><code>git config --global user.name &quot;name&quot;</code>          ;set user name<br><code>git config --global user.email &quot;email&quot;</code>        ;set user email<br><code>git config --list</code>                             ;list all config</p><p><code>git init</code>                                      ;The current directory is Git’s repository directory.Initialized empty Git repository</p><p><code>git add file README.md</code>                        ;add file to Stage<br><code>git commit -m &quot;add a readme file&quot;</code>             ;commit file form Stage to repository<br><code>git status</code>                                    ;Check git’s current working status<br><code>git reset README.md</code>                           ;Undo the stage changes to working directory<br><code>git checkout -- README.md</code>                     ;Overwrite the contents of working directory with the contents of the stage<br><code>git log</code>                                       ;View historical submission history</p><p><em>Working Directory —(add)—&gt; Stage(Index) —(commit)—&gt; Repository(HEAD)</em><br><em>Working Directory &lt;—(checkout)— Stage(Index) &lt;—(reset)— Repository(HEAD)</em></p><p><code>git reset --soft/--mixed/--hard HEAD~</code><br><code>git reset [id]</code></p><p><code>git diff</code>                                      ;Compare Stage and Working Directory<br><code>git diff id1 id2</code>                              ;Compare snapshots(repository) with id 1 and snapshots(repository) with id 2<br><code>git diff id</code>                                   ;Compare repository with id and the contents of the working directory<br><code>git diff HEAD</code>                                 ;Compare the latest snapshots(repository) and the contents of the working directory<br><code>git diff --cached id</code>                          ;Compare repository with id and the contents of the stage</p><p><code>git commit --amend -m &quot;new instructions&quot;</code>      ;Edit the latest submission instructions<br><code>git rm name</code>                                   ;Delete files from git<br><code>git mv [oldname] [new name]</code>                   ;Modify file name</p><p><code>git branch [branch name]</code>                      ;Create a branch which name is [branch name]<br><code>git checkout [branch name]</code>                    ;Switch branch which name is [branch name]<br><code>git log --decorate [--oneline]</code>                ;Show all references to the submission<br><code>git log --decorate --oneline --graph --all</code><br><code>git merge [branch name]</code>                       ;Merge branch to the current branch<br><code>git branch -d [branch name]</code>                   ;Delete branch<br><code>git branch --delete [branch name]</code><br><code>git show</code>                                      ;Detailed display of the last change record<br><code>git log -p [file name]</code>                         ;View detailed edit history of a file</p><h2 id="用户管理"><a href="#用户管理" class="headerlink" title="用户管理"></a>用户管理</h2><p>Linux 有很严格的用户权限，我们可以通过用户管理命令创建或删除用户，设置用户组以及为每个用户设置权限。下面我介绍以下Linux中常用的用户管理命令。</p><ul><li><code>useradd</code> —&gt; 建立用户</li><li><code>userdel</code> —&gt; 删除用户</li><li><code>usermod</code> —&gt; 修改用户信息</li><li><code>passwd</code> —&gt; 设置密码</li><li><code>chage</code> —&gt; 密码老化</li><li><code>groupadd</code> —&gt; 添加组</li><li><code>groupdel</code> —&gt; 删除组账户</li><li><code>groupmod</code> —&gt; 修改组</li><li><code>newgrp</code> —&gt; 转换组</li><li><code>groups</code> —&gt; 显示组</li><li><code>gpasswd</code> —&gt; 添加用户到组</li><li><code>whoami</code> —&gt; 显示当前用户名称</li><li><code>who</code> —&gt; 显示登陆用户</li><li><code>id</code> —&gt; 显示用户信息</li><li><code>pwck</code> —&gt; 检测账户</li><li><code>grpck</code> —&gt; 检测用户组账户</li><li><code>chsh</code> —&gt; 设置 <code>shell</code></li><li><code>chfn</code> —&gt; 修改用户信息</li></ul><h2 id="进程管理"><a href="#进程管理" class="headerlink" title="进程管理"></a>进程管理</h2><p>进程是正在运行的程序实体，并且包括这个运行的程序中占据的所有系统资源，比如说CPU（寄存器），IO，内存，网络资源等。很多人在回答进程的概念的时候，往往只会说它是一个运行的实体，而会忽略掉进程所占据的资源。比如说，同样一个程序，同一时刻被两次运行了，那么他们就是两个独立的进程。接下来我介绍一些常用的进程管理命令。</p><ul><li><code>at</code> —&gt; 定时运行命令，指定时刻执行指定命令</li><li><code>atq</code> —&gt; 查询已经设定的命令序列</li><li><code>atrm</code> —&gt; 删除已经设定的命令序列</li><li><p><code>batch</code> —&gt; 系统负载低于一个设定值（0，8），执行设定的命令序列</p></li><li><p><code>bg</code> —&gt; 后台运行命令，使一个被挂起的进程在后台执行 （快捷键 <kbd>Ctrl</kbd> + <kbd>z</kbd>）</p></li><li><code>fg</code> —&gt; 挂起程序，使一个被挂起的命令在前台执行</li><li><code>jobs</code> —&gt; 显示后台程序</li><li><p><code>kill</code> —&gt; 终止进程</p></li><li><p><code>crontab</code> —&gt; 安装、删除或列出任务表，该配置由 <code>cron</code> 守护进程在后台执行</p></li><li><code>ps</code> —&gt; 查看权限、查看系统中进程的状态</li><li><code>pstree</code> —&gt; 列出当前进程的树状结构</li><li><code>top</code> —&gt; 显示系统当前的进程状态</li><li><code>nice</code> —&gt; 改变程序执行的优先权等级</li><li><code>renice</code> —&gt; 修改一个正在运行的进程的优先权</li><li><code>sleep</code> —&gt; 暂停进程</li><li><code>nohup</code> —&gt; 退出系统之后继续工作</li><li><code>pgrep</code> —&gt; 查找当前运行进程并列出匹配给定条件的进程 <code>pid</code></li><li><code>chkconfig</code> —&gt; 检查、设置系统的各种服务</li></ul><hr><p>进程一般分为：<em>交互进程、批处理进程、守护进程</em><br>进程组成：<em>代码段、数据段、堆栈段</em><br><code>PCB</code> 在进程核心堆栈底部，不需要额外分配空间</p><h2 id="poppen-与-system-类似，它以管道方式处理输出"><a href="#poppen-与-system-类似，它以管道方式处理输出" class="headerlink" title="poppen() 与 system 类似，它以管道方式处理输出"></a><code>poppen()</code> 与 <code>system</code> 类似，它以管道方式处理输出</h2><h2 id="磁盘管理"><a href="#磁盘管理" class="headerlink" title="磁盘管理"></a>磁盘管理</h2><ul><li><code>df</code> —&gt; 查看磁盘信息，显示磁盘文件系统与使用情况</li><li><code>du</code> —&gt; 某目录下所有文件和子目录的占用字盘的大小</li><li><code>dd</code> —&gt; 从标准输入或文件读取数据，依指定格式转换数据，再输出</li><li><code>fdisk</code> —&gt; 磁盘分区</li><li><code>mount</code> —&gt; 加载文件系统</li><li><code>umount</code> —&gt; 卸载文件系统</li><li><code>mkfs</code> —&gt; 建立各种文件系统</li><li><code>mkfs.ext2</code> —&gt; 建立 <code>ext2</code>/<code>ext3</code> 文件系统</li><li><code>mkbootdisk</code> —&gt; 建立系统启动盘</li><li><code>fsck</code> —&gt; 检查文件系统</li><li><code>fsck.ext2</code> —&gt; 检查 <code>ext2</code>/<code>ext3</code> 文件系统</li><li><code>hdparm</code> —&gt; 检测、显示与设定磁盘参数</li><li><code>mkswap</code> —&gt; 建立交换分区</li><li><code>dump</code> —&gt; 配分文件系统</li><li><code>restore</code> —&gt; 还原文件</li><li><code>sync</code> —&gt; 将内存缓冲区数据写入磁盘</li><li><code>e2label</code> —&gt; 设定或显示 <code>ext2</code>/<code>ext3</code> 分区卷标</li><li><code>badblock</code> —&gt; 检查磁盘</li><li><code>quota</code> —&gt; 显示磁盘已使用空间与限制</li><li><code>quotacheck</code> —&gt; 检查磁盘的使用空间与限制</li><li><code>quotaoff</code> —&gt; 关闭磁盘空间限制</li><li><code>quotaon</code> —&gt; 开启磁盘空间限制</li><li><code>quotastats</code> —&gt; 显示磁盘空间限制</li><li><code>repquota</code> —&gt; 检查磁盘空间限制状态</li><li><code>parted</code> —&gt; 磁盘分区工具</li></ul><h2 id="文件系统处理"><a href="#文件系统处理" class="headerlink" title="文件系统处理"></a>文件系统处理</h2><p>文件系统是操作系统用于明确存储设备（常见的是磁盘及基于NAND Flash的固态硬盘）或分区上的文件的方法和数据结构；即在存储设备上组织文件的方法。操作系统中负责管理和存储文件信息的软件机构称为文件管理系统，简称文件系统。文件系统由三部分组成：文件系统的接口，对对象操纵和管理的软件集合，对象及属性。从系统角度来看，文件系统是对文件存储设备的空间进行组织和分配，负责文件存储并对存入的文件进行保护和检索的系统。具体地说，它负责为用户建立文件，存入、读出、修改、转储文件，控制文件的存取，当用户不再使用时撤销文件等。下面介绍一些常用的文件操作命令。</p><ul><li><code>cat</code> —&gt; 显示文本文件内容</li><li><code>less</code> —&gt; 分屏显示文件</li><li><code>grep</code> —&gt; 查找字符串</li><li><code>head</code> —&gt; 显示文件内容的前多少行</li><li><code>tail</code> —&gt; 显示文件内容的后多少行</li><li><code>sort</code> —&gt; 按照顺序显示文件内容</li><li><code>uniq</code> —&gt; 忽略文件中的重复行</li><li><code>diff</code> —&gt; 比较两个文件</li><li><code>diffstat</code> —&gt; 读取 <code>diff</code> 的结果，统计各文件的插入、删除、修改等差异计量</li><li><code>file</code> —&gt; 通过探测文件内容来判断文件类型</li><li><code>date</code> —&gt; 显示日期和时间</li><li><code>script</code> —&gt; 记录执行过的所有命令以及命令的输出</li><li><code>apropos</code> —&gt; 在 <code>whatis</code> 资料库中搜寻特定字串</li><li><code>locate</code> —&gt; 查找符合条件的文件</li><li><code>basename</code> —&gt; 显示文件或目录的基本名称</li><li><code>chattr</code> —&gt; 改变文件属性，防止关键文件被修改</li><li><code>cksum</code> —&gt; 打印每个文件的 <code>CRC</code> 校验以及字节统计</li><li><code>cmp</code> —&gt; 比较文件差异</li><li><code>split</code> —&gt; 切割文件</li><li><code>dirname</code> —&gt; 显示文件除名字外的路径</li><li><code>findfs</code> —&gt; 改变列表或用户 <code>ID</code> 查找文件系统</li><li><code>ln</code> —&gt; 链接文件或目录</li><li><code>lndir</code> —&gt; 链接目录内容</li><li><code>lsattr</code> —&gt; 改变文件属性</li><li><code>od</code> —&gt; 以八进制显示文件内容</li><li><code>paste</code> —&gt; 把每个文件以列对列的方式一列一列的合并</li><li><code>stat</code> —&gt; 以文字的格式显示 <code>inode</code> 内容</li><li><code>tee</code> —&gt; 读取标准输入的数据，并将其内容输出成文件</li><li><code>tmpwatch</code> —&gt; 删除临时文件</li><li><code>tree</code> —&gt; 以树状图显示目录内容</li><li><code>umask</code> —&gt; 指定建立文件时预设的权限掩码</li><li><code>chmod</code> —&gt; 改变文件或目录权限</li><li><code>chgrp</code> —&gt; 改变文件或目录所属群组</li><li><code>chown</code> —&gt; 改变文件拥有者或群组</li></ul><h2 id="网络管理"><a href="#网络管理" class="headerlink" title="网络管理"></a>网络管理</h2><p>Linux 继承了 Unix 的特性，具有非常强大的网络功能，其支持所有的英特网协议，包括 TCP/IPv4、TCP/IPv6 和链路层拓扑程序等，且可以利用 Unix 的网络特性开发出新的协议栈。下面介绍一些常用的网络管理命令。</p><ul><li><code>arp</code> —&gt; 管理系统中的 <code>ARP</code> 高速缓存</li><li><code>arpwatch</code> —&gt; 监听 <code>ARP</code> 记录</li><li><code>adsl</code> —&gt; 调制解调器命令</li><li><code>ifconfig</code> —&gt; 设置网络接口</li><li><code>iwconfig</code> —&gt; 设置无线网卡</li><li><code>hostname</code> —&gt; 显示主机名 （主机名配置文件： <code>/etc/hosts</code>）</li><li><code>ifup</code> —&gt; 激活设备</li><li><code>ifdown</code> —&gt; 禁用网络设备</li><li><code>mii-tool</code> —&gt; 调整网卡模式</li><li><code>route</code> —&gt; 设置路由表</li><li><code>netstat</code> —&gt; 查看网络连接</li><li><code>ping</code> —&gt; 检测网卡接口</li><li><code>minicom</code> —&gt; 设置调制解调器</li><li><code>pppd</code> —&gt; 建立 <code>PPP</code> 连接</li><li><code>pppstats</code> —&gt; 显示 <code>PPP</code> 连接状态</li><li><code>chat</code> —&gt; 拨号命令</li><li><code>traceroute</code> —&gt; 显示数据包到主机间的路径</li><li><code>rcp</code> —&gt; 远程复制</li><li><code>finger</code> —&gt; 查找并显示用户信息</li><li><code>tcpdump</code> —&gt; 网络数据分析器</li><li><code>ip</code> —&gt; 网络集成命令工具</li></ul><h2 id="远程连接提示"><a href="#远程连接提示" class="headerlink" title="远程连接提示"></a>远程连接提示</h2><p>Linux 远程用 <code>SSH</code> 登录会有提示信息，这个提示能够用来发布信息或者告诉登录者一些使用注意事项，下面我介绍以下登录提示信息的设置方法。</p><p>登录提示信息设置的文件有三个，分别为：<code>/etc/issue</code>、<code>/etc/issue.net</code>、<code>/etc/motd</code>， 其中<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">/etc/issue         <span class="comment"># 本地登录显示信息，本地登陆前</span></span><br><span class="line">/etc/issue.net     <span class="comment"># 网络登录显示信息，登陆后显示</span></span><br><span class="line">/etc/motd          <span class="comment"># 登陆后提示信息</span></span><br><span class="line"></span><br><span class="line">注：\m：机器类型</span><br><span class="line">   \r：内核版本</span><br><span class="line">   \d：日期</span><br><span class="line">   \t：时间</span><br><span class="line">   \l：登录到的终端</span><br><span class="line">   \n：主机名</span><br><span class="line">   \s：操作系统类型</span><br><span class="line">   \u：已经登录的用户数</span><br><span class="line">   \v：操作系统版本</span><br></pre></td></tr></table></figure><br>下面是笔者自己的服务器的提示信息<br><img src="MOYAN.png" alt="MOYAN"><br>下面分享一个好看的字符 logo 以及笔者自己的提示信息形式<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">-----------------------------------------------------------------------------------</span><br><span class="line">*          .=&quot;&quot;=.                                                                 *</span><br><span class="line">*         / _  _ \                                                                *</span><br><span class="line">*        |  d  b  |                                                               *</span><br><span class="line">*        \   /\   /         Welcome to RICS computer server !                     *</span><br><span class="line">*       ,/&apos;-=\/=-&apos;\,        This is the server developed by                       *</span><br><span class="line">*      / /        \ \       XXXXXXXX XXXXX XXXXXXXXXX XXXXXXXXXX CO.LTD for       *</span><br><span class="line">*     | /   RICS   \ |      XXXXXX XXXXXX XXXXXX CO.LTD !                         *</span><br><span class="line">*     \/ \        / \/      Don&apos;t touch anyone except the administrator !         *</span><br><span class="line">*         &apos;.    .&apos;                                                                *</span><br><span class="line">*         _|`~~`|_                                                                *</span><br><span class="line">*         /|\  /|\                                                                *</span><br><span class="line">-----------------------------------------------------------------------------------</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> OS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> OS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>The X86 Architecture</title>
      <link href="/2019/09/28/X86-Instruction-Knowledge/"/>
      <url>/2019/09/28/X86-Instruction-Knowledge/</url>
      
        <content type="html"><![CDATA[<p>The X86 architecture is a general processor architecture developed by Intel. It has been 40 years since the first version was released. At present, almost all PC processors use x86 architecture. The follow are some notes on previous studies of X86 architecture.</p><h2 id="X86字符集（指令）"><a href="#X86字符集（指令）" class="headerlink" title="X86字符集（指令）"></a>X86字符集（指令）</h2><ul><li>行结束（<code>EOL</code>）字符的数字值为10</li><li><code>POP</code> —&gt; 出栈指令</li><li><code>EQU</code> —&gt; 等值语句</li><li><code>PUSH</code> —&gt; 将一个源码中指定的16位或者32位寄存器或内存值入栈</li><li><code>PUSHF</code> —&gt; 将16位标志寄存器的值入栈</li><li><code>PUSHFD</code> —&gt; 将32位<code>EFLAGS</code>入栈</li><li><code>PUSHA</code> —&gt; 将所有8个16位通用寄存器入栈</li><li><code>PUSHAD</code> —&gt; 将所有8个32位通用寄存器入栈</li><li><code>CLC</code> —&gt; <code>CF</code>标志位清零   </li><li><code>STC</code> —&gt; <code>CF</code>标志位置1   </li></ul><h2 id="X86条件转移指令"><a href="#X86条件转移指令" class="headerlink" title="X86条件转移指令"></a>X86条件转移指令</h2><ul><li><code>JNZ</code> —&gt; 不为零跳转（零标志位 <code>EFLAGS</code> 第6位 <code>ZF</code>）</li><li><code>JMP</code> —&gt; 跳转指令（无条件）</li><li><code>MOVSX</code> —&gt; 带符号扩展一起移动</li><li><code>MUL</code> —&gt; 无符号乘</li><li><code>DIV</code> —&gt; 无符号除</li><li><code>IMUL</code> —&gt; 有符号乘</li><li><code>IDIV</code> —&gt; 有符号除</li><li><code>CMP</code> —&gt; 算数比较指令（源操作数 - 目标操作数）  注：操作数不受影响，影响标志位</li><li><code>JE</code> —&gt; 相等转（此时 <code>ZF==1</code>）</li><li><code>JNE</code> —&gt; 不等转（此时 <code>ZF==0</code>）注：<code>ZF</code> 为零标志位，为 <code>EFLAGS</code> 第6位</li><li><code>JB</code> —&gt; 以下则转（此时 <code>CF==1</code>）</li><li><p><code>JNB</code> —&gt; 以下或等于转（此时 <code>CF==1&amp;&amp;ZF==1</code>）注：<code>CF</code> 为进位标志，为 <code>EFLAGS</code> 第0位</p></li><li><p><code>AND</code> —&gt; 与</p></li><li><code>OR</code> —&gt; 或</li><li><code>XOR</code> —&gt; 异或</li><li><code>NOT</code> —&gt; 非</li><li><code>SHL</code> —&gt; 左移</li><li><code>SHR</code> —&gt; 右移 注：以上两个移位为不循环，移入 <code>CF</code> （<code>EFLAGS</code> 第0位）</li><li><code>ROL</code> —&gt; 循环左移</li><li><code>ROR</code> —&gt; 循环右移 注：以上两个移位不带进位 <code>CF</code></li><li><code>RCL</code> —&gt; 循环左移</li><li><code>RCR</code> —&gt; 循环右移 注：以上两个移位连同进位位 <code>CF</code> 一起移动</li></ul><h2 id="X86指令常识"><a href="#X86指令常识" class="headerlink" title="X86指令常识"></a>X86指令常识</h2><ul><li>堆栈朝着低内存的方向向下增长</li><li>堆栈区在内存的最高位处</li><li>在堆栈中读到 <code>SP/ESP</code> 的值，<code>SP/ESP</code> 不会改变</li><li>内存前 1024 字节存放中断向量表，编号 0-255 ，每项4字节，通过 <code>INT 80H</code> 调用，服务编号在寄存器 <code>EAX</code> 中</li><li>在任何一个时间段中，只有一个堆栈在工作，（<code>ESP</code>指向栈顶）</li><li>UNIX 内核调用面向缓冲区而非面向字面量</li><li>段寄存器不能进行按位逻辑运算，可以将段寄存器中内容复制到通用寄存器中，进行逻辑运算之后再拷回段寄存器中</li><li>段栈帧：<ul><li><code>push ebp</code></li><li><code>mov ebp,esp</code></li><li>之后一般不要改变 <code>ebp</code> 的值，若改变了也要能恢复</li></ul></li></ul><h2 id="常用寄存器"><a href="#常用寄存器" class="headerlink" title="常用寄存器"></a>常用寄存器</h2><ul><li><p>16 位段寄存器（32 位前加 <code>E</code>）</p><ul><li><code>CS</code> （代码段 code segment） -&gt; 指向 1M 内存的某个地址</li><li><code>DS</code> （数据段 data segment）</li><li><code>SS</code> （堆栈段 stack segment）</li><li><code>ES</code> （附加段寄存器 extra segment）</li><li><code>FS</code>、<code>GS</code> -&gt; 是 <code>ES</code> 的克隆</li><li></li></ul></li><li><p>16 位通用寄存器（32 位前加 <code>E</code>）</p><ul><li><code>AX</code>、 <code>BX</code>、 <code>CX</code>、 <code>DX</code> <ul><li>32 位为 <code>EAX</code>、 <code>EBX</code>、 <code>ECX</code>、 <code>EDX</code></li><li>低 16 位为 <code>AX</code>、 <code>BX</code>、 <code>CX</code>、 <code>DX</code></li><li>低 16 为被分为两个 8 位，<code>AH</code>、 <code>AL</code>、 <code>BH</code>、 <code>BL</code>、 <code>CH</code>、 <code>CL</code>、 <code>DH</code>、 <code>DL</code></li></ul></li><li><code>BP</code>、 <code>SI</code>、 <code>DI</code>、 <code>SP</code><ul><li>低 16 位为 <code>BP</code>、 <code>SI</code>、 <code>DI</code>、 <code>SP</code></li><li>整个 32 位为 <code>EBP</code>、 <code>ESI</code>、 <code>EDI</code>、 <code>ESP</code> （<code>ESP</code>为堆栈）</li></ul></li></ul></li><li><p><code>IP</code> 为指令指针寄存器，在 <code>CS</code> 中移动</p></li><li>标志寄存器 <code>FLAGS</code>（16位）和<code>EFLAGS</code>（32位）</li></ul><div class="table-container"><table><thead><tr><th style="text-align:center"><font color=#B73650 size=1>…</font></th><th style="text-align:center"><font color=#B73650 size=1>21</font></th><th style="text-align:center"><font color=#B73650 size=1>20</font></th><th style="text-align:center"><font color=#B73650 size=1>19</font></th><th style="text-align:center"><font color=#B73650 size=1>18</font></th><th style="text-align:center"><font color=#B73650 size=1>17</font></th><th style="text-align:center"><font color=#B73650 size=1>16</font></th><th style="text-align:center"><font color=#B73650 size=1>15</font></th><th style="text-align:center"><font color=#B73650 size=1>14</font></th><th style="text-align:center"><font color=#B73650 size=1>13</font></th><th style="text-align:center"><font color=#B73650 size=1>12</font></th><th style="text-align:center"><font color=#B73650 size=1>11</font></th><th style="text-align:center"><font color=#B73650 size=1>10</font></th><th style="text-align:center"><font color=#B73650 size=1>9</font></th><th style="text-align:center"><font color=#B73650 size=1>8</font></th><th style="text-align:center"><font color=#B73650 size=1>7</font></th><th style="text-align:center"><font color=#B73650 size=1>6</font></th><th style="text-align:center"><font color=#B73650 size=1>5</font></th><th style="text-align:center"><font color=#B73650 size=1>4</font></th><th style="text-align:center"><font color=#B73650 size=1>3</font></th><th style="text-align:center"><font color=#B73650 size=1>2</font></th><th style="text-align:center"><font color=#B73650 size=1>1</font></th><th style="text-align:center"><font color=#B73650 size=1>0</font></th></tr></thead><tbody><tr><td style="text-align:center"><font color=#B73650 size=1>ID</font></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"><font color=#B73650 size=1>OF</font></td><td style="text-align:center"><font color=#B73650 size=1>DF</font></td><td style="text-align:center"><font color=#B73650 size=1>IF</font></td><td style="text-align:center"></td><td style="text-align:center"><font color=#B73650 size=1>SF</font></td><td style="text-align:center"><font color=#B73650 size=1>ZF</font></td><td style="text-align:center"></td><td style="text-align:center"><font color=#B73650 size=1>AF</font></td><td style="text-align:center"></td><td style="text-align:center"><font color=#B73650 size=1>PF</font></td><td style="text-align:center"></td><td style="text-align:center"><font color=#B73650 size=1>CF</font></td></tr><tr><td style="text-align:center"><font color=#B73650 size=1>CPU识别标志</font></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"><font color=#B73650 size=1>溢出标志</font></td><td style="text-align:center"><font color=#B73650 size=1>方向标志</font></td><td style="text-align:center"><font color=#B73650 size=1>中断使能标志</font></td><td style="text-align:center"></td><td style="text-align:center"><font color=#B73650 size=1>符号标志</font></td><td style="text-align:center"><font color=#B73650 size=1>零标志</font></td><td style="text-align:center"></td><td style="text-align:center"><font color=#B73650 size=1>辅助进位</font></td><td style="text-align:center"></td><td style="text-align:center"><font color=#B73650 size=1>奇偶标志</font></td><td style="text-align:center"></td><td style="text-align:center"><font color=#B73650 size=1>进位标志</font></td></tr></tbody></table></div>]]></content>
      
      
      <categories>
          
          <category> computer science </category>
          
      </categories>
      
      
        <tags>
            
            <tag> x86 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Virtual Memory Introduction</title>
      <link href="/2019/09/19/Virtual-Memory-Introduction/"/>
      <url>/2019/09/19/Virtual-Memory-Introduction/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> computer science </category>
          
      </categories>
      
      
        <tags>
            
            <tag> memory </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Data Check Code</title>
      <link href="/2019/09/10/Data-Check-Code/"/>
      <url>/2019/09/10/Data-Check-Code/</url>
      
        <content type="html"><![CDATA[<p>校验码的原理是通过增加一些冗余码，来检验或纠错编码。通常编码都由许多码字构成，任意两个合法码字之间最少变化的二进制位数，称为数据校验码的码距。对于码距不小于$2$的数据校验码，开始具有检错的能力。码距越大，检错、纠错能力就越强，而且检错能力总是大于或等于纠错能力。下面介绍几种常用的校验码。</p><h2 id="奇偶校验码"><a href="#奇偶校验码" class="headerlink" title="奇偶校验码"></a>奇偶校验码</h2><p>奇偶校验码比较简单，原理是在原编码上加一个校验位，它的码距等于2，可以检测出一位错误（或奇数位错误），但是不能确定错误位置，也不能检测出偶数位错误，增加的冗余位称为奇偶校验位。数据构成如下</p><p><img src="odd-even.png" alt="odd-even"></p><p>校验位的取值（$0$ 或 $1$）将使整个校验码中 “$1$” 的个数为奇数或偶数，所以有两种可供选择的校验规律。</p><ul><li>奇校验码：整个校验码中 “$1$” 的个数为奇数</li><li>偶校验码：整个校验码中 “$1$” 的个数为偶数</li></ul><h2 id="海明校验码"><a href="#海明校验码" class="headerlink" title="海明校验码"></a>海明校验码</h2><p>海明校验码是广泛采用的一种有效的校验码，它实际上是一种多重奇偶校验码。原理是在有效信息位中加入几个校验位形成海明码，并把海明码的每一个二进制位分配到几个奇偶校验组中，当某一位出错后，就会引起有关的几个校验位的值发生变化，这不但可以发现错位，还能指出错位的位置，位自动纠错提供了依据。</p><p>依据纠错理论得： $L-1 =D+C$    &nbsp;&nbsp;&nbsp;&nbsp;其中&nbsp;&nbsp; $D≥C$</p><p>即编码最小码距 $L$ 越大，则其检测错误的位数 $D$ 越大，纠正错误的位数 $C$ 也越大，且纠错能力恒小于或等于检错能力。海明码就是根据这一理论提出的具有纠错能力的一种编码。</p><p>海明码计算步骤如下：</p><ul><li>$n+k≤2^k-1$ , 若要检测 $2$ 位错，则需要 $k+1$ 位</li><li>校验位 $Pi$ 在海明位号 $2^{i-1}$ 位上</li><li>被校验数据位的海明位号等于检验该数据位的各校验位海明位号之和</li><li>校验位 $Pi$ 取值为第 $i$ 组所有位求异或</li><li>由校验位和参与形成校验位的各信息位进行奇偶校验检查（异或），若为 $0$ 则无错，否则为错误位号</li></ul><h2 id="CRC"><a href="#CRC" class="headerlink" title="CRC"></a>CRC</h2><p>循环冗余校验码即 CRC 码是在 $K$ 位信息码后再拼接 $R$ 位校验码，整个编码长度为 $N$ 位，因此，这种编码又称 $(N,K)$ 码。</p><p>CRC 码基于线性编码理论，在发送端将要传送的 $K$ 位二进制信息码左移 $R$ 位，将它与生成多项式 $G(x)$ 做模$2$除法，生成一个 $R$ 位校验码，并附在信息码后，构成一个新的二进制码（CRC码），共 $K+R$ 位。在接收端，则利用生成多项式对接收到的编码做模$2$除法，以检测和确定出错的位置，如无错则整除，其中生成多项式是接收端和发送端的一个约定。</p><p>任意一个二进制数码都可以用一个系数仅为 “$0$” 或 “$1$” 的多项式与其对应。生成多项式 $G(x)$ 的最高幂次为 $R$，转换成对应的二进制数有 $R+1$ 位。</p><p>CRC编码和检测过程如下：<br>数据 M 为 $k$ 位，需要添加 $n$ 位冗余位，共发送 $k+n$ 位，除数 P 为 $n+1$ 位</p><ul><li>在 M 后面添加 $n$ 位 $0$，变为 $k+n$ 位</li><li>M 变为 $k+n$ 位后与 $n+1$ 位的 P 做模$2$除法，得出商 Q ，余数 R （$n$位）</li><li>则 R 为冗余位，也称帧检验序列 FCS</li><li>接收端用接收数据模$2$除 P，若余数 R 为 $0$，则无差错，否则接收数据第 $R$ 位出错</li></ul>]]></content>
      
      
      <categories>
          
          <category> computer science </category>
          
      </categories>
      
      
        <tags>
            
            <tag> check code </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown Basic Grammar</title>
      <link href="/2019/09/05/Markdown-Basic-Grammar/"/>
      <url>/2019/09/05/Markdown-Basic-Grammar/</url>
      
        <content type="html"><![CDATA[<p>Markdown is a markup language in plain text format. Through simple markup grammar, it can make ordinary text content have a certain format.Markdown is widely used in many websites to write help documents or to publish messages in forums. For example: GitHub, brief book, reddit, Diaspora, Stack Exchange, OpenStreetMap, SourceForge, etc.</p><h2 id="编辑器"><a href="#编辑器" class="headerlink" title="编辑器"></a>编辑器</h2><p>Markdown 在许多平台都有好多不同的编辑器，这里笔者根据自己的实际经历推荐给大家几款编辑器，希望大家会喜欢。</p><p>在这里笔者首先要推荐的就是使用文本编辑器写 Markdown，例如 VS Code 、Sublime Text 、 Atom 等，这些文本编辑器不仅能写代码，还能顺别用 Markdown 写文档，这样比较方便，但是又一个缺点就是不能实时预览，想预览的画就需要在浏览器上刷新预览。</p><p>如果大家不喜欢用上面的编辑器写 Markdown 或者觉得不能实时刷新而不方便的话，还有很多专门写文档的 Markdown 编辑器，Windows 上有 MarkdownPad 、Typee。Mac 平台推荐 Ulysses，这一一款很古老的 文档编辑器，堪称神器。Linux 平台笔者一般只是跑程序，需要的话大家自己找吧。</p><h2 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h2><p>Markdown语法比较简单，不过仍然需要花费一定的功夫记忆，而且每一种样式有不同的实现方式，这里笔者只介绍一种常用的写法，同时也是笔者自己习惯的写法。</p><h3 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h3><p>Markdown中标题使用 <code>#</code> 标记，使用 <code>#</code> 可表示 1-6 级标题，一级标题对应一个 <code>#</code> ，二级标题对应二个 <code>#</code>，依次类推。需要注意的是 <code>#</code> 和标题内容之间有一个空格。<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 一级标题</span></span><br><span class="line"><span class="section">## 二级标题</span></span><br><span class="line"><span class="section">### 三级标题</span></span><br><span class="line"><span class="section">#### 四级标题</span></span><br><span class="line"><span class="section">##### 五级标题</span></span><br><span class="line"><span class="section">###### 六级标题</span></span><br></pre></td></tr></table></figure></p><h3 id="段落"><a href="#段落" class="headerlink" title="段落"></a>段落</h3><p>Markdown 段落没有特殊的格式，直接编写文字就好，段落的换行是使用两个以上空格加上回车。</p><h4 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h4><p>Markdown字体用 <code>*</code> 标记，用法如下<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="emphasis">*斜文本*</span></span><br><span class="line"><span class="strong">**粗体文本**</span></span><br><span class="line"><span class="strong">***粗斜体文本**</span></span><br></pre></td></tr></table></figure></p><h4 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h4><p>可以在一行中用三个以上的减号来建立一个分隔线，行内不能有其他东西，也可以在减号中间插入空格来建立分割线,用法如下<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line"><span class="bullet">- </span>- -</span><br></pre></td></tr></table></figure></p><h4 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h4><p>如果段落上的文字要添加删除线，只需要在文字的两端加上两个波浪线 ~~ 即可，用法如下<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~需要添加删除线的内容~</span><br></pre></td></tr></table></figure></p><h4 id="下划线"><a href="#下划线" class="headerlink" title="下划线"></a>下划线</h4><p>下划线可以通过 HTML 的 <code>&lt;u&gt;</code> 标签来实现，用法如下<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">u</span>&gt;</span></span>需要添加下划线的内容<span class="xml"><span class="tag">&lt;/&gt;</span></span></span><br></pre></td></tr></table></figure></p><h4 id="脚注"><a href="#脚注" class="headerlink" title="脚注"></a>脚注</h4><p>在写文章的时候有时候会用到脚注，Markdown也给我们定义了脚注的写法，用法如下<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[^要脚注的文本]</span><br><span class="line">[<span class="symbol">^要脚注的文本</span>]:<span class="link">脚注的内容</span></span><br></pre></td></tr></table></figure><br>注：Markdown 的脚注现在有些博客平台不支持，例如笔者使用的HEXO博客平台。</p><h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><p>Markdown 支持无序列表和有序列表，同时还支持列表嵌套</p><h4 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h4><p>无序列表使用 <code>+</code> 或者 <code>-</code> 标记，使用方法如下<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">+ </span>第一项</span><br><span class="line"><span class="bullet">+ </span>第二项</span><br><span class="line"><span class="bullet">+ </span>第三项</span><br><span class="line"></span><br><span class="line"><span class="bullet">- </span>第一项</span><br><span class="line"><span class="bullet">- </span>第二项</span><br><span class="line"><span class="bullet">- </span>第三项</span><br></pre></td></tr></table></figure></p><h4 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h4><p>有序列表使用数字加上 <code>.</code> 来标记，使用方法如下<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1. </span>第一项</span><br><span class="line"><span class="bullet">2. </span>第二项</span><br><span class="line"><span class="bullet">3. </span>第三项</span><br></pre></td></tr></table></figure></p><h4 id="列表嵌套"><a href="#列表嵌套" class="headerlink" title="列表嵌套"></a>列表嵌套</h4><p>列表嵌套只需要在子列表中的标记前添加四个空格或者一个 Tab 即可，使用方法如下<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1. </span>第一项</span><br><span class="line"><span class="bullet">    - </span>嵌套列表第一项</span><br><span class="line"><span class="bullet">    - </span>嵌套列表第二项</span><br><span class="line"><span class="bullet">2. </span>第二项</span><br><span class="line"><span class="bullet">    - </span>嵌套列表第一项</span><br><span class="line"><span class="bullet">    - </span>嵌套列表第二项</span><br></pre></td></tr></table></figure></p><h3 id="区块"><a href="#区块" class="headerlink" title="区块"></a>区块</h3><p>Markdown 中的引用是在引用的内容前面加 <code>&gt;</code> 符号，然后后面要加一个空格，使用方法如下<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="quote">&gt; 引用的第一行内容</span></span><br><span class="line"><span class="quote">&gt; 引用的第二行内容</span></span><br><span class="line"><span class="quote">&gt; 引用的第三行内容</span></span><br></pre></td></tr></table></figure><br>引用还可以嵌套，引用嵌套时内层引用使用多个 <code>&gt;</code> ,即内层引用比外层多一个。引用中也可以使用列表，列表的使用方法如上。列表中也可以使用引用，使用的时候引用相对于列表缩进 4 个空格或者一个 Tab 。使用方法如下<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">引用嵌套</span><br><span class="line"><span class="quote">&gt; 第一层</span></span><br><span class="line">&gt;&gt; 第二层</span><br><span class="line">&gt;&gt; 第三层</span><br><span class="line"></span><br><span class="line">引用中使用列表</span><br><span class="line"><span class="quote">&gt; - 无序列表第一项</span></span><br><span class="line"><span class="quote">&gt; - 无序列表第二项</span></span><br><span class="line"><span class="quote">&gt; 1. 有序列表第一项</span></span><br><span class="line"><span class="quote">&gt; 2. 有序列表第二项</span></span><br><span class="line"></span><br><span class="line">列表中使用引用</span><br><span class="line"><span class="bullet">- </span>列表第一项</span><br><span class="line"><span class="code">    &gt; 引用的第一行</span></span><br><span class="line"><span class="code">    &gt; 引用的第二行</span></span><br><span class="line"><span class="bullet">- </span>列表第二项</span><br></pre></td></tr></table></figure></p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p>Markdown 中还可以写入代码，如果是段落上的一个函数或者是一个片段的代码，只需要用 <code>` </code> 包起来即可，用法如下<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="code">`这里是行内代码`</span></span><br></pre></td></tr></table></figure><br>如果代码中包含 <code>` </code> ,则前后需要使用 <code>`` </code> ，并且内容两端需要空格，用法如下</p><pre><code class="lang-Markdown">`` ` ``</code></pre><p>如果想输入一个代码块，则可以使用 <code>``` </code> 包裹多行代码，并且在开头的一个 <code>``` </code> 后面指定一种语言（可以不指定），用法如下  </p><pre><code class="lang-Python">```python from pythonds.graphs import Graph, Vertexfrom pythonds.basic import Queuedef bfs(g,start):  start.setDistance(0)  start.setPred(None)  vertQueue = Queue()  vertQueue.enqueue(start)  while (vertQueue.size() &gt; 0):    currentVert = vertQueue.dequeue()    for nbr in currentVert.getConnections():      if (nbr.getColor() == &#39;white&#39;):        nbr.setColor(&#39;gray&#39;)        nbr.setDistance(currentVert.getDistance() + 1)        nbr.setPred(currentVert)        vertQueue.enqueue(nbr)    currentVert.setColor(&#39;black&#39;)```</code></pre><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p>链接在文档里面是很常见的，Markdown 提供了链接功能，使用方法如下</p><pre><code class="lang-Markdown">[链接名称](链接地址) 或者 &lt;链接地址&gt;</code></pre><h3 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h3><p>Markdown 的插入图片的语法非常简单，和链接的语法非常相似，知识在前面多了一个 <code>!</code> ，使用方法如下</p><pre><code class="lang-Markdown">![alt](src)![alt](src &quot;title&quot;)</code></pre><p>虽然 Markdown 可以插入图片，但是没法指定图片的高度，如果想要指定图片的高度的话可以使用 HTML 中的 <code>&lt;img&gt;</code> 标签，使用方法如下</p><pre><code class="lang-Markdown">&lt;img src=&quot;&quot; alt=&quot;&quot; width=&quot;&quot;&gt;</code></pre><h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><p>Markdown 提供了表格的功能，制作表格时使用 <code>|</code> 来分割不同的单元格，使用 <code>-</code> 来分割表头和其他行，使用方法如下</p><pre><code class="lang-Markdown">|表头|表头||----|----||单元格|单元格||单元格|单元格|</code></pre><p>同时我们还可以在表格中设置对齐方式：</p><ul><li><code>-:</code> 设置内容和标题栏右对齐</li><li><code>:-</code> 设置内容和标题栏左对齐</li><li><code>:-:</code> 设置内容和标题栏居中对齐 </li></ul><p>对齐的使用方法如下</p><pre><code class="lang-Markdown">| 左对齐 | 右对齐 | 居中对齐 || :-----| ----: | :----: || 单元格 | 单元格 | 单元格 || 单元格 | 单元格 | 单元格 |</code></pre><h2 id="进阶语法"><a href="#进阶语法" class="headerlink" title="进阶语法"></a>进阶语法</h2><p>Markdown 语法除了上面的这些常用的之外，还有一些不太常用，但是有的时候还是会用到，例如下面列举的这些语法。</p><h3 id="HTML-元素"><a href="#HTML-元素" class="headerlink" title="HTML 元素"></a>HTML 元素</h3><p>不在 Markdown 涵盖范围之内的标签，都可以直接在文档里面用 HTML 撰写。</p><p>目前支持的 HTML 元素有： <code>&lt;kbd&gt; &lt;b&gt; &lt;i&gt; &lt;em&gt; &lt;sup&gt; &lt;sub&gt; &lt;br&gt;</code> 等</p><h3 id="转义"><a href="#转义" class="headerlink" title="转义"></a>转义</h3><p>Markdown 使用了很多特殊符号来表示特定的意义，如果需要显示特定的符号则需要使用转义字符，Markdown 使用反斜杠转义特殊字符。</p><p>Markdown 支持以下这些符号前面加上反斜杠来帮助插入普通的符号</p><pre><code class="lang-Markdown">\   反斜线`   反引号*   星号_   下划线{}  花括号[]  方括号()  小括号#   井字号+   加号-   减号.   英文句点!   感叹号</code></pre><h3 id="公式"><a href="#公式" class="headerlink" title="公式"></a>公式</h3><p>当你需要在编辑器中插入数学公式时，可以使用两个美元符 $$ 包裹 TeX 或 LaTeX 格式的数学公式来实现。提交后，问答和文章页会根据需要加载 Mathjax 对数学公式进行渲染。</p><h3 id="流程图"><a href="#流程图" class="headerlink" title="流程图"></a>流程图</h3><p>Markdown 的流程图画法是将流程图的代码包裹在 <code>```flow</code> 和 <code>``` </code> 之间，Markdown的语法只能画简单的流程图，同时好多博客系统也不支持 Markdown 流程图，比如笔者使用的 HEXO 就不支持。</p><p>流程图也可以使用 Mermaid，这是一个用于画流程图、状态图、时序图以及甘特图的一个 JS 渲染库，它生成的不是图片，而是 HTML 代码，因此安全性比较高，可以访问 Mermaid <a href="https://mermaidjs.github.io" target="_blank" rel="noopener">官网</a>或者在 <a href="https://github.com/knsv/mermaid" target="_blank" rel="noopener">Github</a> 上下载安装。</p><p>复杂一点的流程如需要使用Xmind，Xmind可以画各种复杂的流程图、鱼骨图以及思维导图，它是一个思维导图软件，在各个平台都有相应的版本。</p>]]></content>
      
      
      <categories>
          
          <category> computer science </category>
          
      </categories>
      
      
        <tags>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Sublime Plugin Introduction</title>
      <link href="/2019/08/10/Introduction-to-Sublime-Plug-in/"/>
      <url>/2019/08/10/Introduction-to-Sublime-Plug-in/</url>
      
        <content type="html"><![CDATA[<p>Sublime text is one of the most popular text editors at present. It is a modern text editor with beautiful interface, smooth operation, fast start-up, low resource consumption, and many useful plug-ins. It is a good choice for people who often write programs.</p><h2 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h2><p><img src="SUBLIME-web.png" alt="Sublime Text3 official website"><br>Sublime Text 的最新的版本是 <a href="http://www.sublimetext.com" target="_blank" rel="noopener">Sublime Text3 Build 3207</a> ,这是一个收费的版本，但是可以免费无限期试用，安装完之后在 view 里面可以设置 side bar 的显示以及 minimap 的显示，同时可以在 preferences 里面设置 color scheme、 theme 和 font。</p><h2 id="Plug-ins"><a href="#Plug-ins" class="headerlink" title="Plug-ins"></a>Plug-ins</h2><p>Sublime text有非常多的好用的插件，这些插件能极大的提高我们的工作效率，在安装插件之前需要先安装 Package control ，这是一款管理其他插件的插件。有了它，我们就能很方便的 install 和 remove 其他插件，极大的提高了我们配置 Sublime text 的速度。</p><h3 id="Package-control"><a href="#Package-control" class="headerlink" title="Package control"></a>Package control</h3><p>这是一款便于我们管理插件的 Sublime text 插件，安装也比较方便，安装方法是依次点击： menu -&gt; view -&gt; show console 或者按快捷键 <kbd>ctrl</kbd>+<kbd>~</kbd> 。之后底部会出现 console 框，然后输入以下代码</p><p>sublime text3<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib.request,os,hashlib; </span><br><span class="line">h = <span class="string">'6f4c264a24d933ce70df5dedcf1dcaee'</span> + <span class="string">'ebe013ee18cced0ef93d5f746d80ef60'</span>; </span><br><span class="line">pf = <span class="string">'Package Control.sublime-package'</span>; </span><br><span class="line">ipp = sublime.installed_packages_path(); </span><br><span class="line">urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); </span><br><span class="line">by = urllib.request.urlopen( <span class="string">'http://packagecontrol.io/'</span> + pf.replace(<span class="string">' '</span>, <span class="string">'%20'</span>)).read(); </span><br><span class="line">dh = hashlib.sha256(by).hexdigest(); </span><br><span class="line">print(<span class="string">'Error validating download (got %s instead of %s), please try manual install'</span> % (dh, h)) <span class="keyword">if</span> dh != h <span class="keyword">else</span> open(os.path.join( ipp, pf), <span class="string">'wb'</span> ).write(by)</span><br></pre></td></tr></table></figure></p><p>sublime text2<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib2,os,hashlib; </span><br><span class="line">h = <span class="string">'6f4c264a24d933ce70df5dedcf1dcaee'</span> + <span class="string">'ebe013ee18cced0ef93d5f746d80ef60'</span>; </span><br><span class="line">pf = <span class="string">'Package Control.sublime-package'</span>; </span><br><span class="line">ipp = sublime.installed_packages_path(); </span><br><span class="line">os.makedirs( ipp ) <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(ipp) <span class="keyword">else</span> <span class="literal">None</span>; </span><br><span class="line">urllib2.install_opener( urllib2.build_opener( urllib2.ProxyHandler()) ); </span><br><span class="line">by = urllib2.urlopen( <span class="string">'http://packagecontrol.io/'</span> + pf.replace(<span class="string">' '</span>, <span class="string">'%20'</span>)).read(); </span><br><span class="line">dh = hashlib.sha256(by).hexdigest(); </span><br><span class="line">open( os.path.join( ipp, pf), <span class="string">'wb'</span> ).write(by) <span class="keyword">if</span> dh == h <span class="keyword">else</span> <span class="literal">None</span>; </span><br><span class="line">print(<span class="string">'Error validating download (got %s instead of %s), please try manual install'</span> % (dh, h) <span class="keyword">if</span> dh != h <span class="keyword">else</span> <span class="string">'Please restart Sublime Text to finish installation'</span>)</span><br></pre></td></tr></table></figure></p><p>当在 console 框中输入上面的代码之后，在 status bar 上会有安装进度提示，等完成之后当在 menu -&gt; preference 中能看到 package control 时说明 package control 安装成功了，然后就能愉快的安装和管理其他插件了。</p><p>通过 package control 安装和删除插件的方法是依次点击： menu -&gt; perference -&gt; package control 或者快捷键 Ctrl+Shift+P (windows) / Command+Shift+p (mac) ,然后在弹出的输入框中输入 install package 并选中 install package 后点击enter，接着就可以在弹出的新的输入框中输入你想要安装的插件的名称，然后回撤就可以安装了。（当输入 remove package 之后就是删除插件，其他的过程和上面的一样）</p><h3 id="Emmet"><a href="#Emmet" class="headerlink" title="Emmet"></a>Emmet</h3><p>Emmet 这是一个 Sublime Text 必不可少的前端开发插件，堪称神器，它的前身就是大名鼎鼎的 zencoding，它使用仿 CSS 选择器的徐发来生成代码，大大的提高了 HTML/CSS 代码的编写速度。Emmet对于前端开发来说非常方便，下面简单的介绍以下它的使用方法。</p><h4 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h4><p>1、初始化<br>Emmet 可以快速生成不同前端语言的模版，快捷键是 <kbd>Tab</kbd><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">html:5 或者 !     用于生成 HTML5 文档类型</span><br><span class="line">html:xt          用于生成 XHTML 过渡文档类型</span><br><span class="line">html:4s          用户生成 HTML4 严格文档类型</span><br></pre></td></tr></table></figure><br>2、添加类、id、文本和属性<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">div.boxclass          生成 class 为 boxclass 的 div 标签</span><br><span class="line">div#boxid             生成 id 为 boxid 的 div 标签</span><br><span class="line">div.boxclass#boxid    生成 class 为 boxclass 以及 id 为 boxid 的div标签</span><br><span class="line">a&#123;contents&#125;           生成 a 标签，里面的内容为 contents</span><br></pre></td></tr></table></figure><br>3、嵌套<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;  : 子元素符号，表示嵌套</span><br><span class="line">+  : 同级标签符号</span><br><span class="line">^  : 可以使该符号前面的标签提升一行</span><br></pre></td></tr></table></figure><br>4、分组<br>可以通过嵌套和括号来快速生成一些代码块，例如<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(div&gt;h1)+(div&gt;span)</span><br></pre></td></tr></table></figure><br>5、多个元素<br>如果想要定义多个元素，就可以使用 <code>*</code> 符号，使用方法如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ul&gt;li*3      ul 标签下面会生成3个 li标签</span><br></pre></td></tr></table></figure><br>6、动态属性<br>可以使用通配符，让 Emmet 在生成多个标签时出现不同的属性值，用法如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ul&gt;li.class$*3    会生成三个 li 标签，class 值分别为 class1、class2、class3</span><br></pre></td></tr></table></figure></p><h4 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h4><p>1、属性值<br>常见的属性值的书写方法列举如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">w44    生成 width:44px</span><br><span class="line">h44    生成 height:44px</span><br><span class="line">m44    生成 margin:44px</span><br></pre></td></tr></table></figure><br>同时后面还可以加单位，单位列举如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">p 表示 %</span><br><span class="line">e 表示 em</span><br><span class="line">x 表示 ex</span><br></pre></td></tr></table></figure><br>2、模糊匹配<br>如果有一些缩写你没有记下，不确定，Emmet会根据你的输入内容自动匹配最接近的语法</p><h3 id="DocBlockr"><a href="#DocBlockr" class="headerlink" title="DocBlockr"></a>DocBlockr</h3><p>这是一个自动生成注释的插件，有了它，你就可以很方便的添加注释，可以省下很多时间，同时 DocBlockr 还可以支持自定义，你可以自定义自己的注释的样式。</p><h3 id="Color-Highlight"><a href="#Color-Highlight" class="headerlink" title="Color Highlight"></a>Color Highlight</h3><p>Color Highlight 这是一款颜色高亮显示的插件，非常好用，但是它的缺点是不能提取颜色。</p><h3 id="Color-Highlighter"><a href="#Color-Highlighter" class="headerlink" title="Color Highlighter"></a>Color Highlighter</h3><p>Color Highlight 这也是一款颜色高亮的插件，它跟 Color Highlight 相比最大的不同就是可以提取颜色。</p><h3 id="A-File-Icon"><a href="#A-File-Icon" class="headerlink" title="A File Icon"></a>A File Icon</h3><p>A File Icon 提供了一组漂亮的文件的 logo，不同的文件有不同的显示 logo，看起来很炫酷。</p><h3 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h3><p>Git 就不用我介绍了，他是个版本控制的插件，这个插件也是项目开发必不可少的。</p><h3 id="Alignment"><a href="#Alignment" class="headerlink" title="Alignment"></a>Alignment</h3><p>Alignment 是一款代码自动对齐的插件，使用快捷方式是 <kbd>ctrl</kbd>+<kbd>alt</kbd>+<kbd>a</kbd></p><h3 id="AutoFileName"><a href="#AutoFileName" class="headerlink" title="AutoFileName"></a>AutoFileName</h3><p>AutoFileName 是一款输入文件路径时自动补全的插件，它可以快速帮你在文档中写路径。</p><h3 id="BracketHighlighter"><a href="#BracketHighlighter" class="headerlink" title="BracketHighlighter"></a>BracketHighlighter</h3><p>BracketHighlighter 是一款括弧高亮的插件，当代码太多时，好多括弧，看起来有点乱，有了这款插件，它会将不同的括弧以不同的颜色显示，让你的代码清晰明了。</p><h3 id="Nodejs"><a href="#Nodejs" class="headerlink" title="Nodejs"></a>Nodejs</h3><p>Nodejs 这个就不需要我过多介绍了，可以提供 node.js 的自动提示。</p><h3 id="SideBarEnhancements"><a href="#SideBarEnhancements" class="headerlink" title="SideBarEnhancements"></a>SideBarEnhancements</h3><p>SideBarEnhancements 是一款 side bar 右键增强的插件，有了它你就可以直接在 side bar 中右键在项目中添加文件或者删除文件，同时还有很多其他的功能，你们自己慢慢体会吧。</p><h3 id="SyncedSidebarBg"><a href="#SyncedSidebarBg" class="headerlink" title="SyncedSidebarBg"></a>SyncedSidebarBg</h3><p>SyncedSidebarBg 这款插件可以让你的 Sublime Text 的 side bar 的背景颜色和文本编辑区域的颜色保持一致。</p><h3 id="ConvertToUTF8"><a href="#ConvertToUTF8" class="headerlink" title="ConvertToUTF8"></a>ConvertToUTF8</h3><p>ConvertToUTF8 可以将文件转码成utf-8格式，通过本插件，你可以编辑并保存目前编码不被 Sublime Text 支持的文件，特别是中日韩用户使用的 GB2312，GBK，BIG5，EUC-KR，EUC-JP ，ANSI等。ConvertToUTF8 同时支持 Sublime Text 2 和 3。</p><h3 id="EncodingHelper"><a href="#EncodingHelper" class="headerlink" title="EncodingHelper"></a>EncodingHelper</h3><p>EncodingHelper 可以自动猜测你的文件的编码，并且显示在 status bar 上，将各种编码转换成为 UTF-8。</p><h3 id="Codecs33"><a href="#Codecs33" class="headerlink" title="Codecs33"></a>Codecs33</h3><p>Codecs33 这款插件可以解决 Sublimt Text 在打开 GB2312 编码的文件时中文乱码的问题。</p><h3 id="jQuery"><a href="#jQuery" class="headerlink" title="jQuery"></a>jQuery</h3><p>jQuery 这款插件可以提供 jQuery 的自动提示功能，使用 jQuery 开发来说必不可少。</p><h3 id="Vue"><a href="#Vue" class="headerlink" title="Vue"></a>Vue</h3><p>Vue 这款插件提供了 Vue 文件的高亮显示，使用 Vue.js 开发项目的话这款插件是必不可少的。</p><h3 id="EJS2"><a href="#EJS2" class="headerlink" title="EJS2"></a>EJS2</h3><p>ejs2 这款插件提供了对 .ejs 文件的高亮显示，如果开发中用到 EJS 的话这款插件必不可少。</p><h3 id="Markdownediting"><a href="#Markdownediting" class="headerlink" title="Markdownediting"></a>Markdownediting</h3><p>Markdownediting 是一款让 Markdown语法高亮显示的插件，如果你使用 Sublime 写 Markdown 文档，这款插件是必备的。</p><h3 id="Vue-Syntax-Highlight"><a href="#Vue-Syntax-Highlight" class="headerlink" title="Vue Syntax Highlight"></a>Vue Syntax Highlight</h3><p>Vue 框架代码高亮插件，使用vue做前端开发这个插件必不可少。</p><h3 id="Stylus"><a href="#Stylus" class="headerlink" title="Stylus"></a>Stylus</h3><p>Stylus 代码高亮显示插件。</p><p><code>MonokaiC</code> 是一款 sublime text3 下的主题，笔者推荐这款，安装方法如下</p><blockquote><h3 id="Install-1"><a href="#Install-1" class="headerlink" title="Install"></a>Install</h3><p>First, install MarkdownEditing.</p><h3 id="Package-Control"><a href="#Package-Control" class="headerlink" title="Package Control"></a>Package Control</h3><p>Ctrl/Command + Shift + P to open the Command Palette<br>Select Package Control: Install Package<br>Search for MonokaiC<br>Press Enter</p><h3 id="Manual"><a href="#Manual" class="headerlink" title="Manual"></a>Manual</h3><p>git clone <a href="https://github.com/avivace/MonokaiC" target="_blank" rel="noopener">https://github.com/avivace/MonokaiC</a> ~/.config/sublime-text-3/Packages/MonokaiC<br>Change the target directory with ~/Library/Application\ Support/Sublime\ Text\ 3/Packages/MonokaiC on OS X and %appdata%\Sublime Text 3\Packages\MonokaiC on Windows.</p><h3 id="Activation"><a href="#Activation" class="headerlink" title="Activation"></a>Activation</h3><p>To enable the theme, open your preferred MarkdownEditing User setting file from Preferences &gt; Package Settings &gt; Markdown Editing &gt; Markdown GFM Settings - USER (works with MultiMarkdown and Markdown Standard too) and put this:<br><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"color_scheme"</span>: <span class="string">"Packages/MonokaiC/themes/ME-MonokaiC.tmTheme"</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>Be sure to Set Syntax -&gt; MarkdownEditing -&gt; Markdown GFM on your Markdown files</p><p>然后编辑 Preferences &gt; Package Settings &gt; Markdown Editing &gt; Markdown GFM Settings - USER 输入一下内容<br><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"color_scheme"</span>: <span class="string">"Packages/MonokaiC/themes/ME-MonokaiC.tmTheme"</span>,</span><br><span class="line">    <span class="attr">"draw_centered"</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">"line_numbers"</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">"wrap_width"</span>: <span class="number">160</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> text editor </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sublime </tag>
            
            <tag> text editor </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows System Installation</title>
      <link href="/2019/07/20/Windows-System-Installation/"/>
      <url>/2019/07/20/Windows-System-Installation/</url>
      
        <content type="html"><![CDATA[<p>Algorithms change the world. For a programmer, the importance of algorithms is self-evident, so the practice of some algorithms is indispensable. Next, I will share some algorithmic problems.</p><h3 id="文件备份"><a href="#文件备份" class="headerlink" title="文件备份"></a>文件备份</h3><p>把C盘里面有用的文件复制到其他盘里，如果C盘大小不够的话，最好把D盘有用的文件也备份一下，这篇博客后面有分区合并的教程，可以把C盘和D盘合并成为一个盘，用来装系统。推荐系统盘最少为100G，如果经常用一些大的软件的话，C盘可以再大点，笔者的系统盘150G都不够用，自己对比一下，视自己的需求调整C盘大小。下面是我安装的一些主要软件截图<br><img src="Software.png" alt="Software"> </p><h3 id="系统镜像下载"><a href="#系统镜像下载" class="headerlink" title="系统镜像下载"></a>系统镜像下载</h3><p>系统镜像下载网址 <a href="https://msdn.itellyou.cn" target="_blank" rel="noopener">MDSN I Tell You</a> , 选择想安装的系统，使用迅雷进行下载。<br><img src="Download-page.png" alt="Download page"> </p><h3 id="系统安装-U-盘制作"><a href="#系统安装-U-盘制作" class="headerlink" title="系统安装 U 盘制作"></a>系统安装 U 盘制作</h3><p>首先准备一个空U盘，空间4G及以上，制作启动盘的时候U盘是需要格式化的，里面不要存储什么重要的东西。然后下载<a href="http://www.poweriso.com" target="_blank" rel="noopener">PowerISO</a>，进入主页之后点击 Download，然后点击 Download PowerISO v7.4(64-bit) 下载。软件是收费的，但是你可以选择免费试用。<br><img src="PowerISO.png" alt="PowerISO"><br>Power ISO 使用的时候需要以管理员身份运行，这样才能刻录 U 盘。</p><p>在 Power ISO 中打开下载的系统镜像文件，然后点击 <code>menu bar --&gt; Tools --&gt; Create bootable USB drive</code>，在弹出的窗口中的 <code>Destination USB drive</code> 中选择 自己的 U 盘，然后点击 <code>Start</code> 就行了，等执行完毕之后系统安装 U 盘就制作好了。</p><p>系统安装盘的制作还有好多其他工具，如 UltraISO等，或者可以使用 PE，如老毛桃PE、大白菜PE等，具体操作比较简单，这里不做详述。</p><h3 id="系统安装"><a href="#系统安装" class="headerlink" title="系统安装"></a>系统安装</h3><p>系统安装之前备份好电脑中的内容，以免资料丢失。</p><p>然后就启动 BIOS 系统，BIOS 全称是 Basic Input Output System，是一组固化到计算机内主板上一个ROM芯片上的程序，它保存着计算机最重要的基本输入输出的程序、开机后自检程序和系统自启动程序，它可从CMOS中读写系统设置的具体信息。 其主要功能是为计算机提供最底层的、最直接的硬件设置和控制。此外，BIOS还向作业系统提供一些系统参数。系统硬件的变化是由BIOS隐藏，程序使用BIOS功能而不是直接控制硬件。现代作业系统会忽略BIOS提供的抽象层并直接控制硬件组件。</p><p>关机之后插入 U 盘，在开机的时候长按快捷键（联想一般为 F2，台式机一般为 delete，其他还有 F6、F8的，具体根据自己的电脑型号决定），之后会进入 BIOS 设置界面。</p><p>在 <code>Boot</code> 中更改启动项为插入的 U 盘，老系统一般要开启 <code>Legacy Support</code>。之后根据右侧菜单中的说明（联想是 F6 上移，F10 保存），保存之后会进入安装程序。</p><h3 id="驱动以及相关设置"><a href="#驱动以及相关设置" class="headerlink" title="驱动以及相关设置"></a>驱动以及相关设置</h3><p>安装之后驱动一般去品牌官网下载相应的驱动或者使用第三方的驱动安装工具，如驱动精灵、驱动人生等安装相应的驱动，比较简单，不详述。</p><h3 id="合并分区"><a href="#合并分区" class="headerlink" title="合并分区"></a>合并分区</h3><p>windows 提供了合并分区的工具，非系统分区的合并使用 windows 自带的工具已经够了。</p><p>搜索 <code>computer management</code>， 在 <code>disk management</code> 中就能看到自己电脑中的各个分区，选中右击就可以进行相应的操作。</p><p>如果涉及到系统分区或者 windows 自带的没法分区的时候，可以使用第三方的分区工具，如 傲梅分区助手等，或者直接使用 PE 系统中集成的分区工具进行分区，方法比较简单，这里不再详述。</p>]]></content>
      
      
      <categories>
          
          <category> OS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OS </tag>
            
            <tag> windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CCF-CSP Questions (eight)</title>
      <link href="/2019/06/29/CCF-CSP-Questions-eight/"/>
      <url>/2019/06/29/CCF-CSP-Questions-eight/</url>
      
        <content type="html"><![CDATA[<p>Algorithms change the world. The importance of algorithms is self-evident to a programmer, so the practice of some algorithms is indispensable. Next, I will share some algorithmic problems.</p><h2 id="Question"><a href="#Question" class="headerlink" title="Question"></a>Question</h2><p><img src="ISBN.png" alt="question"></p><h2 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h2><p>Arrays or stacks can be used to store data, multiply and divide first, convert all operations into additions, and then add.</p><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><p>Here is the solution to this problem.The following are two solutions, the result is 100 points.</p><h3 id="Program"><a href="#Program" class="headerlink" title="Program"></a>Program</h3><h4 id="Method-One"><a href="#Method-One" class="headerlink" title="Method One"></a>Method One</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  main.cpp</span></span><br><span class="line"><span class="comment">//  ISBN</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  Created by gang du on 2019/6/29.</span></span><br><span class="line"><span class="comment">//  Copyright © 2019 gang du. All rights reserved.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;memory.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LIM 50</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">allDFS</span><span class="params">(<span class="keyword">char</span> Map[LIM][LIM],<span class="keyword">bool</span> sign[LIM][LIM],<span class="keyword">int</span> startX,<span class="keyword">int</span> startY,<span class="keyword">int</span> row,<span class="keyword">int</span> col,<span class="keyword">bool</span> mark)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(mark==<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>((Map[startX][startY]==<span class="string">'S'</span>) || (Map[startX][startY]==<span class="string">'+'</span>) || (Map[startX][startY]==<span class="string">'T'</span>))&#123;</span><br><span class="line">            sign[startX][startY]=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(startX!=<span class="number">0</span> &amp;&amp; sign[startX<span class="number">-1</span>][startY]==<span class="number">0</span> &amp;&amp; Map[startX<span class="number">-1</span>][startY]!=<span class="string">'#'</span>)</span><br><span class="line">                allDFS(Map,sign,startX<span class="number">-1</span>,startY,row,col,<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span>((startX+<span class="number">1</span>)!=row &amp;&amp; sign[startX+<span class="number">1</span>][startY]==<span class="number">0</span> &amp;&amp; Map[startX+<span class="number">1</span>][startY]!=<span class="string">'#'</span>)</span><br><span class="line">                allDFS(Map,sign,startX+<span class="number">1</span>,startY,row,col,<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span>(startY!=<span class="number">0</span> &amp;&amp; sign[startX][startY<span class="number">-1</span>]==<span class="number">0</span> &amp;&amp; Map[startX][startY<span class="number">-1</span>]!=<span class="string">'#'</span>)</span><br><span class="line">                allDFS(Map,sign,startX,startY<span class="number">-1</span>,row,col,<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span>((startY+<span class="number">1</span>)!=col &amp;&amp; sign[startX][startY+<span class="number">1</span>]==<span class="number">0</span> &amp;&amp; Map[startX][startY+<span class="number">1</span>]!=<span class="string">'#'</span>)</span><br><span class="line">                allDFS(Map,sign,startX,startY+<span class="number">1</span>,row,col,<span class="number">1</span>); </span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(Map[startX][startY]==<span class="string">'-'</span>)&#123;</span><br><span class="line">            sign[startX][startY]=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(startY!=<span class="number">0</span> &amp;&amp; sign[startX][startY<span class="number">-1</span>]==<span class="number">0</span> &amp;&amp; Map[startX][startY<span class="number">-1</span>]!=<span class="string">'#'</span>)</span><br><span class="line">                allDFS(Map,sign,startX,startY<span class="number">-1</span>,row,col,<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span>((startY+<span class="number">1</span>)!=col &amp;&amp; sign[startX][startY+<span class="number">1</span>]==<span class="number">0</span> &amp;&amp; Map[startX][startY+<span class="number">1</span>]!=<span class="string">'#'</span>)</span><br><span class="line">                allDFS(Map,sign,startX,startY+<span class="number">1</span>,row,col,<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(Map[startX][startY]==<span class="string">'|'</span>)&#123;</span><br><span class="line">            sign[startX][startY]=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(startX!=<span class="number">0</span> &amp;&amp; sign[startX<span class="number">-1</span>][startY]==<span class="number">0</span> &amp;&amp; Map[startX<span class="number">-1</span>][startY]!=<span class="string">'#'</span>)</span><br><span class="line">                allDFS(Map,sign,startX<span class="number">-1</span>,startY,row,col,<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span>((startX+<span class="number">1</span>)!=row &amp;&amp; sign[startX+<span class="number">1</span>][startY]==<span class="number">0</span> &amp;&amp; Map[startX+<span class="number">1</span>][startY]!=<span class="string">'#'</span>)</span><br><span class="line">                allDFS(Map,sign,startX+<span class="number">1</span>,startY,row,col,<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(Map[startX][startY]==<span class="string">'.'</span>)&#123;</span><br><span class="line">            sign[startX][startY]=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>((startX+<span class="number">1</span>)!=row &amp;&amp; sign[startX+<span class="number">1</span>][startY]==<span class="number">0</span> &amp;&amp; Map[startX+<span class="number">1</span>][startY]!=<span class="string">'#'</span>)</span><br><span class="line">                allDFS(Map,sign,startX+<span class="number">1</span>,startY,row,col,<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123; </span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(Map[startX][startY]!=<span class="string">'#'</span>)&#123;</span><br><span class="line">            sign[startX][startY]=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(startX!=<span class="number">0</span> &amp;&amp; sign[startX<span class="number">-1</span>][startY]==<span class="number">0</span> &amp;&amp; (Map[startX<span class="number">-1</span>][startY]==<span class="string">'+'</span> || Map[startX<span class="number">-1</span>][startY]==<span class="string">'|'</span> || Map[startX<span class="number">-1</span>][startY]==<span class="string">'.'</span> || Map[startX<span class="number">-1</span>][startY]==<span class="string">'S'</span> || Map[startX<span class="number">-1</span>][startY]==<span class="string">'T'</span>))</span><br><span class="line">                allDFS(Map,sign,startX<span class="number">-1</span>,startY,row,col,<span class="number">0</span>);</span><br><span class="line">            <span class="keyword">if</span>((startX+<span class="number">1</span>)!=row &amp;&amp; sign[startX+<span class="number">1</span>][startY]==<span class="number">0</span> &amp;&amp; (Map[startX+<span class="number">1</span>][startY]==<span class="string">'+'</span> || Map[startX+<span class="number">1</span>][startY]==<span class="string">'|'</span> || Map[startX+<span class="number">1</span>][startY]==<span class="string">'S'</span> || Map[startX+<span class="number">1</span>][startY]==<span class="string">'T'</span>))</span><br><span class="line">                allDFS(Map,sign,startX+<span class="number">1</span>,startY,row,col,<span class="number">0</span>);</span><br><span class="line">            <span class="keyword">if</span>(startY!=<span class="number">0</span> &amp;&amp; sign[startX][startY<span class="number">-1</span>]==<span class="number">0</span> &amp;&amp; (Map[startX][startY<span class="number">-1</span>]==<span class="string">'+'</span> || Map[startX][startY<span class="number">-1</span>]==<span class="string">'-'</span> || Map[startX][startY<span class="number">-1</span>]==<span class="string">'S'</span> || Map[startX][startY<span class="number">-1</span>]==<span class="string">'T'</span>))</span><br><span class="line">                allDFS(Map,sign,startX,startY<span class="number">-1</span>,row,col,<span class="number">0</span>);</span><br><span class="line">            <span class="keyword">if</span>((startY+<span class="number">1</span>)!=col &amp;&amp; sign[startX][startY+<span class="number">1</span>]==<span class="number">0</span> &amp;&amp; (Map[startX][startY+<span class="number">1</span>]==<span class="string">'+'</span> || Map[startX][startY+<span class="number">1</span>]==<span class="string">'-'</span> || Map[startX][startY+<span class="number">1</span>]==<span class="string">'S'</span> || Map[startX][startY+<span class="number">1</span>]==<span class="string">'T'</span>))</span><br><span class="line">                allDFS(Map,sign,startX,startY+<span class="number">1</span>,row,col,<span class="number">0</span>); </span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> row,col,i,j,sx,sy,ex,ey,num=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">bool</span> fCanSearch[LIM][LIM],bCanSearch[LIM][LIM];</span><br><span class="line"><span class="keyword">char</span> Map[LIM][LIM];</span><br><span class="line"><span class="built_in">memset</span>(fCanSearch,<span class="number">0</span>,LIM*LIM);</span><br><span class="line"><span class="built_in">memset</span>(bCanSearch,<span class="number">0</span>,LIM*LIM);</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;row&gt;&gt;col;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;row;i++)</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;col;j++)&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;Map[i][j];</span><br><span class="line"><span class="keyword">if</span>(Map[i][j]==<span class="string">'S'</span>)&#123;</span><br><span class="line">sx=i;sy=j;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(Map[i][j]==<span class="string">'T'</span>)&#123;</span><br><span class="line">ex=i;ey=j;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">allDFS(Map,fCanSearch,sx,sy,row,col,<span class="number">1</span>);</span><br><span class="line">allDFS(Map,bCanSearch,ex,ey,row,col,<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(fCanSearch[ex][ey]==<span class="number">0</span>)&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"I'm stuck!"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;row;i++)</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;col;j++)&#123;</span><br><span class="line"><span class="keyword">if</span>(fCanSearch[i][j]==<span class="number">1</span> &amp;&amp; bCanSearch[i][j]==<span class="number">0</span>)</span><br><span class="line">num++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;num&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Method-Two"><a href="#Method-Two" class="headerlink" title="Method Two"></a>Method Two</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  main.cpp</span></span><br><span class="line"><span class="comment">//  ISBN</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  Created by gang du on 2019/6/29.</span></span><br><span class="line"><span class="comment">//  Copyright © 2019 gang du. All rights reserved.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">P</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> x,y;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">char</span> Map[<span class="number">55</span>][<span class="number">55</span>];</span><br><span class="line"><span class="keyword">int</span> mov[<span class="number">4</span>][<span class="number">2</span>]=&#123;&#123;<span class="number">1</span>,<span class="number">0</span>&#125;,&#123;<span class="number">-1</span>,<span class="number">0</span>&#125;,&#123;<span class="number">0</span>,<span class="number">-1</span>&#125;,&#123;<span class="number">0</span>,<span class="number">1</span>&#125;&#125;;</span><br><span class="line"><span class="keyword">bool</span> able[<span class="number">55</span>][<span class="number">55</span>][<span class="number">55</span>][<span class="number">55</span>],v1[<span class="number">55</span>][<span class="number">55</span>],v2[<span class="number">55</span>][<span class="number">55</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get</span><span class="params">(P a,<span class="keyword">int</span> &amp;st,<span class="keyword">int</span> &amp;ed)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(Map[a.x][a.y]==<span class="string">'-'</span>) st=<span class="number">2</span>,ed=<span class="number">4</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(Map[a.x][a.y]==<span class="string">'|'</span>) st=<span class="number">0</span>,ed=<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(Map[a.x][a.y]==<span class="string">'.'</span>) st=<span class="number">0</span>,ed=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span> st=<span class="number">0</span>,ed=<span class="number">4</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,m,i,j;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;++i) <span class="built_in">scanf</span>(<span class="string">"%s"</span>,Map[i]);</span><br><span class="line">    <span class="built_in">queue</span>&lt;P&gt; q;</span><br><span class="line">    P p,e;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;++i)</span><br><span class="line">    <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;m;++j)&#123;</span><br><span class="line">        <span class="keyword">if</span>(Map[i][j]==<span class="string">'S'</span>)&#123;</span><br><span class="line">            p.x=i,p.y=j;</span><br><span class="line">            q.push(p);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(Map[i][j]==<span class="string">'T'</span>)&#123;</span><br><span class="line">            e.x=i,e.y=j;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">memset</span>(v1,<span class="number">0</span>,<span class="keyword">sizeof</span>(v1));</span><br><span class="line">    <span class="built_in">memset</span>(v2,<span class="number">0</span>,<span class="keyword">sizeof</span>(v2));</span><br><span class="line">    <span class="built_in">memset</span>(able,<span class="number">0</span>,<span class="keyword">sizeof</span>(able));</span><br><span class="line">    v1[p.x][p.y]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(!q.empty())&#123;</span><br><span class="line">        p=q.front();q.pop();</span><br><span class="line">        P tem=p;</span><br><span class="line">        <span class="keyword">int</span> st,ed;</span><br><span class="line">        get(p,st,ed);</span><br><span class="line">        <span class="keyword">for</span>(i=st;i&lt;ed;++i)&#123;</span><br><span class="line">            tem.x=p.x+mov[i][<span class="number">0</span>];</span><br><span class="line">            tem.y=p.y+mov[i][<span class="number">1</span>];</span><br><span class="line">            <span class="keyword">if</span>(tem.x&gt;=<span class="number">0</span>&amp;&amp;tem.y&gt;=<span class="number">0</span>&amp;&amp;tem.x&lt;n&amp;&amp;tem.y&lt;m&amp;&amp;Map[tem.x][tem.y]!=<span class="string">'#'</span>)&#123;</span><br><span class="line">                able[p.x][p.y][tem.x][tem.y]=<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span>(!v1[tem.x][tem.y])&#123;</span><br><span class="line">                    v1[tem.x][tem.y]=<span class="number">1</span>;</span><br><span class="line">                    q.push(tem);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!v1[e.x][e.y]) &#123;<span class="built_in">puts</span>(<span class="string">"I'm stuck!"</span>);<span class="keyword">return</span> <span class="number">0</span>;&#125;</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    q.push(e);</span><br><span class="line">    v2[e.x][e.y]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(!q.empty())&#123;</span><br><span class="line">        p=q.front();q.pop();</span><br><span class="line">        P tem=p;</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">4</span>;++i)&#123;</span><br><span class="line">            tem.x=p.x+mov[i][<span class="number">0</span>];</span><br><span class="line">            tem.y=p.y+mov[i][<span class="number">1</span>];</span><br><span class="line">            <span class="keyword">if</span>(tem.x&gt;=<span class="number">0</span>&amp;&amp;tem.y&gt;=<span class="number">0</span>&amp;&amp;tem.x&lt;n&amp;&amp;tem.y&lt;m&amp;&amp;Map[tem.x][tem.y]!=<span class="string">'#'</span>&amp;&amp;able[tem.x][tem.y][p.x][p.y]&amp;&amp;!v2[tem.x][tem.y])&#123;</span><br><span class="line">                v2[tem.x][tem.y]=<span class="number">1</span>;</span><br><span class="line">                q.push(tem);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;++i)</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;m;++j)</span><br><span class="line">            <span class="keyword">if</span>(v1[i][j]&amp;&amp;!v2[i][j]) ++ans;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Remarks"><a href="#Remarks" class="headerlink" title="Remarks"></a>Remarks</h3><p>This program is written in C++ and uses standard input and output functions.</p>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> algorithm </tag>
            
            <tag> ccf-csp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CCF-CSP Questions (seven)</title>
      <link href="/2019/06/21/CCF-CSP-Questions-seven/"/>
      <url>/2019/06/21/CCF-CSP-Questions-seven/</url>
      
        <content type="html"><![CDATA[<p>Algorithms change the world. The importance of algorithms is self-evident to a programmer, so the practice of some algorithms is indispensable. Next, I will share some algorithmic problems.</p><h2 id="Question"><a href="#Question" class="headerlink" title="Question"></a>Question</h2><p><img src="TLR.png" alt="question"></p><h2 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h2><p>Arrays or stacks can be used to store data, multiply and divide first, convert all operations into additions, and then add.</p><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><p>Here is the solution to this problem.The following are two solutions, the result is 100 points.</p><h3 id="Program"><a href="#Program" class="headerlink" title="Program"></a>Program</h3><h4 id="Method-One"><a href="#Method-One" class="headerlink" title="Method One"></a>Method One</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  main.cpp</span></span><br><span class="line"><span class="comment">//  ILR</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  Created by gang du on 2019/6/21.</span></span><br><span class="line"><span class="comment">//  Copyright © 2019 gang du. All rights reserved.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;memory.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n,i,j,rectangles[<span class="number">1000</span>],leftBoundary,rightBoundary,mixArea=<span class="number">0</span>,temporaryArea=<span class="number">0</span>,height;</span><br><span class="line"><span class="built_in">memset</span>(rectangles,<span class="number">0</span>,<span class="keyword">sizeof</span>(rectangles));</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;rectangles[i];</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">leftBoundary=i;</span><br><span class="line">rightBoundary=i+<span class="number">1</span>;</span><br><span class="line">height=rectangles[i];</span><br><span class="line"><span class="keyword">for</span>(j=i;j&lt;n;j++)&#123;</span><br><span class="line"><span class="keyword">if</span>(rectangles[j]&lt;=height)</span><br><span class="line">height=rectangles[j];</span><br><span class="line">rightBoundary=j+<span class="number">1</span>;</span><br><span class="line">temporaryArea=(rightBoundary-leftBoundary)*height;</span><br><span class="line"><span class="keyword">if</span>(temporaryArea&gt;mixArea)</span><br><span class="line">mixArea=temporaryArea;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;mixArea&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Remarks"><a href="#Remarks" class="headerlink" title="Remarks"></a>Remarks</h3><p>This program is written in C++ and uses standard input and output functions.</p>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> algorithm </tag>
            
            <tag> ccf-csp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CCF-CSP Questions (six)</title>
      <link href="/2019/06/15/CCF-CSP-Questions-six/"/>
      <url>/2019/06/15/CCF-CSP-Questions-six/</url>
      
        <content type="html"><![CDATA[<p>Algorithms change the world. The importance of algorithms is self-evident to a programmer, so the practice of some algorithms is indispensable. Next, I will share some algorithmic problems.</p><h2 id="Question"><a href="#Question" class="headerlink" title="Question"></a>Question</h2><p><img src="IN.png" alt="question"></p><h2 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h2><p>Arrays or stacks can be used to store data, multiply and divide first, convert all operations into additions, and then add.</p><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><p>Here is the solution to this problem.The following are two solutions, the result is 100 points.</p><h3 id="Program"><a href="#Program" class="headerlink" title="Program"></a>Program</h3><h4 id="Method-One"><a href="#Method-One" class="headerlink" title="Method One"></a>Method One</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  main.cpp</span></span><br><span class="line"><span class="comment">//  IN</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  Created by gang du on 2019/6/15.</span></span><br><span class="line"><span class="comment">//  Copyright © 2019 gang du. All rights reserved.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * six states</span></span><br><span class="line"><span class="comment"> * state 0 : 2 -&gt; missing 0, 1, 3</span></span><br><span class="line"><span class="comment"> * state 1 : 2, 0 -&gt; missing 1, 3</span></span><br><span class="line"><span class="comment"> * state 2 : 2, 3 -&gt; missing 0, 1</span></span><br><span class="line"><span class="comment"> * state 3 : 2, 0, 1 -&gt; missing 3</span></span><br><span class="line"><span class="comment"> * state 4 : 2, 0, 3 -&gt; missing 1</span></span><br><span class="line"><span class="comment"> * state 4 : 2, 3, 0, 1 -&gt; all used</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;memory.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MOD 1000000007</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> status[<span class="number">1001</span>][<span class="number">6</span>];</span><br><span class="line"><span class="keyword">int</span> n,i;</span><br><span class="line"><span class="built_in">memset</span>(status,<span class="number">0</span>,<span class="keyword">sizeof</span>(status));</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">status[i][<span class="number">0</span>]=<span class="number">1</span>%MOD;</span><br><span class="line">status[i][<span class="number">1</span>]=(status[i<span class="number">-1</span>][<span class="number">0</span>]+status[i<span class="number">-1</span>][<span class="number">1</span>]*<span class="number">2</span>)%MOD;</span><br><span class="line">status[i][<span class="number">2</span>]=(status[i<span class="number">-1</span>][<span class="number">0</span>]+status[i<span class="number">-1</span>][<span class="number">2</span>])%MOD;</span><br><span class="line">status[i][<span class="number">3</span>]=(status[i<span class="number">-1</span>][<span class="number">1</span>]+status[i<span class="number">-1</span>][<span class="number">3</span>]*<span class="number">2</span>)%MOD;</span><br><span class="line">status[i][<span class="number">4</span>]=(status[i<span class="number">-1</span>][<span class="number">1</span>]+status[i<span class="number">-1</span>][<span class="number">2</span>]+status[i<span class="number">-1</span>][<span class="number">4</span>]*<span class="number">2</span>)%MOD;</span><br><span class="line">status[i][<span class="number">5</span>]=(status[i<span class="number">-1</span>][<span class="number">3</span>]+status[i<span class="number">-1</span>][<span class="number">4</span>]+status[i<span class="number">-1</span>][<span class="number">5</span>]*<span class="number">2</span>)%MOD;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;status[n][<span class="number">5</span>]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Remarks"><a href="#Remarks" class="headerlink" title="Remarks"></a>Remarks</h3><p>This program is written in C++ and uses standard input and output functions.</p>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> algorithm </tag>
            
            <tag> ccf-csp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CCF-CSP Questions (five)</title>
      <link href="/2019/06/09/CCF-CSP-Questions-five/"/>
      <url>/2019/06/09/CCF-CSP-Questions-five/</url>
      
        <content type="html"><![CDATA[<p>Algorithms change the world. The importance of algorithms is self-evident to a programmer, so the practice of some algorithms is indispensable. Next, I will share some algorithmic problems.</p><h2 id="Question"><a href="#Question" class="headerlink" title="Question"></a>Question</h2><p><img src="STUCK.png" alt="question"></p><h2 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h2><p>Arrays or stacks can be used to store data, multiply and divide first, convert all operations into additions, and then add.</p><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><p>Here is the solution to this problem.The following are two solutions, the result is 100 points.</p><h3 id="Program"><a href="#Program" class="headerlink" title="Program"></a>Program</h3><h4 id="Method-One"><a href="#Method-One" class="headerlink" title="Method One"></a>Method One</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  main.cpp</span></span><br><span class="line"><span class="comment">//  STUCK</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  Created by gang du on 2019/6/09.</span></span><br><span class="line"><span class="comment">//  Copyright © 2019 gang du. All rights reserved.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;memory.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LIM 50</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">allDFS</span><span class="params">(<span class="keyword">char</span> Map[LIM][LIM],<span class="keyword">bool</span> sign[LIM][LIM],<span class="keyword">int</span> startX,<span class="keyword">int</span> startY,<span class="keyword">int</span> row,<span class="keyword">int</span> col,<span class="keyword">bool</span> mark)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(mark==<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>((Map[startX][startY]==<span class="string">'S'</span>) || (Map[startX][startY]==<span class="string">'+'</span>) || (Map[startX][startY]==<span class="string">'T'</span>))&#123;</span><br><span class="line">            sign[startX][startY]=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(startX!=<span class="number">0</span> &amp;&amp; sign[startX<span class="number">-1</span>][startY]==<span class="number">0</span> &amp;&amp; Map[startX<span class="number">-1</span>][startY]!=<span class="string">'#'</span>)</span><br><span class="line">                allDFS(Map,sign,startX<span class="number">-1</span>,startY,row,col,<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span>((startX+<span class="number">1</span>)!=row &amp;&amp; sign[startX+<span class="number">1</span>][startY]==<span class="number">0</span> &amp;&amp; Map[startX+<span class="number">1</span>][startY]!=<span class="string">'#'</span>)</span><br><span class="line">                allDFS(Map,sign,startX+<span class="number">1</span>,startY,row,col,<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span>(startY!=<span class="number">0</span> &amp;&amp; sign[startX][startY<span class="number">-1</span>]==<span class="number">0</span> &amp;&amp; Map[startX][startY<span class="number">-1</span>]!=<span class="string">'#'</span>)</span><br><span class="line">                allDFS(Map,sign,startX,startY<span class="number">-1</span>,row,col,<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span>((startY+<span class="number">1</span>)!=col &amp;&amp; sign[startX][startY+<span class="number">1</span>]==<span class="number">0</span> &amp;&amp; Map[startX][startY+<span class="number">1</span>]!=<span class="string">'#'</span>)</span><br><span class="line">                allDFS(Map,sign,startX,startY+<span class="number">1</span>,row,col,<span class="number">1</span>); </span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(Map[startX][startY]==<span class="string">'-'</span>)&#123;</span><br><span class="line">            sign[startX][startY]=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(startY!=<span class="number">0</span> &amp;&amp; sign[startX][startY<span class="number">-1</span>]==<span class="number">0</span> &amp;&amp; Map[startX][startY<span class="number">-1</span>]!=<span class="string">'#'</span>)</span><br><span class="line">                allDFS(Map,sign,startX,startY<span class="number">-1</span>,row,col,<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span>((startY+<span class="number">1</span>)!=col &amp;&amp; sign[startX][startY+<span class="number">1</span>]==<span class="number">0</span> &amp;&amp; Map[startX][startY+<span class="number">1</span>]!=<span class="string">'#'</span>)</span><br><span class="line">                allDFS(Map,sign,startX,startY+<span class="number">1</span>,row,col,<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(Map[startX][startY]==<span class="string">'|'</span>)&#123;</span><br><span class="line">            sign[startX][startY]=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(startX!=<span class="number">0</span> &amp;&amp; sign[startX<span class="number">-1</span>][startY]==<span class="number">0</span> &amp;&amp; Map[startX<span class="number">-1</span>][startY]!=<span class="string">'#'</span>)</span><br><span class="line">                allDFS(Map,sign,startX<span class="number">-1</span>,startY,row,col,<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span>((startX+<span class="number">1</span>)!=row &amp;&amp; sign[startX+<span class="number">1</span>][startY]==<span class="number">0</span> &amp;&amp; Map[startX+<span class="number">1</span>][startY]!=<span class="string">'#'</span>)</span><br><span class="line">                allDFS(Map,sign,startX+<span class="number">1</span>,startY,row,col,<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(Map[startX][startY]==<span class="string">'.'</span>)&#123;</span><br><span class="line">            sign[startX][startY]=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>((startX+<span class="number">1</span>)!=row &amp;&amp; sign[startX+<span class="number">1</span>][startY]==<span class="number">0</span> &amp;&amp; Map[startX+<span class="number">1</span>][startY]!=<span class="string">'#'</span>)</span><br><span class="line">                allDFS(Map,sign,startX+<span class="number">1</span>,startY,row,col,<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123; </span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(Map[startX][startY]!=<span class="string">'#'</span>)&#123;</span><br><span class="line">            sign[startX][startY]=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(startX!=<span class="number">0</span> &amp;&amp; sign[startX<span class="number">-1</span>][startY]==<span class="number">0</span> &amp;&amp; (Map[startX<span class="number">-1</span>][startY]==<span class="string">'+'</span> || Map[startX<span class="number">-1</span>][startY]==<span class="string">'|'</span> || Map[startX<span class="number">-1</span>][startY]==<span class="string">'.'</span> || Map[startX<span class="number">-1</span>][startY]==<span class="string">'S'</span> || Map[startX<span class="number">-1</span>][startY]==<span class="string">'T'</span>))</span><br><span class="line">                allDFS(Map,sign,startX<span class="number">-1</span>,startY,row,col,<span class="number">0</span>);</span><br><span class="line">            <span class="keyword">if</span>((startX+<span class="number">1</span>)!=row &amp;&amp; sign[startX+<span class="number">1</span>][startY]==<span class="number">0</span> &amp;&amp; (Map[startX+<span class="number">1</span>][startY]==<span class="string">'+'</span> || Map[startX+<span class="number">1</span>][startY]==<span class="string">'|'</span> || Map[startX+<span class="number">1</span>][startY]==<span class="string">'S'</span> || Map[startX+<span class="number">1</span>][startY]==<span class="string">'T'</span>))</span><br><span class="line">                allDFS(Map,sign,startX+<span class="number">1</span>,startY,row,col,<span class="number">0</span>);</span><br><span class="line">            <span class="keyword">if</span>(startY!=<span class="number">0</span> &amp;&amp; sign[startX][startY<span class="number">-1</span>]==<span class="number">0</span> &amp;&amp; (Map[startX][startY<span class="number">-1</span>]==<span class="string">'+'</span> || Map[startX][startY<span class="number">-1</span>]==<span class="string">'-'</span> || Map[startX][startY<span class="number">-1</span>]==<span class="string">'S'</span> || Map[startX][startY<span class="number">-1</span>]==<span class="string">'T'</span>))</span><br><span class="line">                allDFS(Map,sign,startX,startY<span class="number">-1</span>,row,col,<span class="number">0</span>);</span><br><span class="line">            <span class="keyword">if</span>((startY+<span class="number">1</span>)!=col &amp;&amp; sign[startX][startY+<span class="number">1</span>]==<span class="number">0</span> &amp;&amp; (Map[startX][startY+<span class="number">1</span>]==<span class="string">'+'</span> || Map[startX][startY+<span class="number">1</span>]==<span class="string">'-'</span> || Map[startX][startY+<span class="number">1</span>]==<span class="string">'S'</span> || Map[startX][startY+<span class="number">1</span>]==<span class="string">'T'</span>))</span><br><span class="line">                allDFS(Map,sign,startX,startY+<span class="number">1</span>,row,col,<span class="number">0</span>); </span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> row,col,i,j,sx,sy,ex,ey,num=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">bool</span> fCanSearch[LIM][LIM],bCanSearch[LIM][LIM];</span><br><span class="line"><span class="keyword">char</span> Map[LIM][LIM];</span><br><span class="line"><span class="built_in">memset</span>(fCanSearch,<span class="number">0</span>,LIM*LIM);</span><br><span class="line"><span class="built_in">memset</span>(bCanSearch,<span class="number">0</span>,LIM*LIM);</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;row&gt;&gt;col;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;row;i++)</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;col;j++)&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;Map[i][j];</span><br><span class="line"><span class="keyword">if</span>(Map[i][j]==<span class="string">'S'</span>)&#123;</span><br><span class="line">sx=i;sy=j;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(Map[i][j]==<span class="string">'T'</span>)&#123;</span><br><span class="line">ex=i;ey=j;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">allDFS(Map,fCanSearch,sx,sy,row,col,<span class="number">1</span>);</span><br><span class="line">allDFS(Map,bCanSearch,ex,ey,row,col,<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(fCanSearch[ex][ey]==<span class="number">0</span>)&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"I'm stuck!"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;row;i++)</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;col;j++)&#123;</span><br><span class="line"><span class="keyword">if</span>(fCanSearch[i][j]==<span class="number">1</span> &amp;&amp; bCanSearch[i][j]==<span class="number">0</span>)</span><br><span class="line">num++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;num&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Method-Two"><a href="#Method-Two" class="headerlink" title="Method Two"></a>Method Two</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  main.cpp</span></span><br><span class="line"><span class="comment">//  STUCK</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  Created by gang du on 2019/6/09.</span></span><br><span class="line"><span class="comment">//  Copyright © 2019 gang du. All rights reserved.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">P</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> x,y;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">char</span> Map[<span class="number">55</span>][<span class="number">55</span>];</span><br><span class="line"><span class="keyword">int</span> mov[<span class="number">4</span>][<span class="number">2</span>]=&#123;&#123;<span class="number">1</span>,<span class="number">0</span>&#125;,&#123;<span class="number">-1</span>,<span class="number">0</span>&#125;,&#123;<span class="number">0</span>,<span class="number">-1</span>&#125;,&#123;<span class="number">0</span>,<span class="number">1</span>&#125;&#125;;</span><br><span class="line"><span class="keyword">bool</span> able[<span class="number">55</span>][<span class="number">55</span>][<span class="number">55</span>][<span class="number">55</span>],v1[<span class="number">55</span>][<span class="number">55</span>],v2[<span class="number">55</span>][<span class="number">55</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get</span><span class="params">(P a,<span class="keyword">int</span> &amp;st,<span class="keyword">int</span> &amp;ed)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(Map[a.x][a.y]==<span class="string">'-'</span>) st=<span class="number">2</span>,ed=<span class="number">4</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(Map[a.x][a.y]==<span class="string">'|'</span>) st=<span class="number">0</span>,ed=<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(Map[a.x][a.y]==<span class="string">'.'</span>) st=<span class="number">0</span>,ed=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span> st=<span class="number">0</span>,ed=<span class="number">4</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,m,i,j;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;++i) <span class="built_in">scanf</span>(<span class="string">"%s"</span>,Map[i]);</span><br><span class="line">    <span class="built_in">queue</span>&lt;P&gt; q;</span><br><span class="line">    P p,e;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;++i)</span><br><span class="line">    <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;m;++j)&#123;</span><br><span class="line">        <span class="keyword">if</span>(Map[i][j]==<span class="string">'S'</span>)&#123;</span><br><span class="line">            p.x=i,p.y=j;</span><br><span class="line">            q.push(p);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(Map[i][j]==<span class="string">'T'</span>)&#123;</span><br><span class="line">            e.x=i,e.y=j;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">memset</span>(v1,<span class="number">0</span>,<span class="keyword">sizeof</span>(v1));</span><br><span class="line">    <span class="built_in">memset</span>(v2,<span class="number">0</span>,<span class="keyword">sizeof</span>(v2));</span><br><span class="line">    <span class="built_in">memset</span>(able,<span class="number">0</span>,<span class="keyword">sizeof</span>(able));</span><br><span class="line">    v1[p.x][p.y]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(!q.empty())&#123;</span><br><span class="line">        p=q.front();q.pop();</span><br><span class="line">        P tem=p;</span><br><span class="line">        <span class="keyword">int</span> st,ed;</span><br><span class="line">        get(p,st,ed);</span><br><span class="line">        <span class="keyword">for</span>(i=st;i&lt;ed;++i)&#123;</span><br><span class="line">            tem.x=p.x+mov[i][<span class="number">0</span>];</span><br><span class="line">            tem.y=p.y+mov[i][<span class="number">1</span>];</span><br><span class="line">            <span class="keyword">if</span>(tem.x&gt;=<span class="number">0</span>&amp;&amp;tem.y&gt;=<span class="number">0</span>&amp;&amp;tem.x&lt;n&amp;&amp;tem.y&lt;m&amp;&amp;Map[tem.x][tem.y]!=<span class="string">'#'</span>)&#123;</span><br><span class="line">                able[p.x][p.y][tem.x][tem.y]=<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span>(!v1[tem.x][tem.y])&#123;</span><br><span class="line">                    v1[tem.x][tem.y]=<span class="number">1</span>;</span><br><span class="line">                    q.push(tem);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!v1[e.x][e.y]) &#123;<span class="built_in">puts</span>(<span class="string">"I'm stuck!"</span>);<span class="keyword">return</span> <span class="number">0</span>;&#125;</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    q.push(e);</span><br><span class="line">    v2[e.x][e.y]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(!q.empty())&#123;</span><br><span class="line">        p=q.front();q.pop();</span><br><span class="line">        P tem=p;</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">4</span>;++i)&#123;</span><br><span class="line">            tem.x=p.x+mov[i][<span class="number">0</span>];</span><br><span class="line">            tem.y=p.y+mov[i][<span class="number">1</span>];</span><br><span class="line">            <span class="keyword">if</span>(tem.x&gt;=<span class="number">0</span>&amp;&amp;tem.y&gt;=<span class="number">0</span>&amp;&amp;tem.x&lt;n&amp;&amp;tem.y&lt;m&amp;&amp;Map[tem.x][tem.y]!=<span class="string">'#'</span>&amp;&amp;able[tem.x][tem.y][p.x][p.y]&amp;&amp;!v2[tem.x][tem.y])&#123;</span><br><span class="line">                v2[tem.x][tem.y]=<span class="number">1</span>;</span><br><span class="line">                q.push(tem);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;++i)</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;m;++j)</span><br><span class="line">            <span class="keyword">if</span>(v1[i][j]&amp;&amp;!v2[i][j]) ++ans;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Remarks"><a href="#Remarks" class="headerlink" title="Remarks"></a>Remarks</h3><p>This program is written in C++ and uses standard input and output functions.</p>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> algorithm </tag>
            
            <tag> ccf-csp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CCF-CSP Questions (four)</title>
      <link href="/2019/05/07/CCF-CSP-Questions-four/"/>
      <url>/2019/05/07/CCF-CSP-Questions-four/</url>
      
        <content type="html"><![CDATA[<p>Algorithms change the world. The importance of algorithms is self-evident to a programmer, so the practice of some algorithms is indispensable. Next, I will share some algorithmic problems.</p><h2 id="Question"><a href="#Question" class="headerlink" title="Question"></a>Question</h2><p><img src="MPI.png" alt="question"></p><h2 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h2><p>Arrays or stacks can be used to store data, multiply and divide first, convert all operations into additions, and then add.</p><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><p>Here is the solution to this problem.The following are two solutions, the result is 100 points.</p><h3 id="Program"><a href="#Program" class="headerlink" title="Program"></a>Program</h3><h4 id="Method-One"><a href="#Method-One" class="headerlink" title="Method One"></a>Method One</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  main.cpp</span></span><br><span class="line"><span class="comment">//  DRAIDF</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  Created by gang du on 2019/5/7.</span></span><br><span class="line"><span class="comment">//  Copyright © 2019 gang du. All rights reserved.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> BLOCK_SIZE=<span class="number">4</span>;</span><br><span class="line"><span class="built_in">string</span> disk[<span class="number">1000</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> disk_num, band_size, disk_remain, output_num, output_block[<span class="number">1000</span>], disk_band=<span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; disk_num &gt;&gt; band_size &gt;&gt; disk_remain;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;disk_remain; i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> j;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; j &gt;&gt; disk[j];</span><br><span class="line">        <span class="comment">// disk_band -&gt; the number of band in a disk;</span></span><br><span class="line">        <span class="keyword">if</span>(disk_band==<span class="number">0</span>)</span><br><span class="line">            disk_band = (<span class="keyword">int</span>)disk[j].size()/(band_size*BLOCK_SIZE*<span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; output_num;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;output_num; i++)&#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; output_block[i];</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">int</span> block_longitude, block_latitude, band_longitude, band_latitude, band_num;</span><br><span class="line">        band_num = output_block[i]/band_size;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// block_longitude -&gt; block in which disk; block_latitude -&gt; block's position in disk;</span></span><br><span class="line">        <span class="comment">// band_longitude -&gt; band in which disk; band_latitude -&gt; band's position in disk;</span></span><br><span class="line">        band_latitude = band_num/(disk_num<span class="number">-1</span>);</span><br><span class="line">        <span class="keyword">int</span> check_disk;</span><br><span class="line">        check_disk = (disk_num<span class="number">-1</span>)-band_latitude%disk_num;</span><br><span class="line">        band_longitude = check_disk+band_num%(disk_num<span class="number">-1</span>)+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(band_longitude&gt;=disk_num)</span><br><span class="line">            band_longitude -= disk_num;</span><br><span class="line">        </span><br><span class="line">        block_longitude = band_longitude;</span><br><span class="line">        block_latitude = band_latitude*band_size+output_block[i]%band_size;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// cout &lt;&lt; block_longitude &lt;&lt; " " &lt;&lt; block_latitude &lt;&lt; endl;</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>((disk[block_longitude].empty() &amp;&amp; (disk_num-disk_remain)&gt;<span class="number">1</span>) || output_block[i]&gt;(disk_band*band_size*(disk_num<span class="number">-1</span>)<span class="number">-1</span>) || disk_band==<span class="number">0</span>)</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">"-"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">int</span> block_start = block_latitude*BLOCK_SIZE*<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span>(!disk[block_longitude].empty())</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; disk[block_longitude].substr(block_start, BLOCK_SIZE*<span class="number">2</span>) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;BLOCK_SIZE*<span class="number">2</span>; j++)&#123;</span><br><span class="line">                    <span class="keyword">int</span> temp = <span class="number">0</span>;</span><br><span class="line">                    <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>; k&lt;disk_num<span class="number">-1</span>; k++)&#123;</span><br><span class="line">                        <span class="keyword">if</span>(k!=block_longitude &amp;&amp; disk[k][block_start]&gt;=<span class="string">'A'</span> &amp;&amp; disk[k][block_start]&lt;=<span class="string">'Z'</span>)&#123;</span><br><span class="line">                            temp=temp^((<span class="keyword">int</span>)disk[k][block_start]<span class="number">-55</span>);</span><br><span class="line">                        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(k!=block_longitude &amp;&amp; disk[k][block_start]&gt;=<span class="string">'0'</span> &amp;&amp; disk[k][block_start]&lt;=<span class="string">'9'</span>)&#123;</span><br><span class="line">                            temp=temp^((<span class="keyword">int</span>)disk[k][block_start]<span class="number">-48</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="built_in">cout</span> &lt;&lt; uppercase &lt;&lt; hex &lt;&lt; temp;</span><br><span class="line">                    block_start ++;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Method-Two"><a href="#Method-Two" class="headerlink" title="Method Two"></a>Method Two</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  main.cpp</span></span><br><span class="line"><span class="comment">//  DRAIDF</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  Created by gang du on 2019/5/7.</span></span><br><span class="line"><span class="comment">//  Copyright © 2019 gang du. All rights reserved.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> len = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">char</span> <span class="title">getc</span><span class="params">(<span class="keyword">char</span> c)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(c&lt;<span class="number">10</span>)</span><br><span class="line">        <span class="keyword">return</span> c+<span class="string">'0'</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(c&lt;=<span class="number">16</span>)</span><br><span class="line">        <span class="keyword">return</span> c+<span class="string">'A'</span><span class="number">-10</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(c&lt;=<span class="string">'9'</span>)</span><br><span class="line">        <span class="keyword">return</span> c-<span class="string">'0'</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(c&lt;=<span class="string">'F'</span>)</span><br><span class="line">        <span class="keyword">return</span> c-<span class="string">'A'</span>+<span class="number">10</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">cxor</span><span class="params">(<span class="built_in">string</span> &amp;a,<span class="built_in">string</span> b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">8</span>;i++)&#123;</span><br><span class="line">        a[i]=getc(getc(a[i])^getc(b[i]));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getdata</span><span class="params">(<span class="built_in">string</span> dskd[], <span class="keyword">int</span> n, <span class="keyword">int</span> s, <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> level=r/((n<span class="number">-1</span>)*s);                           <span class="comment">//获取读取的数据层数</span></span><br><span class="line">    <span class="keyword">int</span> curp=(n-level%n)<span class="number">-1</span>;                          <span class="comment">//获取读取的数据层数P块所在位置</span></span><br><span class="line">    <span class="keyword">int</span> blk=level*s+r%s;                             <span class="comment">//获取数据所在硬盘的块索引</span></span><br><span class="line">    <span class="keyword">int</span> disk=r%((n<span class="number">-1</span>)*s)/s+curp+<span class="number">1</span>;                   <span class="comment">//获取读取的数据所在硬盘索引</span></span><br><span class="line">    disk=disk%n;</span><br><span class="line">    <span class="keyword">if</span>(len&lt;blk*<span class="number">8</span>+<span class="number">8</span>||len==<span class="number">0</span>)&#123;                         <span class="comment">//如果获取的长度超过了硬盘数据长度，直接输出减号退出</span></span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"-"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(dskd[disk].length()!=<span class="number">0</span>)                       <span class="comment">//如果当前盘存在，直接输出</span></span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;dskd[disk].substr(blk*<span class="number">8</span>,<span class="number">8</span>)&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(dskd[disk].length()==<span class="number">0</span>&amp;&amp;n-l==<span class="number">1</span>)&#123;         <span class="comment">//如果当前盘缺失，且可以恢复，则通过异或读取对应的数据</span></span><br><span class="line">        <span class="built_in">string</span> str=<span class="string">"00000000"</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(i!=disk)</span><br><span class="line">                cxor(str,dskd[i].substr(blk*<span class="number">8</span>,<span class="number">8</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;str&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span></span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"-"</span>&lt;&lt;<span class="built_in">endl</span>;                             <span class="comment">//如果当前盘缺失且不可以恢复，输出减号。</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,s,l;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;s&gt;&gt;l;</span><br><span class="line">    <span class="built_in">string</span> dskd[<span class="number">1010</span>];</span><br><span class="line">    <span class="keyword">int</span> dpos;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;l;i++)&#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;dpos;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;dskd[dpos];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> m;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;m;</span><br><span class="line">    <span class="keyword">int</span> a[<span class="number">1000</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++)&#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(dskd[i].length()!=<span class="number">0</span>)&#123;</span><br><span class="line">            len = dskd[i].length();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++)&#123;</span><br><span class="line">        getdata(dskd,n,s,l,a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Remarks"><a href="#Remarks" class="headerlink" title="Remarks"></a>Remarks</h3><p>This program is written in C++ and uses standard input and output functions.</p>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> algorithm </tag>
            
            <tag> ccf-csp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CCF-CSP Questions (three)</title>
      <link href="/2019/04/27/CCF-CSP-Questions-three/"/>
      <url>/2019/04/27/CCF-CSP-Questions-three/</url>
      
        <content type="html"><![CDATA[<p>Algorithms change the world. The importance of algorithms is self-evident to a programmer, so the practice of some algorithms is indispensable. Next, I will share some algorithmic problems.</p><h2 id="Question"><a href="#Question" class="headerlink" title="Question"></a>Question</h2><p><img src="DRAIDF.png" alt="question"></p><h2 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h2><p>Arrays or stacks can be used to store data, multiply and divide first, convert all operations into additions, and then add.</p><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><p>Here is the solution to this problem.The following are two solutions, the result is 100 points.</p><h3 id="Program"><a href="#Program" class="headerlink" title="Program"></a>Program</h3><h4 id="Method-One"><a href="#Method-One" class="headerlink" title="Method One"></a>Method One</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  main.cpp</span></span><br><span class="line"><span class="comment">//  DRAIDF</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  Created by gang du on 2019/4/27.</span></span><br><span class="line"><span class="comment">//  Copyright © 2019 gang du. All rights reserved.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> BLOCK_SIZE=<span class="number">4</span>;</span><br><span class="line"><span class="built_in">string</span> disk[<span class="number">1000</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> disk_num, band_size, disk_remain, output_num, output_block[<span class="number">1000</span>], disk_band=<span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; disk_num &gt;&gt; band_size &gt;&gt; disk_remain;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;disk_remain; i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> j;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; j &gt;&gt; disk[j];</span><br><span class="line">        <span class="comment">// disk_band -&gt; the number of band in a disk;</span></span><br><span class="line">        <span class="keyword">if</span>(disk_band==<span class="number">0</span>)</span><br><span class="line">            disk_band = (<span class="keyword">int</span>)disk[j].size()/(band_size*BLOCK_SIZE*<span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; output_num;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;output_num; i++)&#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; output_block[i];</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">int</span> block_longitude, block_latitude, band_longitude, band_latitude, band_num;</span><br><span class="line">        band_num = output_block[i]/band_size;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// block_longitude -&gt; block in which disk; block_latitude -&gt; block's position in disk;</span></span><br><span class="line">        <span class="comment">// band_longitude -&gt; band in which disk; band_latitude -&gt; band's position in disk;</span></span><br><span class="line">        band_latitude = band_num/(disk_num<span class="number">-1</span>);</span><br><span class="line">        <span class="keyword">int</span> check_disk;</span><br><span class="line">        check_disk = (disk_num<span class="number">-1</span>)-band_latitude%disk_num;</span><br><span class="line">        band_longitude = check_disk+band_num%(disk_num<span class="number">-1</span>)+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(band_longitude&gt;=disk_num)</span><br><span class="line">            band_longitude -= disk_num;</span><br><span class="line">        </span><br><span class="line">        block_longitude = band_longitude;</span><br><span class="line">        block_latitude = band_latitude*band_size+output_block[i]%band_size;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// cout &lt;&lt; block_longitude &lt;&lt; " " &lt;&lt; block_latitude &lt;&lt; endl;</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>((disk[block_longitude].empty() &amp;&amp; (disk_num-disk_remain)&gt;<span class="number">1</span>) || output_block[i]&gt;(disk_band*band_size*(disk_num<span class="number">-1</span>)<span class="number">-1</span>) || disk_band==<span class="number">0</span>)</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">"-"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">int</span> block_start = block_latitude*BLOCK_SIZE*<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span>(!disk[block_longitude].empty())</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; disk[block_longitude].substr(block_start, BLOCK_SIZE*<span class="number">2</span>) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;BLOCK_SIZE*<span class="number">2</span>; j++)&#123;</span><br><span class="line">                    <span class="keyword">int</span> temp = <span class="number">0</span>;</span><br><span class="line">                    <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>; k&lt;disk_num<span class="number">-1</span>; k++)&#123;</span><br><span class="line">                        <span class="keyword">if</span>(k!=block_longitude &amp;&amp; disk[k][block_start]&gt;=<span class="string">'A'</span> &amp;&amp; disk[k][block_start]&lt;=<span class="string">'Z'</span>)&#123;</span><br><span class="line">                            temp=temp^((<span class="keyword">int</span>)disk[k][block_start]<span class="number">-55</span>);</span><br><span class="line">                        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(k!=block_longitude &amp;&amp; disk[k][block_start]&gt;=<span class="string">'0'</span> &amp;&amp; disk[k][block_start]&lt;=<span class="string">'9'</span>)&#123;</span><br><span class="line">                            temp=temp^((<span class="keyword">int</span>)disk[k][block_start]<span class="number">-48</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="built_in">cout</span> &lt;&lt; uppercase &lt;&lt; hex &lt;&lt; temp;</span><br><span class="line">                    block_start ++;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Method-Two"><a href="#Method-Two" class="headerlink" title="Method Two"></a>Method Two</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  main.cpp</span></span><br><span class="line"><span class="comment">//  DRAIDF</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  Created by gang du on 2019/4/27.</span></span><br><span class="line"><span class="comment">//  Copyright © 2019 gang du. All rights reserved.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> len = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">char</span> <span class="title">getc</span><span class="params">(<span class="keyword">char</span> c)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(c&lt;<span class="number">10</span>)</span><br><span class="line">        <span class="keyword">return</span> c+<span class="string">'0'</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(c&lt;=<span class="number">16</span>)</span><br><span class="line">        <span class="keyword">return</span> c+<span class="string">'A'</span><span class="number">-10</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(c&lt;=<span class="string">'9'</span>)</span><br><span class="line">        <span class="keyword">return</span> c-<span class="string">'0'</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(c&lt;=<span class="string">'F'</span>)</span><br><span class="line">        <span class="keyword">return</span> c-<span class="string">'A'</span>+<span class="number">10</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">cxor</span><span class="params">(<span class="built_in">string</span> &amp;a,<span class="built_in">string</span> b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">8</span>;i++)&#123;</span><br><span class="line">        a[i]=getc(getc(a[i])^getc(b[i]));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getdata</span><span class="params">(<span class="built_in">string</span> dskd[], <span class="keyword">int</span> n, <span class="keyword">int</span> s, <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> level=r/((n<span class="number">-1</span>)*s);                           <span class="comment">//获取读取的数据层数</span></span><br><span class="line">    <span class="keyword">int</span> curp=(n-level%n)<span class="number">-1</span>;                          <span class="comment">//获取读取的数据层数P块所在位置</span></span><br><span class="line">    <span class="keyword">int</span> blk=level*s+r%s;                             <span class="comment">//获取数据所在硬盘的块索引</span></span><br><span class="line">    <span class="keyword">int</span> disk=r%((n<span class="number">-1</span>)*s)/s+curp+<span class="number">1</span>;                   <span class="comment">//获取读取的数据所在硬盘索引</span></span><br><span class="line">    disk=disk%n;</span><br><span class="line">    <span class="keyword">if</span>(len&lt;blk*<span class="number">8</span>+<span class="number">8</span>||len==<span class="number">0</span>)&#123;                         <span class="comment">//如果获取的长度超过了硬盘数据长度，直接输出减号退出</span></span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"-"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(dskd[disk].length()!=<span class="number">0</span>)                       <span class="comment">//如果当前盘存在，直接输出</span></span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;dskd[disk].substr(blk*<span class="number">8</span>,<span class="number">8</span>)&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(dskd[disk].length()==<span class="number">0</span>&amp;&amp;n-l==<span class="number">1</span>)&#123;         <span class="comment">//如果当前盘缺失，且可以恢复，则通过异或读取对应的数据</span></span><br><span class="line">        <span class="built_in">string</span> str=<span class="string">"00000000"</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(i!=disk)</span><br><span class="line">                cxor(str,dskd[i].substr(blk*<span class="number">8</span>,<span class="number">8</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;str&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span></span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"-"</span>&lt;&lt;<span class="built_in">endl</span>;                             <span class="comment">//如果当前盘缺失且不可以恢复，输出减号。</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,s,l;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;s&gt;&gt;l;</span><br><span class="line">    <span class="built_in">string</span> dskd[<span class="number">1010</span>];</span><br><span class="line">    <span class="keyword">int</span> dpos;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;l;i++)&#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;dpos;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;dskd[dpos];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> m;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;m;</span><br><span class="line">    <span class="keyword">int</span> a[<span class="number">1000</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++)&#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(dskd[i].length()!=<span class="number">0</span>)&#123;</span><br><span class="line">            len = dskd[i].length();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++)&#123;</span><br><span class="line">        getdata(dskd,n,s,l,a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Remarks"><a href="#Remarks" class="headerlink" title="Remarks"></a>Remarks</h3><p>This program is written in C++ and uses standard input and output functions.</p>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> algorithm </tag>
            
            <tag> ccf-csp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CCF-CSP Questions (two)</title>
      <link href="/2019/04/21/CCF-CSP-Questions-two/"/>
      <url>/2019/04/21/CCF-CSP-Questions-two/</url>
      
        <content type="html"><![CDATA[<p>Algorithms change the world. The importance of algorithms is self-evident to a programmer, so the practice of some algorithms is indispensable. Next, I will share some algorithmic problems.</p><h2 id="Question"><a href="#Question" class="headerlink" title="Question"></a>Question</h2><p><img src="TFP.png" alt="question"></p><h2 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h2><p>Arrays or stacks can be used to store data, multiply and divide first, convert all operations into additions, and then add.</p><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><p>Here is the solution to this problem.The following are two solutions, the result is 100 points.</p><h3 id="Program"><a href="#Program" class="headerlink" title="Program"></a>Program</h3><h4 id="Method-One"><a href="#Method-One" class="headerlink" title="Method One"></a>Method One</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  main.cpp</span></span><br><span class="line"><span class="comment">//  TFP</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  Created by gang du on 2019/4/21.</span></span><br><span class="line"><span class="comment">//  Copyright © 2019 gang du. All rights reserved.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> LIM = <span class="number">100000</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">calculate</span><span class="params">(<span class="keyword">int</span> formula[<span class="number">7</span>])</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> num;</span><br><span class="line">    <span class="built_in">string</span> data[LIM];</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;num;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;num; i++)</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;data[i];</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;num; i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> formula[<span class="number">7</span>];</span><br><span class="line">        <span class="comment">// + -&gt; 0, - -&gt; 1, x -&gt; 2, / -&gt; 3;</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;<span class="number">7</span>; j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(j==<span class="number">0</span> || j==<span class="number">2</span> || j==<span class="number">4</span> || j==<span class="number">6</span>)&#123;</span><br><span class="line">                formula[j]=(<span class="keyword">int</span>)data[i][j]<span class="number">-48</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(j==<span class="number">1</span> || j==<span class="number">3</span> || j==<span class="number">5</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(data[i][j]==<span class="string">'+'</span>)</span><br><span class="line">                    formula[j]=<span class="number">0</span>;</span><br><span class="line">                <span class="keyword">if</span>(data[i][j]==<span class="string">'-'</span>)</span><br><span class="line">                    formula[j]=<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span>(data[i][j]==<span class="string">'x'</span>)</span><br><span class="line">                    formula[j]=<span class="number">2</span>;</span><br><span class="line">                <span class="keyword">if</span>(data[i][j]==<span class="string">'/'</span>)</span><br><span class="line">                    formula[j]=<span class="number">3</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//cout&lt;&lt;data[i]&lt;&lt;endl;</span></span><br><span class="line">        <span class="keyword">if</span>(calculate(formula)==<span class="number">24</span>)&#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"Yes"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"No"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">calculate</span><span class="params">(<span class="keyword">int</span> formula[<span class="number">7</span>])</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">3</span>; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(formula[i*<span class="number">2</span>+<span class="number">1</span>]==<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">int</span> temp=formula[i*<span class="number">2</span>+<span class="number">2</span>];</span><br><span class="line">            formula[i*<span class="number">2</span>+<span class="number">2</span>]=-temp;</span><br><span class="line">            formula[i*<span class="number">2</span>+<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(formula[i*<span class="number">2</span>+<span class="number">1</span>]==<span class="number">2</span>)&#123;</span><br><span class="line">            <span class="keyword">int</span> temp=formula[i*<span class="number">2</span>]*formula[i*<span class="number">2</span>+<span class="number">2</span>];</span><br><span class="line">            formula[i*<span class="number">2</span>]=<span class="number">0</span>;</span><br><span class="line">            formula[i*<span class="number">2</span>+<span class="number">2</span>]=temp;</span><br><span class="line">            formula[i*<span class="number">2</span>+<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(formula[i*<span class="number">2</span>+<span class="number">1</span>]==<span class="number">3</span>)&#123;</span><br><span class="line">            <span class="keyword">int</span> temp=formula[i*<span class="number">2</span>]/formula[i*<span class="number">2</span>+<span class="number">2</span>];</span><br><span class="line">            formula[i*<span class="number">2</span>]=<span class="number">0</span>;</span><br><span class="line">            formula[i*<span class="number">2</span>+<span class="number">2</span>]=temp;</span><br><span class="line">            formula[i*<span class="number">2</span>+<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> formula[<span class="number">0</span>]+formula[<span class="number">2</span>]+formula[<span class="number">4</span>]+formula[<span class="number">6</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Method-Two"><a href="#Method-Two" class="headerlink" title="Method Two"></a>Method Two</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  main.cpp</span></span><br><span class="line"><span class="comment">//  TFP</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  Created by gang du on 2019/4/21.</span></span><br><span class="line"><span class="comment">//  Copyright © 2019 gang du. All rights reserved.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">stack</span>&lt;<span class="keyword">int</span>&gt; num;</span><br><span class="line"><span class="built_in">stack</span>&lt;<span class="keyword">int</span>&gt; sign;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)&#123;</span><br><span class="line">        <span class="built_in">string</span> data;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt;data;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">while</span>(!num.empty()) num.pop();</span><br><span class="line">        <span class="keyword">while</span>(!sign.empty()) sign.pop();</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">int</span> j=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(j&lt;data.size())&#123;</span><br><span class="line">            <span class="keyword">if</span>(data[j]&gt;<span class="string">'0'</span> &amp;&amp; data[j]&lt;=<span class="string">'9'</span>)&#123;</span><br><span class="line">                num.push(data[j]-<span class="string">'0'</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(data[j]==<span class="string">'+'</span>)&#123;</span><br><span class="line">                    sign.push(<span class="string">'+'</span>);</span><br><span class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span>(data[j]==<span class="string">'-'</span>)&#123;</span><br><span class="line">                    num.push((data[j+<span class="number">1</span>]-<span class="string">'0'</span>)*(<span class="number">-1</span>));</span><br><span class="line">                    sign.push(<span class="string">'+'</span>);</span><br><span class="line">                    j++;</span><br><span class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span>(data[j]==<span class="string">'x'</span>)&#123;</span><br><span class="line">                    <span class="keyword">int</span> tmp=num.top();</span><br><span class="line">                    num.pop();</span><br><span class="line">                    num.push(tmp*(data[j+<span class="number">1</span>]-<span class="string">'0'</span>));</span><br><span class="line">                    j++;</span><br><span class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span>(data[j]==<span class="string">'/'</span>)&#123;</span><br><span class="line">                    <span class="keyword">int</span> tmp=num.top();</span><br><span class="line">                    num.pop();</span><br><span class="line">                    num.push(tmp/(data[j+<span class="number">1</span>]-<span class="string">'0'</span>));</span><br><span class="line">                    j++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            j++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(!sign.empty())&#123;</span><br><span class="line">            <span class="keyword">int</span> tmp_ont=num.top();</span><br><span class="line">            num.pop();</span><br><span class="line">            <span class="keyword">int</span> tmp_two=num.top();</span><br><span class="line">            num.pop();</span><br><span class="line">            sign.pop();</span><br><span class="line">            num.push(tmp_ont+tmp_two);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(num.top()==<span class="number">24</span>) <span class="built_in">cout</span> &lt;&lt; <span class="string">"Yes"</span> &lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">cout</span> &lt;&lt; <span class="string">"No"</span> &lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Remarks"><a href="#Remarks" class="headerlink" title="Remarks"></a>Remarks</h3><p>This program is written in C++ and uses standard input and output functions.</p>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> algorithm </tag>
            
            <tag> ccf-csp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CCF-CSP Questions (one)</title>
      <link href="/2019/04/14/CCF-CSP-Questions-one-0/"/>
      <url>/2019/04/14/CCF-CSP-Questions-one-0/</url>
      
        <content type="html"><![CDATA[<p>Algorithms change the world. The importance of algorithms is self-evident to a programmer, so the practice of some algorithms is indispensable. Next, I will share some algorithmic problems.</p><h2 id="Question"><a href="#Question" class="headerlink" title="Question"></a>Question</h2><p><img src="slm.png" alt="question"></p><h2 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h2><p>This problem involves the maximum, minimum and median. Because the knowledge is relatively simple, I will not explain it here.</p><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><p>Here is the solution to this problem.The following are two solutions, the result is 100 points.</p><h3 id="Program"><a href="#Program" class="headerlink" title="Program"></a>Program</h3><h4 id="Method-One"><a href="#Method-One" class="headerlink" title="Method One"></a>Method One</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  main.cpp</span></span><br><span class="line"><span class="comment">//  sml</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  Created by gang du on 2019/4/14.</span></span><br><span class="line"><span class="comment">//  Copyright © 2019 gang du. All rights reserved.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN = <span class="number">100000</span>;</span><br><span class="line"><span class="keyword">int</span> n, data[MAXN];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i, max, min;</span><br><span class="line">    <span class="keyword">double</span> middle;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;n; i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;data[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (data[<span class="number">0</span>] &lt;= data[n<span class="number">-1</span>])&#123;</span><br><span class="line">        max = data[n<span class="number">-1</span>];</span><br><span class="line">        min = data[<span class="number">0</span>];</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        min = data[n<span class="number">-1</span>];</span><br><span class="line">        max = data[<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (n%<span class="number">2</span>==<span class="number">0</span>)&#123;</span><br><span class="line">        middle = (data[n/<span class="number">2</span>]+data[n/<span class="number">2</span><span class="number">-1</span>])*<span class="number">1.0</span>/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span> (middle - (<span class="keyword">int</span>)middle == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d %d %d\n"</span>, max, (<span class="keyword">int</span>)middle, min);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d %.1f %d\n"</span>, max, middle, min);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        middle = data[(n<span class="number">-1</span>)/<span class="number">2</span>];</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d %d %d\n"</span>, max, (<span class="keyword">int</span>)middle, min);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Method-Two"><a href="#Method-Two" class="headerlink" title="Method Two"></a>Method Two</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  main.cpp</span></span><br><span class="line"><span class="comment">//  sml</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  Created by gang du on 2019/4/14.</span></span><br><span class="line"><span class="comment">//  Copyright © 2019 gang du. All rights reserved.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, data, max=<span class="number">0</span>, min=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">double</span> middle=<span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    <span class="keyword">int</span> parity = n &amp; <span class="number">1</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;data);</span><br><span class="line">        <span class="keyword">if</span>(i==<span class="number">0</span>) min=data;</span><br><span class="line">        <span class="keyword">if</span>(i==n<span class="number">-1</span>) max=data;</span><br><span class="line">        <span class="keyword">if</span>(parity &amp;&amp; i==n/<span class="number">2</span>)&#123;</span><br><span class="line">            middle=data;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(!parity &amp;&amp; (i==n/<span class="number">2</span> || i==n/<span class="number">2</span><span class="number">-1</span>))</span><br><span class="line">            middle += data*<span class="number">1.0</span>/<span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(max&lt;=min)&#123;</span><br><span class="line">        <span class="keyword">int</span> temp = max;</span><br><span class="line">        max = min;</span><br><span class="line">        min = temp;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(middle - (<span class="keyword">int</span>)middle == <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d %d %d\n"</span>, max, (<span class="keyword">int</span>)middle, min);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d %.1f %d\n"</span>, max, middle, min);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Remarks"><a href="#Remarks" class="headerlink" title="Remarks"></a>Remarks</h3><p>This program is written in C++ and uses standard input and output functions.</p>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> algorithm </tag>
            
            <tag> ccf-csp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux Reads Serial Data</title>
      <link href="/2019/03/25/Linux-Reads-Serial-Data/"/>
      <url>/2019/03/25/Linux-Reads-Serial-Data/</url>
      
        <content type="html"><![CDATA[<p>Computer serial port data reading is often used when using sensors. Next, I introduce the method of reading Linux serial port data in a project. I hope it will be helpful to you.</p><h2 id="Data-Format"><a href="#Data-Format" class="headerlink" title="Data Format"></a>Data Format</h2><p>A set of data transmitted by the sensor through serial port is 13 bytes. The data format is as follows:<br><img src="data-format.PNG" alt="data format"></p><h2 id="Initialize-Serial-Port"><a href="#Initialize-Serial-Port" class="headerlink" title="Initialize Serial Port"></a>Initialize Serial Port</h2><p>We need to initialize the serial port before reading the serial port data. The initialization of the serial port needs three steps:opening the serial port, setting the parameters of the serial port (including baud rate, data bit, stop bit, check bit).</p><h3 id="Opening-the-Port"><a href="#Opening-the-Port" class="headerlink" title="Opening the Port"></a>Opening the Port</h3><p>The procedure of opening serial port is as follow, function returns a handle:<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">openPort</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> fd;</span><br><span class="line">    fd = open(SERIAL_PORT, O_RDWR | O_NOCTTY |O_NDELAY);   </span><br><span class="line">    <span class="keyword">if</span>(fd == <span class="number">-1</span>)</span><br><span class="line">  &#123;</span><br><span class="line">        perror(<span class="string">"open serial failed!\n"</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;    </span><br><span class="line">    <span class="keyword">return</span> fd;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>SERIAL_PORT is a serial address;<br>O_RDWR means to open in a readable and writable manner;<br>O_NOCTTY indicates that if the open file is a terminal device, the terminal will not be regarded as a process control terminal;<br>O_NDELAY denotes opening a file in an uninterruptible manner.</p><h3 id="Setting-the-Parameters"><a href="#Setting-the-Parameters" class="headerlink" title="Setting the Parameters"></a>Setting the Parameters</h3><p>Here is the program for setting baud rate and data bits<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">setSpeed</span><span class="params">(<span class="keyword">int</span> fd, <span class="keyword">int</span> speed, struct termios Opt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> i;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>(tcgetattr(STDIN_FILENO, &amp;Opt) != <span class="number">0</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    perror(<span class="string">"tcgetattr fd\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//识别波特率,设置输入输出波特率</span></span><br><span class="line">  <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; <span class="keyword">sizeof</span>(speed_arr) / <span class="keyword">sizeof</span>(<span class="keyword">int</span>); i++)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span>(speed == name_arr[i])</span><br><span class="line">    &#123;</span><br><span class="line">      tcflush(fd, TCIOFLUSH);</span><br><span class="line">      <span class="comment">//设置波特率</span></span><br><span class="line">      cfsetispeed(&amp;Opt, speed_arr[i]);</span><br><span class="line">      cfsetospeed(&amp;Opt, speed_arr[i]);</span><br><span class="line">            </span><br><span class="line">      <span class="comment">//设置数据接收方式</span></span><br><span class="line">      <span class="keyword">if</span>(tcsetattr(fd, TCSANOW, &amp;Opt) != <span class="number">0</span>)</span><br><span class="line">      &#123;</span><br><span class="line">        perror(<span class="string">"tcsetattr fd"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      tcflush(fd, TCIOFLUSH);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">setParity</span><span class="params">(<span class="keyword">int</span> fd, <span class="keyword">int</span> databits, <span class="keyword">int</span> stopbits, <span class="keyword">int</span> parity, struct termios Opt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(tcgetattr(fd, &amp;Opt) != <span class="number">0</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    perror(<span class="string">"tcgetattr fd"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  Opt.c_cflag |= (CLOCAL | CREAD);       <span class="comment">//CLOCAL：忽略 modem 控制线。 </span></span><br><span class="line">                                            <span class="comment">//CREAD：打开接受者。</span></span><br><span class="line">  <span class="keyword">switch</span>(databits)           <span class="comment">//设置数据位数</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">      Opt.c_cflag &amp;= ~CSIZE;<span class="comment">//屏蔽字符大小位</span></span><br><span class="line">      Opt.c_cflag |= CS7;    <span class="comment">//选择7位数据位</span></span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">      Opt.c_cflag &amp;= ~CSIZE;</span><br><span class="line">      Opt.c_cflag |= CS8;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">      <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"Unsupported data size.\n"</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">switch</span>(parity)            <span class="comment">//设置校验位</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">'n'</span>:</span><br><span class="line">      Opt.c_cflag &amp;= ~PARENB;        <span class="comment">//清除校验位</span></span><br><span class="line">      Opt.c_iflag &amp;= ~INPCK;        <span class="comment">//启用输入奇偶检测。  </span></span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">'o'</span>:</span><br><span class="line">      Opt.c_cflag |= PARENB;         <span class="comment">//使能校验位</span></span><br><span class="line">      Opt.c_cflag |= PARODD;        <span class="comment">//奇校验</span></span><br><span class="line">      Opt.c_iflag |= INPCK;            <span class="comment">//启用输入奇偶检测。</span></span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">'e'</span>:</span><br><span class="line">      Opt.c_cflag |= PARENB;         <span class="comment">//使能校验位</span></span><br><span class="line">      Opt.c_cflag &amp;= ~PARODD;        <span class="comment">//偶校验</span></span><br><span class="line">      Opt.c_iflag |= INPCK;            <span class="comment">//启用输入奇偶检测。</span></span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">'s'</span>:</span><br><span class="line">      Opt.c_cflag &amp;= ~PARENB;        <span class="comment">//清除校验位</span></span><br><span class="line">      Opt.c_cflag &amp;= ~CSTOPB;       <span class="comment">//设置一个停止位</span></span><br><span class="line">      Opt.c_iflag |= INPCK;            <span class="comment">//启用输入奇偶检测。</span></span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">      <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"Unsupported parity.\n"</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="number">1</span>;    </span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">switch</span>(stopbits)        <span class="comment">//设置停止位</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">      Opt.c_cflag &amp;= ~CSTOPB;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">      Opt.c_cflag |= CSTOPB;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">      <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"Unsupported stopbits.\n"</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  Opt.c_cflag |= (CLOCAL | CREAD);</span><br><span class="line"></span><br><span class="line">  Opt.c_lflag &amp;= ~(ICANON | ECHO | ECHOE | ISIG);</span><br><span class="line"> </span><br><span class="line">  Opt.c_oflag &amp;= ~OPOST;          <span class="comment">//OPOST ：启用具体实现自行定义的输出处理。</span></span><br><span class="line">  Opt.c_oflag &amp;= ~(ONLCR | OCRNL);        <span class="comment">//OCRNL ：将输出中的回车映射为新行符  </span></span><br><span class="line">                                   <span class="comment">//ONLCR ：(XSI) 将输出中的新行符映射为回车-换行。</span></span><br><span class="line">  Opt.c_iflag &amp;= ~(ICRNL | INLCR);        <span class="comment">//ICRNL :将输入中的回车翻译为新行 (除非设置了 IGNCR)(否则当输入信号有 CR 时不会终止输入)。 </span></span><br><span class="line">                                          <span class="comment">//INLCR :将输入中的 NL 翻译为 CR。（将收到的换行符号转换为Return）</span></span><br><span class="line">  Opt.c_iflag &amp;= ~(IXON | IXOFF | IXANY); <span class="comment">//IXON :启用输出的 XON/XOFF 流控制。</span></span><br><span class="line">                                          <span class="comment">//IXOFF :启用输入的 XON/XOFF 流控制。</span></span><br><span class="line">                                          <span class="comment">//IXANY :(不属于 POSIX.1；XSI) 允许任何字符来重新开始输出。</span></span><br><span class="line">  tcflush(fd, TCIFLUSH);  <span class="comment">//清空输入缓存</span></span><br><span class="line">                                          <span class="comment">//MIN = 0 , TIME =0; 有READ立即回传否则传回 0,不读取任何字元</span></span><br><span class="line">  Opt.c_cc[VTIME] = <span class="number">0</span>;        </span><br><span class="line">  Opt.c_cc[VMIN] = <span class="number">0</span>;        </span><br><span class="line">    </span><br><span class="line">  <span class="keyword">if</span>(tcsetattr(fd, TCSANOW, &amp;Opt) != <span class="number">0</span>)  <span class="comment">//设置数据接收方式</span></span><br><span class="line">  &#123;</span><br><span class="line">    perror(<span class="string">"tcsetattr fd"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="Initialize-Port"><a href="#Initialize-Port" class="headerlink" title="Initialize Port"></a>Initialize Port</h3><p>Use the following program to initialize the serial port, the function returns a handle.<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">init</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> fd;</span><br><span class="line">  <span class="class"><span class="keyword">struct</span> <span class="title">termios</span> <span class="title">opt</span>;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">//打开串口</span></span><br><span class="line">  fd = openPort();</span><br><span class="line">  </span><br><span class="line">  <span class="comment">//设置波特率</span></span><br><span class="line">  <span class="keyword">if</span>(setSpeed(fd, PORT_SPEED, opt) == <span class="number">1</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"setSpeed failed!\n"</span>);</span><br><span class="line">  <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">//设置数据位、停止位和校验位</span></span><br><span class="line">  <span class="keyword">if</span>(setParity(fd, DATABITS, STOPBITS, PARITY, opt) == <span class="number">1</span>)</span><br><span class="line">  &#123;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"setParity failed!\n"</span>);</span><br><span class="line">  <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">  &#125; </span><br><span class="line">  <span class="keyword">if</span>(tcsetattr(fd, TCSANOW, &amp;opt) != <span class="number">0</span>)<span class="comment">//TCSANOW：不等数据传输完毕就立即改变属性。</span></span><br><span class="line">  &#123;<span class="comment">//TCSADRAIN：等待所有数据传输结束才改变属性。</span></span><br><span class="line">    perror(<span class="string">"serial error"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> fd;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="Data-Reading-and-Analysis"><a href="#Data-Reading-and-Analysis" class="headerlink" title="Data Reading and Analysis"></a>Data Reading and Analysis</h2><p>A set of data has 13 characters, each time we read a character, we can judge whether it is the starting bit at each reading, and separate each group of data. The judgement method is as follows:<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">readPort</span><span class="params">(<span class="keyword">int</span> fd)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">time_t</span> t;</span><br><span class="line">  <span class="keyword">int</span> signal=<span class="number">0</span>,pm1_0,pm1_1,pm2_0,pm2_1,pm10_0,pm10_1,pm1,pm2,pm10,temporary;</span><br><span class="line">  <span class="keyword">int</span> i,len,n,parameter1,parameter2,Initiator;</span><br><span class="line">  <span class="keyword">char</span> read_buf[<span class="number">24</span>],sql_insert[<span class="number">200</span>];</span><br><span class="line">  <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    bzero(read_buf, <span class="keyword">sizeof</span>(read_buf));    </span><br><span class="line">    <span class="keyword">while</span>((n = read(fd, read_buf, <span class="keyword">sizeof</span>(read_buf))) &gt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="comment">//printf("\nlen= %d \n",n);</span></span><br><span class="line">      <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> tst=(<span class="keyword">int</span>)read_buf[i];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 判断起始符号</span></span><br><span class="line">        parameter2=parameter1;</span><br><span class="line">        parameter1=tst;</span><br><span class="line">        Initiator=parameter1+parameter1;</span><br><span class="line">        <span class="comment">// 累加标志</span></span><br><span class="line">        signal++;</span><br><span class="line">        <span class="comment">// 判断起始位位置</span></span><br><span class="line">        <span class="keyword">if</span>(parameter2==<span class="number">66</span> &amp;&amp; parameter1==<span class="number">77</span>) signal=<span class="number">2</span>;                 </span><br><span class="line">        <span class="keyword">if</span>(signal==<span class="number">11</span>) pm1_0=tst;</span><br><span class="line">        <span class="keyword">if</span>(signal==<span class="number">12</span>) pm1_1=tst;</span><br><span class="line">        <span class="keyword">if</span>(signal==<span class="number">13</span>) pm2_0=tst;</span><br><span class="line">        <span class="keyword">if</span>(signal==<span class="number">14</span>) pm2_1=tst;</span><br><span class="line">        <span class="keyword">if</span>(signal==<span class="number">15</span>) pm10_0=tst;</span><br><span class="line">        <span class="keyword">if</span>(signal==<span class="number">16</span>) pm10_1=tst;</span><br><span class="line">        pm1=pm1_0*<span class="number">256</span>+pm1_1;</span><br><span class="line">        pm2=pm2_0*<span class="number">256</span>+pm2_1;</span><br><span class="line">        pm10=pm10_0*<span class="number">256</span>+pm10_1;</span><br><span class="line">        <span class="keyword">if</span>(signal==<span class="number">49</span>) signal=<span class="number">1</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n pm1.0=%d   pm2.5=%d   pm10=%d \n"</span> ,pm1,pm2,pm10);</span><br><span class="line">        temporary=<span class="number">24</span>;</span><br><span class="line">        t=time(<span class="number">0</span>);</span><br><span class="line">        <span class="built_in">sprintf</span>(sql_insert,<span class="string">"insert into dust_data(`date`,`pm1.0`,`pm2.5`,`pm10`,`temporary`,`host_ip`) values ('%ld','%d','%d','%d','%d','127.0.0.1')"</span>,t,pm1,pm2,pm10,temporary);</span><br><span class="line">        executesql(<span class="string">"delete from dust_data limit 1"</span>);</span><br><span class="line">        executesql(sql_insert);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="Database-Operation"><a href="#Database-Operation" class="headerlink" title="Database Operation"></a>Database Operation</h2><p>I built MySQL database locally and wrote the readed datas directly into the database.</p><h3 id="Initialize-Connection"><a href="#Initialize-Connection" class="headerlink" title="Initialize Connection"></a>Initialize Connection</h3><p>First, initialize the database using the following method:<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">init_mysql</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// init the database connection</span></span><br><span class="line">    g_conn = mysql_init(<span class="literal">NULL</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/* connect the database */</span></span><br><span class="line">    <span class="keyword">if</span>(!mysql_real_connect(g_conn, g_host_name, g_user_name, g_password, g_db_name, g_db_port, <span class="literal">NULL</span>, <span class="number">0</span>))</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>g_host_name is the database address;<br>g_user_name is the database user name;<br>g_password is the database password;<br>g_db_name is the name of the database;<br>g_db_port is the database port;</p><h3 id="Database-Operation-1"><a href="#Database-Operation-1" class="headerlink" title="Database Operation"></a>Database Operation</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">executesql</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> * sql)</span> </span>&#123;</span><br><span class="line">    <span class="comment">/*query the database according the sql*/</span></span><br><span class="line">    <span class="keyword">if</span> (mysql_real_query(g_conn, sql, <span class="built_in">strlen</span>(sql)))</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>; </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> OS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> OS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LAMP Server Environment Tutorial</title>
      <link href="/2019/03/19/LAMP-Server-Environment-Tutorial/"/>
      <url>/2019/03/19/LAMP-Server-Environment-Tutorial/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> web server </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LAMP </tag>
            
            <tag> linux </tag>
            
            <tag> apache </tag>
            
            <tag> mysql </tag>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Start using hexo</title>
      <link href="/2019/03/17/Start-using-hexo/"/>
      <url>/2019/03/17/Start-using-hexo/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vim configuration</title>
      <link href="/2019/03/17/Vim-configuration/"/>
      <url>/2019/03/17/Vim-configuration/</url>
      
        <content type="html"><![CDATA[<p>Vim is one of the most popular text editors on linux, and it is a very powerful editor.</p><p>Next, I take CentOS as an example to introduce the configuration of my vim.</p><h2 id="Live-Demo"><a href="#Live-Demo" class="headerlink" title="Live Demo"></a>Live Demo</h2><p><img src="Live-demo.png" alt=""></p><h2 id="Install-Vim"><a href="#Install-Vim" class="headerlink" title="Install Vim"></a>Install Vim</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./configure --with-features=huge --<span class="built_in">enable</span>-multibyte --<span class="built_in">enable</span>-rubyinterp=yes --<span class="built_in">enable</span>-pythoninterp=yes --<span class="built_in">enable</span>-python3interp=yes --<span class="built_in">enable</span>-luainterp --<span class="built_in">enable</span>-perlinterp --<span class="built_in">enable</span>-cscope</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><h2 id="Install-Vundle"><a href="#Install-Vundle" class="headerlink" title="Install Vundle"></a>Install Vundle</h2><blockquote><p>Vundle is short for Vim bundle and is a Vim plugin manager.<br>.<br>Vundle allows you to…</p><ul><li>keep track of and configure your plugins right in the .vimrc</li><li>install configured plugins (a.k.a. scripts/bundle)</li><li>update configured plugins</li><li>search by name all available Vim scripts</li><li>clean unused plugins up</li><li>run the above actions in a single keypress with interactive mode</li></ul><p>Vundle automatically…</p><ul><li>manages the runtime path of your installed scripts</li><li>regenerates help tags after installing and updating</li></ul></blockquote><h3 id="Install-Git"><a href="#Install-Git" class="headerlink" title="Install Git"></a>Install Git</h3><p>If your Linux does not install git, install it using the following commands.Because the <code>git clone</code> command is used during installation.<br><code>sudo yum install git</code></p><h3 id="Set-up-Vundle"><a href="#Set-up-Vundle" class="headerlink" title="Set up Vundle"></a>Set up Vundle</h3><p>Install Vundle using the following commands<br><code>git clone https://github.com/VundleVim/Vundle.vim.git /.vim/bundle/Vundle.vim</code></p><h3 id="Configure-Plugins"><a href="#Configure-Plugins" class="headerlink" title="Configure Plugins"></a>Configure Plugins</h3><p>Put this at the top of your <code>.vimrc</code>to use Vundle. Remove plugins you don’t need, they are for illustration purposes.<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> nocompatible              <span class="string">" be iMproved, required</span></span><br><span class="line"><span class="string">filetype off                  "</span> required</span><br><span class="line"></span><br><span class="line"><span class="string">" set the runtime path to include Vundle and initialize</span></span><br><span class="line"><span class="string">set rtp+=/.vim/bundle/Vundle.vim</span></span><br><span class="line"><span class="string">call vundle#begin()</span></span><br><span class="line"><span class="string">"</span> alternatively, pass a path <span class="built_in">where</span> Vundle should install plugins</span><br><span class="line"><span class="string">"call vundle#begin('/some/path/here')</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"</span> <span class="built_in">let</span> Vundle manage Vundle, required</span><br><span class="line">Plugin <span class="string">'VundleVim/Vundle.vim'</span></span><br><span class="line"></span><br><span class="line"><span class="string">" The following are examples of different formats supported.</span></span><br><span class="line"><span class="string">"</span> Keep Plugin commands between vundle<span class="comment">#begin/end.</span></span><br><span class="line"><span class="string">" plugin on GitHub repo</span></span><br><span class="line"><span class="string">Plugin 'tpope/vim-fugitive'</span></span><br><span class="line"><span class="string">"</span> plugin from http://vim-scripts.org/vim/scripts.html</span><br><span class="line"><span class="string">" Plugin 'L9'</span></span><br><span class="line"><span class="string">"</span> Git plugin not hosted on GitHub</span><br><span class="line">Plugin <span class="string">'git://git.wincent.com/command-t.git'</span></span><br><span class="line"><span class="string">" git repos on your local machine (i.e. when working on your own plugin)</span></span><br><span class="line"><span class="string">Plugin 'file:///home/gmarik/path/to/plugin'</span></span><br><span class="line"><span class="string">"</span> The sparkup vim script is <span class="keyword">in</span> a subdirectory of this repo called vim.</span><br><span class="line"><span class="string">" Pass the path to set the runtimepath properly.</span></span><br><span class="line"><span class="string">Plugin 'rstacruz/sparkup', &#123;'rtp': 'vim/'&#125;</span></span><br><span class="line"><span class="string">"</span> Install L9 and avoid a Naming conflict <span class="keyword">if</span> you<span class="string">'ve already installed a</span></span><br><span class="line"><span class="string">" different version somewhere else.</span></span><br><span class="line"><span class="string">" Plugin '</span>ascenator/L9<span class="string">', &#123;'</span>name<span class="string">': '</span>newL9<span class="string">'&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">" All of your Plugins must be added before the following line</span></span><br><span class="line"><span class="string">call vundle#end()            " required</span></span><br><span class="line"><span class="string">filetype plugin indent on    " required</span></span><br><span class="line"><span class="string">" To ignore plugin indent changes, instead use:</span></span><br><span class="line"><span class="string">"filetype plugin on</span></span><br><span class="line"><span class="string">"</span></span><br><span class="line"><span class="string">" Brief help</span></span><br><span class="line"><span class="string">" :PluginList       - lists configured plugins</span></span><br><span class="line"><span class="string">" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate</span></span><br><span class="line"><span class="string">" :PluginSearch foo - searches for foo; append `!` to refresh local cache</span></span><br><span class="line"><span class="string">" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal</span></span><br><span class="line"><span class="string">"</span></span><br><span class="line"><span class="string">" see :h vundle for more details or wiki for FAQ</span></span><br><span class="line"><span class="string">" Put your non-Plugin stuff after this line</span></span><br></pre></td></tr></table></figure></p><h2 id="Install-Vim-Plugins"><a href="#Install-Vim-Plugins" class="headerlink" title="Install Vim Plugins"></a>Install Vim Plugins</h2><p>With the <code>:PluginInstall</code>command, Vundle automatically downloads and installs the Vim plugin from <code>github.com</code> or <code>vim-scripts.org</code>.</p><h3 id="Configuration-of-vimrc"><a href="#Configuration-of-vimrc" class="headerlink" title="Configuration of .vimrc"></a>Configuration of .vimrc</h3><p>Installation Plugins from github:<br><code>Plugin ‘user/plugin’</code><br>Installation Plugins from <a href="http://vim-script.org/vim/scripts.html" target="_blank" rel="noopener">http://vim-script.org/vim/scripts.html</a>:<br><code>Plugin ‘plugin_name’</code><br>Installation Plugins from another github repositories:<br><code>Plugin ‘git://git.another_repo.com/plugin’</code></p><h3 id="Install-Plugins"><a href="#Install-Plugins" class="headerlink" title="Install Plugins"></a>Install Plugins</h3><p>Launch <code>vim</code> and run <code>:PluginInstall</code><br>To install from command line:<code>vim +PluginInstall +qall</code></p><h3 id="Vundle-commands"><a href="#Vundle-commands" class="headerlink" title="Vundle commands"></a>Vundle commands</h3><h4 id="Install-new-plug-ins"><a href="#Install-new-plug-ins" class="headerlink" title="Install new plug-ins"></a>Install new plug-ins</h4><p>The command <code>PluginInstall</code> can install all the plug-ins listed in your <code>.vimrc</code>. You could also install only one specific plug-in by passing its name.<br><code>:PluginInstall</code><br><code>:PluginInstall &lt;plugin-name&gt;</code></p><h4 id="Clean-up-unused-plug-ins"><a href="#Clean-up-unused-plug-ins" class="headerlink" title="Clean up unused plug-ins"></a>Clean up unused plug-ins</h4><p>The command <code>PluginClean</code> can clean up any plugins you have unused.<br><code>:PluginClean</code></p><h4 id="Search-plug-in"><a href="#Search-plug-in" class="headerlink" title="Search plug-in"></a>Search plug-in</h4><p>The search function is useful if you want to install a plugin from the list of plugins provided.<br>During the search, you can install, clean, research, or reload the same list on the interactive split screen. Install the plugin does not automatically load your plugin, if you want to automatically load the plugin and add the plugin to your <code>.vimrc</code>, such as <code>:PluginSearch taglist</code>, after completing the search, you can press ‘i’ to install.<br><code>:PluginSearch &lt;text-list&gt;</code></p><h2 id="Vim-Plugin-recommendation"><a href="#Vim-Plugin-recommendation" class="headerlink" title="Vim Plugin recommendation"></a>Vim Plugin recommendation</h2><p>The VIM plug-in can greatly improve the efficiency of vim usage. Here I introduce several better VIM plug-ins and show my VIM configuration file.</p><h3 id="VIM-Plugin"><a href="#VIM-Plugin" class="headerlink" title="VIM Plugin"></a>VIM Plugin</h3><ul><li>nerdtree<ul><li>vim-airline</li><li>vim-airline-themes</li></ul></li><li>tagbar</li><li>nerdcommenter</li><li>auto-pairs</li><li>DoxygenToolkit</li><li>Pydiction</li></ul><h3 id="vimrc"><a href="#vimrc" class="headerlink" title=".vimrc"></a>.vimrc</h3><p>Here is the <code>.vimrc</code> on my linux<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">" For full syntax highlighting</span></span><br><span class="line"><span class="string">syntax on</span></span><br><span class="line"><span class="string">"</span> make backspaces nore powerfull</span><br><span class="line"><span class="built_in">set</span> nocompatible              <span class="string">" be iMproved, required</span></span><br><span class="line"><span class="string">set backspace=indent,eol,start</span></span><br><span class="line"><span class="string">"</span> 启动时隐去援助提示</span><br><span class="line"><span class="built_in">set</span> shortmess=atI</span><br><span class="line"><span class="string">" 不需要备份</span></span><br><span class="line"><span class="string">set nobackup</span></span><br><span class="line"><span class="string">"</span> c文件自动缩进</span><br><span class="line"><span class="built_in">set</span> cindent</span><br><span class="line"><span class="string">" Tab自动转换成空格</span></span><br><span class="line"><span class="string">set expandtab</span></span><br><span class="line"><span class="string">"</span> 一个tab缩进字符</span><br><span class="line"><span class="built_in">set</span> tabstop=4</span><br><span class="line"><span class="string">" 编辑模式的时候按退格键退回缩进的长度</span></span><br><span class="line"><span class="string">set softtabstop=4</span></span><br><span class="line"><span class="string">"</span> 每一级锁进的长度</span><br><span class="line"><span class="built_in">set</span> shiftwidth=4</span><br><span class="line"><span class="string">" 自动锁进</span></span><br><span class="line"><span class="string">set autoindent</span></span><br><span class="line"><span class="string">"</span> 智能缩进</span><br><span class="line"><span class="built_in">set</span> smartindent</span><br><span class="line"><span class="string">" 高亮查找匹配</span></span><br><span class="line"><span class="string">set hlsearch</span></span><br><span class="line"><span class="string">"</span> 显示匹配</span><br><span class="line"><span class="built_in">set</span> showmatch</span><br><span class="line"><span class="string">" 显示标尺，就是在右下角光标位置</span></span><br><span class="line"><span class="string">set ruler</span></span><br><span class="line"><span class="string">"</span> 启动显示状态行</span><br><span class="line"><span class="built_in">set</span> laststatus=2</span><br><span class="line"><span class="string">" 浅色显示当前行</span></span><br><span class="line"><span class="string">autocmd InsertLeave * se nocul</span></span><br><span class="line"><span class="string">"</span> 用浅色高亮当前行</span><br><span class="line"><span class="string">"autocmd insertEnter * se cul</span></span><br><span class="line"><span class="string">"</span> 显示输入命令</span><br><span class="line"><span class="built_in">set</span> showcmd</span><br><span class="line"><span class="string">"I don't like swap files</span></span><br><span class="line"><span class="string">set noswapfile</span></span><br><span class="line"><span class="string">"</span>turn on numbering</span><br><span class="line"><span class="built_in">set</span> nu!</span><br><span class="line"><span class="string">" Set the default file encoding to UTF-8:</span></span><br><span class="line"><span class="string">set encoding=utf-8</span></span><br><span class="line"><span class="string">"</span> 设置双字款显示，否则无法显示一个图标</span><br><span class="line"><span class="built_in">set</span> ambiwidth=double</span><br><span class="line"><span class="string">" 被分割窗口之间显示空白</span></span><br><span class="line"><span class="string">set fillchars=vert:/ </span></span><br><span class="line"><span class="string">set fillchars=stl:/</span></span><br><span class="line"><span class="string">"</span><span class="built_in">set</span> fillchars=stlnc:/</span><br><span class="line"><span class="string">" 垂直分割线颜色</span></span><br><span class="line"><span class="string">"</span>:highlight VertSplit term=reverse ctermbg=242 guibg=DarkGrey</span><br><span class="line"><span class="string">":highlight VertSplit ctermfg=7 ctermbg=242 guifg=LightGrey guibg=DarkGrey</span></span><br><span class="line"><span class="string">:highlight VertSplit cterm=bold ctermfg=15 ctermbg=242 gui=bold guifg=White guibg=Grey40</span></span><br><span class="line"><span class="string">"</span> 鼠标当前行颜色</span><br><span class="line"><span class="string">":hi CursorLine   cterm=NONE ctermbg=darkred ctermfg=white guibg=darkred guifg=white</span></span><br><span class="line"><span class="string">"</span>:hi CursorLine cterm=NONE ctermfg=190 ctermbg=238</span><br><span class="line">:hi CursorLine cterm=NONE ctermbg=239</span><br><span class="line"><span class="string">" 鼠标当前列颜色</span></span><br><span class="line"><span class="string">:hi CursorColumn cterm=NONE ctermbg=darkred ctermfg=white guibg=darkred guifg=white</span></span><br><span class="line"><span class="string">:nnoremap \&lt;Leader\&gt;c :set cursorline! cursorcolumn!\&lt;CR\&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">set nocompatible              "</span> be iMproved, required</span><br><span class="line"><span class="string">" filetype off                  "</span> required</span><br><span class="line"></span><br><span class="line"><span class="string">" set the runtime path to include Vundle and initialize</span></span><br><span class="line"><span class="string">set rtp+=/.vim/bundle/Vundle.vim</span></span><br><span class="line"><span class="string">call vundle#begin()</span></span><br><span class="line"><span class="string">"</span> alternatively, pass a path <span class="built_in">where</span> Vundle should install plugins</span><br><span class="line"><span class="string">"call vundle#begin('/some/path/here')</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"</span> <span class="built_in">let</span> Vundle manage Vundle, required</span><br><span class="line">Plugin <span class="string">'VundleVim/Vundle.vim'</span></span><br><span class="line"></span><br><span class="line"><span class="string">" The following are examples of different formats supported.</span></span><br><span class="line"><span class="string">"</span> Keep Plugin commands between vundle<span class="comment">#begin/end.</span></span><br><span class="line"><span class="string">" plugin on GitHub repo</span></span><br><span class="line"><span class="string">Plugin 'tpope/vim-fugitive'</span></span><br><span class="line"><span class="string">"</span> plugin from http://vim-scripts.org/vim/scripts.html</span><br><span class="line"><span class="string">" Plugin 'L9'</span></span><br><span class="line"><span class="string">"</span> Git plugin not hosted on GitHub</span><br><span class="line">Plugin <span class="string">'git://git.wincent.com/command-t.git'</span></span><br><span class="line"><span class="string">" git repos on your local machine (i.e. when working on your own plugin)</span></span><br><span class="line"><span class="string">"</span> Plugin <span class="string">'file:///home/gmarik/path/to/plugin'</span></span><br><span class="line"><span class="string">" The sparkup vim script is in a subdirectory of this repo called vim.</span></span><br><span class="line"><span class="string">"</span> Pass the path to <span class="built_in">set</span> the runtimepath properly.</span><br><span class="line">Plugin <span class="string">'rstacruz/sparkup'</span>, &#123;<span class="string">'rtp'</span>: <span class="string">'vim/'</span>&#125;</span><br><span class="line"><span class="string">" Install L9 and avoid a Naming conflict if you've already installed a</span></span><br><span class="line"><span class="string">"</span> different version somewhere <span class="keyword">else</span>.</span><br><span class="line"><span class="string">" Plugin 'ascenator/L9', &#123;'name': 'newL9'&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Bundle 'scrooloose/nerdtree'</span></span><br><span class="line"><span class="string">Plugin 'vim-airline/vim-airline'</span></span><br><span class="line"><span class="string">Plugin 'vim-airline/vim-airline-themes'</span></span><br><span class="line"><span class="string">Bundle 'majutsushi/tagbar'</span></span><br><span class="line"><span class="string">Plugin 'scrooloose/nerdcommenter'</span></span><br><span class="line"><span class="string">Plugin 'jiangmiao/auto-pairs'</span></span><br><span class="line"><span class="string">Plugin 'vim-scripts/DoxygenToolkit.vim'</span></span><br><span class="line"><span class="string">Plugin 'vim-scripts/Pydiction'</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"</span> All of your Plugins must be added before the following line</span><br><span class="line">call vundle<span class="comment">#end()            " required</span></span><br><span class="line">filetype plugin indent on    <span class="string">" required</span></span><br><span class="line"><span class="string">"</span> To ignore plugin indent changes, instead use:</span><br><span class="line"><span class="string">"filetype plugin on</span></span><br><span class="line"><span class="string">"</span></span><br><span class="line"><span class="string">" Brief help</span></span><br><span class="line"><span class="string">"</span> :PluginList       - lists configured plugins</span><br><span class="line"><span class="string">" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate</span></span><br><span class="line"><span class="string">"</span> :PluginSearch foo - searches <span class="keyword">for</span> foo; append `!` to refresh <span class="built_in">local</span> cache</span><br><span class="line"><span class="string">" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal</span></span><br><span class="line"><span class="string">"</span></span><br><span class="line"><span class="string">" see :h vundle for more details or wiki for FAQ</span></span><br><span class="line"><span class="string">"</span> Put your non-Plugin stuff after this line</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">" NERDTree</span></span><br><span class="line"><span class="string">"</span> open a NERDTree automaticallyu when vim starts up</span><br><span class="line"><span class="string">" autocmd vimenter * NERDTree</span></span><br><span class="line"><span class="string">"</span> close vim <span class="keyword">if</span> the only window left open is a NERDTree</span><br><span class="line">autocmd bufenter * <span class="keyword">if</span> (winnr(<span class="string">"$"</span>) == 1 &amp;&amp; exists(<span class="string">"b:NERDTree"</span>) &amp;&amp; b:NERDTree.isTabTree()) | q | endif</span><br><span class="line"><span class="string">" open NERDTree automatically when vim starts up on opening a directory</span></span><br><span class="line"><span class="string">autocmd StdinReadPre * let s:std_in=1</span></span><br><span class="line"><span class="string">autocmd VimEnter * if argc() == 1 &amp;&amp; isdirectory(argv()[0]()) &amp;&amp; !exists("</span>s:std_in<span class="string">") | exe 'NERDTree' argv()[0]() | wincmd p | ene | endif</span></span><br><span class="line"><span class="string">map \&lt;C-n\&gt; :NERDTreeToggle\&lt;CR\&gt;</span></span><br><span class="line"><span class="string">let g:NERDTreeDirArrowExpandable = '▸'</span></span><br><span class="line"><span class="string">let g:NERDTreeDirArrowCollapsible = '▾'</span></span><br><span class="line"><span class="string">"</span> 窗口位置</span><br><span class="line"><span class="built_in">let</span> g:NERDTreeWinPos=<span class="string">'left'</span></span><br><span class="line"><span class="string">" 窗口尺寸</span></span><br><span class="line"><span class="string">let g:NERDTreeSize=30</span></span><br><span class="line"><span class="string">"</span> 窗口是否显示行号</span><br><span class="line"><span class="built_in">let</span> g:NERDTreeShowLineNumber=0</span><br><span class="line"><span class="string">" 不显示隐藏文件</span></span><br><span class="line"><span class="string">let g:NERDTreeHidden=0</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"</span> vim-airline</span><br><span class="line"><span class="built_in">let</span> g:airline<span class="comment">#extensions#tabline#enabled = 1</span></span><br><span class="line"><span class="built_in">let</span> g:airline<span class="comment">#extensions#tabline#left_sep = ' '</span></span><br><span class="line"><span class="built_in">let</span> g:airline<span class="comment">#extensions#tabline#left_alt_sep = '|'</span></span><br><span class="line"><span class="built_in">let</span> g:airline<span class="comment">#extensions#tabline#formatter = 'default'</span></span><br><span class="line"><span class="string">"let g:airline_theme='powerlineish'</span></span><br><span class="line"><span class="string">set laststatus=2</span></span><br><span class="line"><span class="string">set t_Co=256</span></span><br><span class="line"><span class="string">"</span><span class="built_in">set</span> fillchars+=stl:\ ,stlnc:\\</span><br><span class="line"><span class="built_in">let</span> g:airline_powerline_fonts = 1</span><br><span class="line"><span class="string">"打开tabline功能,方便查看Buffer和切换,省去了minibufexpl插件</span></span><br><span class="line"><span class="string">let g:airline#extensions#tabline#enabled = 1</span></span><br><span class="line"><span class="string">let g:airline#extensions#tabline#buffer_nr_show = 1</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"</span>设置切换Buffer快捷键<span class="string">"</span></span><br><span class="line"><span class="string">nnoremap \&lt;C-tab\&gt; :bn\&lt;CR\&gt;</span></span><br><span class="line"><span class="string">nnoremap \&lt;C-s-tab\&gt; :bp\&lt;CR\&gt;</span></span><br><span class="line"><span class="string">"</span> 关闭状态显示空白符号计数</span><br><span class="line"><span class="built_in">let</span> g:airline<span class="comment">#extensions#whitespace#enabled = 0</span></span><br><span class="line"><span class="built_in">let</span> g:airline<span class="comment">#extensions#whitespace#symbol = '!'</span></span><br><span class="line"><span class="string">" 设置consolas字体"</span>前面已经设置过</span><br><span class="line"><span class="string">"set guifont=Consolas\ for\ Powerline\ FixedD:h11</span></span><br><span class="line"><span class="string">if !exists('g:airline_symbols')</span></span><br><span class="line"><span class="string">  let g:airline_symbols = &#123;&#125;</span></span><br><span class="line"><span class="string">endif</span></span><br><span class="line"><span class="string">"</span> old vim-powerline symbols</span><br><span class="line"><span class="built_in">let</span> g:airline_left_sep = <span class="string">'⮀'</span></span><br><span class="line"><span class="built_in">let</span> g:airline_left_alt_sep = <span class="string">'⮁'</span></span><br><span class="line"><span class="built_in">let</span> g:airline_right_sep = <span class="string">'⮂'</span></span><br><span class="line"><span class="built_in">let</span> g:airline_right_alt_sep = <span class="string">'⮃'</span></span><br><span class="line"><span class="string">"let g:airline_symbols.branch = '⭠'</span></span><br><span class="line"><span class="string">let g:airline_symbols.branch = '⎇ '</span></span><br><span class="line"><span class="string">let g:airline_symbols.readonly = '⭤'</span></span><br><span class="line"><span class="string">let g:airline_symbols.linenr = '¶'</span></span><br><span class="line"><span class="string">let g:airline_detect_modified = 1</span></span><br><span class="line"><span class="string">let g:airline_detect_paste = 1</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"</span> tagbar</span><br><span class="line"><span class="string">" 设置tagbar使用ctags</span></span><br><span class="line"><span class="string">"</span> <span class="built_in">let</span> g:tagbar_ctags_bin=<span class="string">'/usr/bin/ctags'</span></span><br><span class="line"><span class="string">" 快捷键</span></span><br><span class="line"><span class="string">nmap \&lt;F9\&gt; :TagbarToggle\&lt;CR\&gt;</span></span><br><span class="line"><span class="string">"</span> 宽度</span><br><span class="line"><span class="built_in">let</span> g:tagbar_width=24</span><br><span class="line"><span class="string">" 开启自动预览，随着光标在标签上的移动，顶部出现一个实时预览窗口</span></span><br><span class="line"><span class="string">let g:tagbar_autopreview=1</span></span><br><span class="line"><span class="string">"</span> 关闭排序，即按照标签在文件中的位置排序</span><br><span class="line"><span class="built_in">let</span> g:bagbar_sort=0</span><br><span class="line"><span class="string">" 设置窗口在右边显示</span></span><br><span class="line"><span class="string">let g:tagbar_right=1</span></span><br><span class="line"><span class="string">"</span> 打开文件自动打开tagbar</span><br><span class="line"><span class="string">"autocmd BufReadPost *,*.cpp,*.c,*.h,*.cc,*.cxx call tagbar#autoopen()</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"</span> nerdcommenter</span><br><span class="line"><span class="string">" 将\修改映射为，</span></span><br><span class="line"><span class="string">nmap ,cc \&lt;leader\&gt;cc</span></span><br><span class="line"><span class="string">"</span> Add spaces after comment delimiters by default</span><br><span class="line"><span class="built_in">let</span> g:NERDSpaceDelims = 1</span><br><span class="line"></span><br><span class="line"><span class="string">" Use compact syntax for prettified multi-line comments</span></span><br><span class="line"><span class="string">let g:NERDCompactSexyComs = 1</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"</span> Align line-wise comment delimiters flush left instead of following code indentation</span><br><span class="line"><span class="built_in">let</span> g:NERDDefaultAlign = <span class="string">'left'</span></span><br><span class="line"></span><br><span class="line"><span class="string">" Set a language to use its alternate delimiters by default</span></span><br><span class="line"><span class="string">let g:NERDAltDelims_java = 1</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"</span> Add your own custom formats or override the defaults</span><br><span class="line"><span class="built_in">let</span> g:NERDCustomDelimiters = &#123; <span class="string">'c'</span>: &#123; <span class="string">'left'</span>: <span class="string">'/**'</span>,<span class="string">'right'</span>: <span class="string">'*/'</span> &#125; &#125;</span><br><span class="line"></span><br><span class="line"><span class="string">" Allow commenting and inverting empty lines (useful when commenting a region)</span></span><br><span class="line"><span class="string">let g:NERDCommentEmptyLines = 1</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"</span> Enable trimming of trailing whitespace when uncommenting</span><br><span class="line"><span class="built_in">let</span> g:NERDTrimTrailingWhitespace = 1</span><br><span class="line"></span><br><span class="line"><span class="string">" Enable NERDCommenterToggle to check all selected lines is commented or not </span></span><br><span class="line"><span class="string">let g:NERDToggleCheckAllLines = 1</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"</span> auto pairs</span><br><span class="line"><span class="built_in">let</span> g:AutoPairs = &#123;<span class="string">'('</span>:<span class="string">')'</span>, <span class="string">'['</span>:<span class="string">']()'</span>, <span class="string">'&#123;'</span>:<span class="string">'&#125;'</span>,<span class="string">"'"</span>:<span class="string">"'"</span>,<span class="string">'"'</span>:<span class="string">'"'</span>&#125; </span><br><span class="line"><span class="string">" 设置要自动配对的符号</span></span><br><span class="line"><span class="string">"</span> <span class="built_in">let</span> g:AutoPairs[<span class="string">'\&lt;'</span>]()=<span class="string">'\&gt;'</span></span><br><span class="line"><span class="string">" 添加要自动配对的符号\&lt;\&gt;</span></span><br><span class="line"><span class="string">"</span><span class="built_in">let</span> b:AutoPairs = g:AutoParis </span><br><span class="line"><span class="string">" 设置要自动配对的符号，默认为g:AutoPairs，可以通过自动命令来对不同文件类型设置不同自动匹配对符号。</span></span><br><span class="line"><span class="string">let g:AutoPairsShortcutToggle = '\&lt;M-p\&gt;' </span></span><br><span class="line"><span class="string">"</span> 设置插件打开/关闭的快捷键，默认为ALT+p。</span><br><span class="line"><span class="built_in">let</span> g:AutoPairsShortcutFastWrap = <span class="string">'\&lt;M-e\&gt;'</span> </span><br><span class="line"><span class="string">" 设置自动为文本添加圆括号的快捷键，默认为ALT+e。</span></span><br><span class="line"><span class="string">let g:AutoPairsShortcutJump = '\&lt;M-n\&gt;' </span></span><br><span class="line"><span class="string">"</span> 设置调到下一层括号对的快捷键，默认为ALT+n。</span><br><span class="line"><span class="built_in">let</span> g:AutoPairsShortcutBackInsert = <span class="string">'\&lt;M-b\&gt;'</span> </span><br><span class="line"><span class="string">" 设置撤销飞行模式的快捷键，默认为ALT+b。</span></span><br><span class="line"><span class="string">let g:AutoPairsMapBS = 1 </span></span><br><span class="line"><span class="string">"</span> 把BACKSPACE键映射为删除括号对和引号，默认为1。</span><br><span class="line"><span class="built_in">let</span> g:AutoPairsMapCh = 1 </span><br><span class="line"><span class="string">" 把ctrl+h键映射为删除括号对和引号，默认为1。</span></span><br><span class="line"><span class="string">let g:AutoPairsMapCR = 1 </span></span><br><span class="line"><span class="string">"</span> 把ENTER键映射为换行并缩进，默认为1。</span><br><span class="line"><span class="built_in">let</span> g:AutoPairsCenterLine = 1 </span><br><span class="line"><span class="string">" 当g:AutoPairsMapCR为1时，且文本位于窗口底部时，自动移到窗口中间。</span></span><br><span class="line"><span class="string">let g:AutoPairsMapSpace = 1 </span></span><br><span class="line"><span class="string">"</span> 把SPACE键映射为在括号两侧添加空格，默认为1。</span><br><span class="line"><span class="built_in">let</span> g:AutoPairsFlyMode = 0 </span><br><span class="line"><span class="string">" 启用飞行模式，默认为0。</span></span><br><span class="line"><span class="string">let g:AutoPairsMultilineClose = 1 </span></span><br><span class="line"><span class="string">"</span> 启用跳出多行括号对，默认为1，为0则只能跳出同一行的括号。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">" Doxygen</span></span><br><span class="line"><span class="string">imap cm \&lt;esc\&gt;:Dox\&lt;CR\&gt;</span></span><br><span class="line"><span class="string">map cm :Dox\&lt;CR\&gt;</span></span><br><span class="line"><span class="string">map fg : Dox\&lt;cr\&gt;</span></span><br><span class="line"><span class="string">let g:DoxygenToolkit_briefTag_funcName = "</span>yes<span class="string">"</span></span><br><span class="line"><span class="string">let g:DoxygenToolkit_undocTag="</span>DOXIGEN_SKIP_BLOCK<span class="string">"</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">let g:load_doxygen_syntax = 1</span></span><br><span class="line"><span class="string">"</span> 设置生成的文档的 Lisence 是///</span><br><span class="line"><span class="built_in">let</span> g:DoxygenToolKit_startCommentBlock = <span class="string">"/// "</span></span><br><span class="line"><span class="built_in">let</span> g:DoxygenToolKit_interCommentBlock = <span class="string">"/// "</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">let</span> g:DoxygenToolkit_briefTag_pre=<span class="string">"@Synopsis  "</span></span><br><span class="line"><span class="built_in">let</span> g:DoxygenToolkit_paramTag_pre=<span class="string">"@Param "</span></span><br><span class="line"><span class="built_in">let</span> g:DoxygenToolkit_returnTag=<span class="string">"@Returns   "</span></span><br><span class="line"><span class="string">" let g:DoxygenToolkit_blockHeader="</span>--------------------------------------------------------------------------<span class="string">"</span></span><br><span class="line"><span class="string">"</span> <span class="built_in">let</span> g:DoxygenToolkit_blockFooter=<span class="string">"----------------------------------------------------------------------------"</span></span><br><span class="line"><span class="built_in">let</span> g:DoxygenToolkit_authorName=<span class="string">"dugang, dugang_it@aliyun.com"</span></span><br><span class="line"><span class="string">"let g:DoxygenToolkit_licenseTag="</span>My own license<span class="string">"</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">let s:licenseTag = "</span>Unpublished copyright. All rights reserved. This material contains\&lt;enter\&gt;<span class="string">"</span></span><br><span class="line"><span class="string">let s:licenseTag = s:licenseTag . "</span>proprietary information that should be used or copied only within\&lt;enter\&gt;<span class="string">"</span></span><br><span class="line"><span class="string">let s:licenseTag = s:licenseTag . "</span>COMPANY, except with written permission of COMPANY.\&lt;enter\&gt;<span class="string">"</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">if !exists("</span>g:DoxygenToolkit_briefTag_lic_pre<span class="string">")</span></span><br><span class="line"><span class="string">  let g:DoxygenToolkit_briefTag_lic_pre = "</span>@brief:   <span class="string">"</span></span><br><span class="line"><span class="string">endif</span></span><br><span class="line"><span class="string">if !exists("</span>g:DoxygenToolkit_briefTag_pre<span class="string">")</span></span><br><span class="line"><span class="string">  let g:DoxygenToolkit_briefTag_pre = "</span>@brief: <span class="string">"</span></span><br><span class="line"><span class="string">endif</span></span><br><span class="line"><span class="string">if !exists("</span>g:DoxygenToolkit_fileTag<span class="string">")</span></span><br><span class="line"><span class="string">  let g:DoxygenToolkit_fileTag = "</span>@file:    <span class="string">"</span></span><br><span class="line"><span class="string">endif</span></span><br><span class="line"><span class="string">if !exists("</span>g:DoxygenToolkit_authorTag<span class="string">")</span></span><br><span class="line"><span class="string">  let g:DoxygenToolkit_authorTag = "</span>@author:  <span class="string">"</span></span><br><span class="line"><span class="string">endif</span></span><br><span class="line"><span class="string">if !exists("</span>g:DoxygenToolkit_dateTag<span class="string">")</span></span><br><span class="line"><span class="string">  let g:DoxygenToolkit_dateTag = "</span>@date:    <span class="string">"</span></span><br><span class="line"><span class="string">endif</span></span><br><span class="line"><span class="string">if !exists("</span>g:DoxygenToolkit_versionTag<span class="string">")</span></span><br><span class="line"><span class="string">  let g:DoxygenToolkit_versionTag = "</span>@version: <span class="string">"</span></span><br><span class="line"><span class="string">endif</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">function! \&lt;SID\&gt;DoxygenLicenseFunc()</span></span><br><span class="line"><span class="string">  call s:InitializeParameters()</span></span><br><span class="line"><span class="string">  "</span> Test authorName variable</span><br><span class="line">  <span class="keyword">if</span> !exists(<span class="string">"g:DoxygenToolkit_companyName"</span>)</span><br><span class="line"><span class="built_in">let</span> g:DoxygenToolkit_companyName = input(<span class="string">"Enter name of your company: "</span>)</span><br><span class="line">  endif</span><br><span class="line">  <span class="keyword">if</span> !exists(<span class="string">"g:DoxygenToolkit_authorName"</span>)</span><br><span class="line"><span class="built_in">let</span> g:DoxygenToolkit_authorName = input(<span class="string">"Enter name of the author (generally yours...) : "</span>)</span><br><span class="line">  endif</span><br><span class="line">  mark d</span><br><span class="line"></span><br><span class="line">  <span class="string">" Get file name</span></span><br><span class="line"><span class="string">  let l:fileName = expand('%:t')</span></span><br><span class="line"><span class="string">  let l:year = strftime("</span>%Y<span class="string">")</span></span><br><span class="line"><span class="string">  let l:copyright = "</span>Copyright (c) <span class="string">"</span></span><br><span class="line"><span class="string">  let l:copyright = l:copyright.l:year."</span> <span class="string">".g:DoxygenToolkit_companyName."</span>.<span class="string">"</span></span><br><span class="line"><span class="string">  let l:license = substitute( g:DoxygenToolkit_licenseTag, "</span>\&lt;enter\&gt;<span class="string">", "</span>\&lt;enter\&gt;<span class="string">".s:interCommentBlock, "</span>g<span class="string">" )</span></span><br><span class="line"><span class="string">  let l:license = substitute( l:license, "</span>COMPANY<span class="string">", g:DoxygenToolkit_companyName, "</span>g<span class="string">" )</span></span><br><span class="line"><span class="string">  exec "</span>normal O<span class="string">".s:startCommentBlock</span></span><br><span class="line"><span class="string">  exec "</span>normal o<span class="string">".s:interCommentTag.l:copyright."</span>\&lt;enter\&gt;<span class="string">".s:interCommentTag</span></span><br><span class="line"><span class="string">  exec "</span>normal o<span class="string">".s:interCommentTag.l:license</span></span><br><span class="line"><span class="string">  exec "</span>normal o<span class="string">".s:interCommentTag.g:DoxygenToolkit_fileTag.l:fileName</span></span><br><span class="line"><span class="string">  exec "</span>normal o<span class="string">".s:interCommentTag.g:DoxygenToolkit_briefTag_lic_pre</span></span><br><span class="line"><span class="string">  mark d</span></span><br><span class="line"><span class="string">  exec "</span>normal o<span class="string">".s:interCommentTag.g:DoxygenToolkit_authorTag.g:DoxygenToolkit_authorName</span></span><br><span class="line"><span class="string">  exec "</span>normal o<span class="string">".s:interCommentTag.g:DoxygenToolkit_versionTag."</span>1.0<span class="string">"</span></span><br><span class="line"><span class="string">  let l:date = strftime("</span>%Y-%m-%d<span class="string">")</span></span><br><span class="line"><span class="string">  exec "</span>normal o<span class="string">".s:interCommentTag.g:DoxygenToolkit_dateTag.l:date</span></span><br><span class="line"><span class="string">  if( s:endCommentBlock != "</span><span class="string">" )</span></span><br><span class="line"><span class="string">exec "</span>normal o<span class="string">".s:endCommentBlock</span></span><br><span class="line"><span class="string">  endif</span></span><br><span class="line"><span class="string">  exec "</span>normal `d<span class="string">"</span></span><br><span class="line"><span class="string">`  call s:RestoreParameters()</span></span><br><span class="line"><span class="string">  startinsert!</span></span><br><span class="line"><span class="string">endfunction</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"</span> pydiction</span><br><span class="line">filetype plugin on</span><br><span class="line"><span class="built_in">let</span> g:pydiction_location = <span class="string">'/.vim/bundle/Pydiction/complete-dict'</span></span><br><span class="line"><span class="built_in">let</span> g:pydiction_menu_height = 8</span><br><span class="line">autocmd FileType python <span class="built_in">set</span> omnifunc=pythoncomplete<span class="comment">#Complete  </span></span><br><span class="line">autocmd FileType javascrīpt <span class="built_in">set</span> omnifunc=javascriptcomplete<span class="comment">#CompleteJS  </span></span><br><span class="line">autocmd FileType html <span class="built_in">set</span> omnifunc=htmlcomplete<span class="comment">#CompleteTags  </span></span><br><span class="line">autocmd FileType css <span class="built_in">set</span> omnifunc=csscomplete<span class="comment">#CompleteCSS  </span></span><br><span class="line">autocmd FileType xml <span class="built_in">set</span> omnifunc=xmlcomplete<span class="comment">#CompleteTags  </span></span><br><span class="line">autocmd FileType php <span class="built_in">set</span> omnifunc=phpcomplete<span class="comment">#CompletePHP  </span></span><br><span class="line">autocmd FileType c <span class="built_in">set</span> omnifunc=ccomplete<span class="comment">#Complete</span></span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> text editor </category>
          
      </categories>
      
      
        <tags>
            
            <tag> text editor </tag>
            
            <tag> vim </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Sublime配置Python开发环境</title>
      <link href="/2017/05/19/Sublime%E4%B8%AD%E9%85%8D%E7%BD%AEPython%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/"/>
      <url>/2017/05/19/Sublime%E4%B8%AD%E9%85%8D%E7%BD%AEPython%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</url>
      
        <content type="html"><![CDATA[<p>Sublime text3是一款跨平台的非常好用的编辑器，插件多，界面酷，属于轻量级的编辑器。经过配置，可以作为Python的编译器使用，下面是我的配置方法，以Windows为例。</p><h2 id="安装Python"><a href="#安装Python" class="headerlink" title="安装Python"></a>安装Python</h2><p>直接去Python官网下载安装，安装比较简单，这里不再赘述<br><img src="python.png" alt="python"></p><h2 id="配置Sublime"><a href="#配置Sublime" class="headerlink" title="配置Sublime"></a>配置Sublime</h2><p>点击Tools -&gt; Build System -&gt; New Build System…</p><p>复制下面的代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">&quot;cmd&quot;: [&quot;D:\Python36\python.exe&quot;,&quot;-u&quot;,&quot;$file&quot;],</span><br><span class="line">&quot;file_regex&quot;: &quot;^[ ]*File \&quot;(...*?)\&quot;, line ([0-9]*)&quot;,</span><br><span class="line">&quot;selector&quot;: &quot;source.python&quot;,</span><br><span class="line">&quot;encoding&quot;: &quot;cp936&quot;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>“D:\Python36\python.exe” 是你的python安装路径，然后保存为 Python.sublime-build</p><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>再编辑器里新建Python文件，输入下面代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">array = [1,2,5,3,6,8,4]</span><br><span class="line">for i in range(len(array)-1,0,-1):</span><br><span class="line">    for j in range(0,i):</span><br><span class="line">        if array[j]&gt;array[j+1]:</span><br><span class="line">            array[j],array[j+1] = array[j+1],array[j]</span><br><span class="line">print (array)</span><br></pre></td></tr></table></figure><br>然后按 Ctrl+b 会出现如下图所示的运行结果，说明配置成功<br><img src="result.png" alt="result"></p>]]></content>
      
      
      <categories>
          
          <category> text editor </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sublime </tag>
            
            <tag> text editor </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
